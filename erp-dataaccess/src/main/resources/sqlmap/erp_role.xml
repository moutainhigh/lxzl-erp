<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.user.RoleMapper">

    <resultMap id="RoleDO" type="com.lxzl.erp.dataaccess.domain.user.RoleDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId"/>
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName"/>
        <result column="role_desc" jdbcType="VARCHAR" property="roleDesc"/>
        <result column="is_super_admin" jdbcType="VARCHAR" property="isSuperAdmin"/>
        <result column="data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="role_type" jdbcType="INTEGER" property="roleType"/>
    </resultMap>

    <sql id="column_List">
        er.id,er.role_name,er.role_desc,er.is_super_admin,er.data_status,er.remark,er.create_time,er.update_time,er.role_type
    </sql>
    <select id="findById" resultMap="RoleDO" parameterType="java.lang.Integer">
        SELECT <include refid="column_List"/> FROM erp_role er
        WHERE er.id = #{id, jdbcType=INTEGER} AND er.data_status = 1
    </select>
    <select id="findList" resultMap="RoleDO" parameterType="map">
        select
        <include refid="column_List"/>,
        ed.id as department_id, ed.department_name as department_name,
        esc.id as sub_company_id, esc.sub_company_name as sub_company_name
        from erp_role er
        left join erp_department ed on ed.id = er.department_id and er.data_status = 1
        left join erp_sub_company esc on esc.id = ed.sub_company_id and esc.data_status = 1
        <where>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.departmentId != null">
                and er.department_id = #{maps.roleQueryParam.departmentId, jdbcType=INTEGER}
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.roleId != null">
                and er.id = #{maps.roleQueryParam.roleId, jdbcType=INTEGER}
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.roleName != null &amp;&amp; maps.roleQueryParam.roleName != ''">
                and er.role_name like CONCAT('%','${maps.roleQueryParam.roleName}','%' )
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.fullRoleName != null &amp;&amp; maps.roleQueryParam.fullRoleName != ''">
                and er.role_name  = #{maps.roleQueryParam.fullRoleName, jdbcType=VARCHAR}
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.subCompanyId != null">
                and ed.sub_company_id = #{maps.roleQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="true">
                and er.data_status = 1
                and er.is_super_admin = 0
            </if>
        </where>
        order by er.id
        limit #{maps.start},#{maps.pageSize}
    </select>

    <select id="findListCount" resultType="java.lang.Integer" parameterType="map">
        select count(1)
        from erp_role er
        <where>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.departmentId != null">
                and er.department_id = #{maps.roleQueryParam.departmentId, jdbcType=INTEGER}
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.roleId != null">
                and er.id = #{maps.roleQueryParam.roleId, jdbcType=INTEGER}
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.roleName != null &amp;&amp; maps.roleQueryParam.roleName != ''">
                and er.role_name like CONCAT('%','${maps.roleQueryParam.roleName}','%' )
            </if>
            <if test="maps.roleQueryParam != null &amp;&amp; maps.roleQueryParam.fullRoleName != null &amp;&amp; maps.roleQueryParam.fullRoleName != ''">
                and er.role_name = #{maps.roleQueryParam.fullRoleName, jdbcType=VARCHAR}
            </if>
            <if test="true">
                and er.data_status = 1
                and er.is_super_admin = 0
            </if>
        </where>
    </select>

    <select id="findByMapId" resultMap="RoleDO" parameterType="java.lang.Integer">
        select
        <include refid="column_List"/>,
        ed.id as department_id, ed.department_name as department_name,
        esc.id as sub_company_id, esc.sub_company_name as sub_company_name
        from erp_role er
        left join erp_department ed on ed.id = er.department_id and er.data_status = 1
        left join erp_sub_company esc on esc.id = ed.sub_company_id and esc.data_status = 1
        where er.id = #{roleId, jdbcType=INTEGER} and er.data_status = 1
    </select>

    <select id="findByUserId" resultMap="RoleDO" parameterType="java.lang.Integer">
        select
        <include refid="column_List"/>,
        ed.id as department_id, ed.department_name as department_name,
        esc.id as sub_company_id, esc.sub_company_name as sub_company_name
        from erp_role er
        inner join erp_user_role eur on er.id = eur.role_id and eur.data_status = 1
        left join erp_department ed on ed.id = er.department_id and er.data_status = 1
        left join erp_sub_company esc on esc.id = ed.sub_company_id and esc.data_status = 1
        where eur.user_id = #{userId, jdbcType=INTEGER} and er.data_status = 1
    </select>

    <sql id="set_column_sql">
        <set>
            <if test="roleName != null">
                role_name = #{roleName, jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId, jdbcType=INTEGER},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc, jdbcType=VARCHAR},
            </if>
            <if test="isSuperAdmin != null">
                is_super_admin = #{isSuperAdmin, jdbcType=INTEGER},
            </if>
            <if test="dataStatus != null">
                data_status = #{dataStatus, jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark, jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser, jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
            <if test="roleType != null">
                role_type = #{roleType, jdbcType=INTEGER},
            </if>
        </set>
    </sql>

    <insert id="save" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.lxzl.erp.dataaccess.domain.user.RoleDO">
        INSERT INTO erp_role
        <include refid="set_column_sql"/>
    </insert>

    <update id="update" parameterType="com.lxzl.erp.dataaccess.domain.user.RoleDO">
        update erp_role
        <include refid="set_column_sql"/>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>
</mapper>
