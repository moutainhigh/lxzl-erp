<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.order.OrderMapper">

    <resultMap type="com.lxzl.erp.dataaccess.domain.order.OrderDO" id="OrderDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="delivery_mode" jdbcType="INTEGER" property="deliveryMode"/>
        <result column="buyer_customer_id" jdbcType="INTEGER" property="buyerCustomerId"/>
        <result column="buyer_customer_no" jdbcType="VARCHAR" property="buyerCustomerNo"/>
        <result column="buyer_customer_name" jdbcType="VARCHAR" property="buyerCustomerName"/>
        <result column="expect_delivery_time" jdbcType="TIMESTAMP" property="expectDeliveryTime"/>
        <result column="rent_start_time" jdbcType="TIMESTAMP" property="rentStartTime"/>
        <result column="rent_type" jdbcType="INTEGER" property="rentType"/>
        <result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength"/>
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType"/>
        <result column="total_deposit_amount" jdbcType="DECIMAL" property="totalDepositAmount"/>
        <result column="total_must_deposit_amount" jdbcType="DECIMAL" property="totalMustDepositAmount"/>
        <result column="total_credit_deposit_amount" jdbcType="DECIMAL" property="totalCreditDepositAmount"/>
        <result column="total_rent_deposit_amount" jdbcType="INTEGER" property="totalRentDepositAmount"/>
        <result column="total_insurance_amount" jdbcType="DECIMAL" property="totalInsuranceAmount"/>
        <result column="total_product_count" jdbcType="INTEGER" property="totalProductCount"/>
        <result column="total_product_amount" jdbcType="DECIMAL" property="totalProductAmount"/>
        <result column="total_product_deposit_amount" jdbcType="DECIMAL" property="totalProductDepositAmount"/>
        <result column="total_product_credit_deposit_amount" jdbcType="DECIMAL"
                property="totalProductCreditDepositAmount"/>
        <result column="total_product_rent_deposit_amount" jdbcType="DECIMAL" property="totalProductRentDepositAmount"/>
        <result column="total_material_count" jdbcType="INTEGER" property="totalMaterialCount"/>
        <result column="total_material_amount" jdbcType="DECIMAL" property="totalMaterialAmount"/>
        <result column="total_material_deposit_amount" jdbcType="DECIMAL" property="totalMaterialDepositAmount"/>
        <result column="total_material_credit_deposit_amount" jdbcType="DECIMAL"
                property="totalMaterialCreditDepositAmount"/>
        <result column="total_material_rent_deposit_amount" jdbcType="DECIMAL"
                property="totalMaterialRentDepositAmount"/>
        <result column="total_order_amount" jdbcType="DECIMAL" property="totalOrderAmount"/>
        <result column="total_paid_order_amount" jdbcType="DECIMAL" property="totalPaidOrderAmount"/>
        <result column="total_discount_amount" jdbcType="DECIMAL" property="totalDiscountAmount"/>
        <result column="logistics_amount" jdbcType="DECIMAL" property="logisticsAmount"/>
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId"/>
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName"/>
        <result column="order_seller_phone" jdbcType="VARCHAR" property="orderSellerPhone"/>
        <result column="order_union_seller_id" jdbcType="INTEGER" property="orderUnionSellerId"/>
        <result column="order_sub_company_id" jdbcType="INTEGER" property="orderSubCompanyId"/>
        <result column="delivery_sub_company_id" jdbcType="INTEGER" property="deliverySubCompanyId"/>
        <result column="order_sub_company_name" jdbcType="VARCHAR" property="orderSubCompanyName"/>
        <result column="delivery_sub_company_name" jdbcType="VARCHAR" property="deliverySubCompanyName"/>
        <result column="order_status" jdbcType="INTEGER" property="orderStatus"/>
        <result column="first_need_pay_amount" jdbcType="INTEGER" property="firstNeedPayAmount"/>
        <result column="pay_status" jdbcType="INTEGER" property="payStatus"/>
        <result column="is_peer" jdbcType="INTEGER" property="isPeer"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime"/>
        <result column="confirm_delivery_time" jdbcType="TIMESTAMP" property="confirmDeliveryTime"/>
        <result column="expect_return_time" jdbcType="TIMESTAMP" property="expectReturnTime"/>
        <result column="actual_return_time" jdbcType="TIMESTAMP" property="actualReturnTime"/>
        <result column="high_tax_rate" jdbcType="INTEGER" property="highTaxRate"/>
        <result column="low_tax_rate" jdbcType="INTEGER" property="lowTaxRate"/>
        <result column="buyer_remark" jdbcType="VARCHAR" property="buyerRemark"/>
        <result column="product_summary" jdbcType="VARCHAR" property="productSummary"/>
        <result column="is_k3_order" jdbcType="INTEGER" property="isK3Order"/>
        <result column="statement_date" jdbcType="INTEGER" property="statementDate" />
        <result column="order_message" jdbcType="VARCHAR" property="orderMessage" />
        <result column="cancel_order_reason_type" jdbcType="INTEGER" property="cancelOrderReasonType" />
        <result column="relet_order_id_alias" jdbcType="INTEGER" property="reletOrderId"/>
        <result column="data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="owner" jdbcType="INTEGER" property="owner"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <collection property="orderProductDOList" resultMap="OrderProductDO"/>
        <collection property="orderMaterialDOList" resultMap="OrderMaterialDO"/>
        <collection property="orderConsignInfoDO" resultMap="OrderConsignInfoDO"/>
        <collection property="orderTimeAxisDOList" resultMap="OrderTimeAxisDO"/>
        <collection property="reletOrderDOList" resultMap="ReletOrderDO"/>
        <collection property="orderJointProductDOList" resultMap="OrderJointProductDO"/>
    </resultMap>

    <resultMap type="com.lxzl.erp.dataaccess.domain.order.OrderProductDO" id="OrderProductDO">
        <id column="order_product_id" property="id"/>
        <result column="product_order_id" property="orderId"/>
        <result column="product_rent_type" jdbcType="INTEGER" property="rentType"/>
        <result column="product_rent_time_length" jdbcType="INTEGER" property="rentTimeLength"/>
        <result column="product_rent_length_type" jdbcType="INTEGER" property="rentLengthType"/>
        <result column="product_product_id" property="productId"/>
        <result column="product_product_name" property="productName"/>
        <result column="product_product_sku_id" property="productSkuId"/>
        <result column="product_product_sku_name" property="productSkuName"/>
        <result column="product_product_count" property="productCount"/>
        <result column="product_stable_product_count" property="stableProductCount"/>
        <result column="product_product_unit_amount" property="productUnitAmount"/>
        <result column="product_product_amount" property="productAmount"/>
        <result column="product_rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount"/>
        <result column="product_deposit_amount" jdbcType="DECIMAL" property="depositAmount"/>
        <result column="product_credit_deposit_amount" jdbcType="DECIMAL" property="creditDepositAmount"/>
        <result column="product_insurance_amount" jdbcType="DECIMAL" property="insuranceAmount"/>
        <result column="product_product_sku_snapshot" property="productSkuSnapshot"/>
        <result column="product_deposit_cycle" jdbcType="INTEGER" property="depositCycle"/>
        <result column="product_payment_cycle" jdbcType="INTEGER" property="paymentCycle"/>
        <result column="product_pay_mode" jdbcType="INTEGER" property="payMode"/>
        <result column="product_is_new_product" jdbcType="INTEGER" property="isNewProduct"/>
        <result column="product_renting_product_count" jdbcType="INTEGER" property="rentingProductCount"/>
        <result column="product_data_status" property="dataStatus"/>
        <result column="product_remark" property="remark"/>
        <result column="product_create_user" property="createUser"/>
        <result column="product_create_time" property="createTime"/>
        <result column="product_update_user" property="updateUser"/>
        <result column="product_update_time" property="updateTime"/>
        <result column="product_FEntry_id" property="FEntryID"/>
        <result column="product_product_number" property="productNumber"/>
        <result column="product_order_joint_product_id" jdbcType="INTEGER" property="orderJointProductId" />
        <result column="product_joint_product_product_id" jdbcType="INTEGER" property="jointProductProductId" />
    </resultMap>

    <resultMap id="OrderMaterialDO" type="com.lxzl.erp.dataaccess.domain.order.OrderMaterialDO">
        <id column="material_id" jdbcType="INTEGER" property="id"/>
        <result column="material_order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="material_rent_type" jdbcType="INTEGER" property="rentType"/>
        <result column="material_rent_time_length" jdbcType="INTEGER" property="rentTimeLength"/>
        <result column="material_rent_length_type" jdbcType="INTEGER" property="rentLengthType"/>
        <result column="material_material_id" jdbcType="INTEGER" property="materialId"/>
        <result column="material_material_name" jdbcType="VARCHAR" property="materialName"/>
        <result column="material_material_count" jdbcType="INTEGER" property="materialCount"/>
        <result column="material_stable_material_count" jdbcType="INTEGER" property="stableMaterialCount"/>
        <result column="material_material_unit_amount" jdbcType="DECIMAL" property="materialUnitAmount"/>
        <result column="material_material_amount" jdbcType="DECIMAL" property="materialAmount"/>
        <result column="material_deposit_amount" jdbcType="DECIMAL" property="depositAmount"/>
        <result column="material_credit_deposit_amount" jdbcType="DECIMAL" property="creditDepositAmount"/>
        <result column="material_insurance_amount" jdbcType="DECIMAL" property="insuranceAmount"/>
        <result column="material_material_snapshot" jdbcType="VARCHAR" property="materialSnapshot"/>
        <result column="material_rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount"/>
        <result column="material_deposit_cycle" jdbcType="INTEGER" property="depositCycle"/>
        <result column="material_renting_material_count" jdbcType="INTEGER" property="rentingMaterialCount"/>
        <result column="material_payment_cycle" jdbcType="INTEGER" property="paymentCycle"/>
        <result column="material_pay_mode" jdbcType="INTEGER" property="payMode"/>
        <result column="material_is_new_material" jdbcType="INTEGER" property="isNewMaterial"/>
        <result column="material_data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="material_remark" jdbcType="VARCHAR" property="remark"/>
        <result column="material_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="material_create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="material_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="material_update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="material_FEntry_id" property="FEntryID"/>
        <result column="material_product_number" property="productNumber"/>
        <result column="material_order_joint_product_id" jdbcType="INTEGER" property="orderJointProductId" />
        <result column="material_joint_material_id" jdbcType="INTEGER" property="jointMaterialId" />
    </resultMap>

    <resultMap id="OrderJointProductDO" type="com.lxzl.erp.dataaccess.domain.order.OrderJointProductDO">
        <id column="order_joint_product_id" jdbcType="INTEGER" property="id"/>
        <result column="order_joint_product_order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="order_joint_product_joint_product_count" jdbcType="INTEGER" property="jointProductCount"/>
        <result column="order_joint_product_joint_product_id" jdbcType="INTEGER" property="jointProductId"/>
        <result column="order_joint_product_name" jdbcType="VARCHAR" property="jointProductName"/>
        <result column="order_joint_product_data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="order_joint_product_remark" jdbcType="VARCHAR" property="remark"/>
        <result column="order_joint_product_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="order_joint_product_create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="order_joint_product_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="order_joint_product_update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="order_joint_product_is_new" jdbcType="INTEGER" property="isNew" />
    </resultMap>

    <resultMap type="com.lxzl.erp.dataaccess.domain.order.OrderConsignInfoDO" id="OrderConsignInfoDO">
        <id column="consign_id" property="id"/>
        <result column="consign_order_id" property="orderId"/>
        <result column="consign_customer_consign_id" property="customerConsignId"/>
        <result column="consign_consignee_name" property="consigneeName"/>
        <result column="consign_consignee_phone" property="consigneePhone"/>
        <result column="consign_province" property="province"/>
        <result column="consign_city" property="city"/>
        <result column="consign_district" property="district"/>
        <result column="province_name" property="provinceName"/>
        <result column="city_name" property="cityName"/>
        <result column="district_name" property="districtName"/>
        <result column="consign_address" property="address"/>
        <result column="consign_data_status" property="dataStatus"/>
        <result column="consign_remark" property="remark"/>
        <result column="consign_create_user" property="createUser"/>
        <result column="consign_create_time" property="createTime"/>
        <result column="consign_update_user" property="updateUser"/>
        <result column="consign_update_time" property="updateTime"/>
    </resultMap>

    <resultMap id="OrderTimeAxisDO" type="com.lxzl.erp.dataaccess.domain.order.OrderTimeAxisDO">
        <id column="time_axis_id" jdbcType="INTEGER" property="id"/>
        <result column="time_axis_order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="time_axis_order_status" jdbcType="INTEGER" property="orderStatus"/>
        <result column="time_axis_generation_time" jdbcType="TIMESTAMP" property="generationTime"/>
        <result column="time_axis_order_snapshot" jdbcType="VARCHAR" property="orderSnapshot"/>
        <result column="time_axis_data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="time_axis_remark" jdbcType="VARCHAR" property="remark"/>
        <result column="time_axis_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="time_axis_create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="time_axis_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="time_axis_update_user" jdbcType="VARCHAR" property="updateUser"/>
    </resultMap>


    <resultMap id="ReletOrderDO" type="com.lxzl.erp.dataaccess.domain.reletorder.ReletOrderDO">
        <id column="relet_id" jdbcType="INTEGER" property="id" />
        <result column="relet_relet_order_no" jdbcType="VARCHAR" property="reletOrderNo" />
        <result column="relet_order_id" jdbcType="INTEGER" property="orderId" />
        <result column="relet_order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="relet_buyer_customer_id" jdbcType="INTEGER" property="buyerCustomerId" />
        <result column="relet_buyer_customer_no" jdbcType="VARCHAR" property="buyerCustomerNo" />
        <result column="relet_buyer_customer_name" jdbcType="VARCHAR" property="buyerCustomerName" />
        <result column="relet_order_sub_company_id" jdbcType="INTEGER" property="orderSubCompanyId" />
        <result column="relet_delivery_sub_company_id" jdbcType="INTEGER" property="deliverySubCompanyId" />
        <result column="relet_rent_type" jdbcType="INTEGER" property="rentType" />
        <result column="relet_rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
        <result column="relet_rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="relet_rent_start_time" jdbcType="TIMESTAMP" property="rentStartTime" />
        <result column="relet_total_product_count" jdbcType="INTEGER" property="totalProductCount" />
        <result column="relet_total_product_amount" jdbcType="DECIMAL" property="totalProductAmount" />
        <result column="relet_total_material_count" jdbcType="INTEGER" property="totalMaterialCount" />
        <result column="relet_total_material_amount" jdbcType="DECIMAL" property="totalMaterialAmount" />
        <result column="relet_total_order_amount" jdbcType="DECIMAL" property="totalOrderAmount" />
        <result column="relet_total_paid_order_amount" jdbcType="DECIMAL" property="totalPaidOrderAmount" />
        <result column="relet_order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="relet_order_union_seller_id" jdbcType="INTEGER" property="orderUnionSellerId" />
        <result column="relet_total_discount_amount" jdbcType="DECIMAL" property="totalDiscountAmount" />
        <result column="relet_relet_order_status" jdbcType="INTEGER" property="reletOrderStatus" />
        <result column="relet_pay_status" jdbcType="INTEGER" property="payStatus" />
        <result column="relet_pay_time" jdbcType="TIMESTAMP" property="payTime" />
        <result column="relet_expect_return_time" jdbcType="TIMESTAMP" property="expectReturnTime" />
        <result column="relet_actual_return_time" jdbcType="TIMESTAMP" property="actualReturnTime" />
        <result column="relet_high_tax_rate" jdbcType="INTEGER" property="highTaxRate" />
        <result column="relet_low_tax_rate" jdbcType="INTEGER" property="lowTaxRate" />
        <result column="relet_statement_date" jdbcType="INTEGER" property="statementDate" />
        <result column="relet_buyer_remark" jdbcType="VARCHAR" property="buyerRemark" />
        <result column="relet_product_summary" jdbcType="VARCHAR" property="productSummary" />
        <result column="relet_data_status" jdbcType="INTEGER" property="dataStatus" />
        <result column="relet_remark" jdbcType="VARCHAR" property="remark" />
        <result column="relet_owner" jdbcType="INTEGER" property="owner" />
        <result column="relet_create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="relet_create_user" jdbcType="VARCHAR" property="createUser" />
        <result column="relet_update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="relet_update_user" jdbcType="VARCHAR" property="updateUser" />
    </resultMap>


    <sql id="column_List">
        eo.id as id,eo.order_no as order_no,eo.buyer_customer_id as buyer_customer_id,eo.buyer_customer_name as buyer_customer_name,eo.delivery_mode as delivery_mode,eo.rent_start_time as rent_start_time,eo.rent_type as rent_type,eo.rent_time_length as rent_time_length,eo.rent_length_type as rent_length_type,eo.expect_delivery_time as expect_delivery_time,eo.total_deposit_amount as total_deposit_amount,eo.total_must_deposit_amount as total_must_deposit_amount,eo.total_credit_deposit_amount as total_credit_deposit_amount,eo.total_insurance_amount as total_insurance_amount,eo.total_rent_deposit_amount,eo.total_product_count as total_product_count,eo.total_product_amount as total_product_amount,eo.total_product_deposit_amount as total_product_deposit_amount,eo.total_product_credit_deposit_amount as total_product_credit_deposit_amount,eo.total_product_rent_deposit_amount as total_product_rent_deposit_amount,eo.total_material_count as total_material_count,eo.total_material_amount as total_material_amount,eo.total_material_deposit_amount as total_material_deposit_amount,eo.total_material_credit_deposit_amount as total_material_credit_deposit_amount,eo.total_material_rent_deposit_amount as total_material_rent_deposit_amount,eo.total_order_amount as total_order_amount,eo.total_paid_order_amount as total_paid_order_amount,eo.total_discount_amount as total_discount_amount,eo.logistics_amount as logistics_amount,eo.order_seller_id as order_seller_id,eo.order_union_seller_id as order_union_seller_id,eo.order_sub_company_id as order_sub_company_id,eo.order_status as order_status, eo.first_need_pay_amount as first_need_pay_amount,eo.pay_status as pay_status,eo.is_peer as is_peer,eo.pay_time as pay_time,eo.delivery_time as delivery_time,eo.confirm_delivery_time as confirm_delivery_time,eo.expect_return_time as expect_return_time,eo.actual_return_time as actual_return_time,eo.high_tax_rate as high_tax_rate,eo.low_tax_rate as low_tax_rate,eo.buyer_remark as buyer_remark,eo.product_summary as product_summary,eo.is_k3_order as is_k3_order,eo.data_status as data_status,eo.remark as remark,eo.owner as owner,eo.create_time as create_time,eo.create_user as create_user,eo.update_time as update_time,eo.update_user as update_user,eo.delivery_sub_company_id as delivery_sub_company_id,eo.statement_date as statement_date,eo.order_message as order_message,eo.cancel_order_reason_type as cancel_order_reason_type,eo.relet_order_id as relet_order_id_alias
    </sql>

    <sql id="product_column_List">
        eop.id as order_product_id,eop.order_id as product_order_id,eop.rent_type as product_rent_type,eop.rent_time_length as product_rent_time_length,eop.rent_length_type as product_rent_length_type,eop.product_id as product_product_id,eop.product_name as product_product_name,eop.product_sku_id as product_product_sku_id,eop.product_sku_name as product_product_sku_name,eop.product_count as product_product_count,eop.product_unit_amount as product_product_unit_amount,eop.product_amount as product_product_amount,eop.rent_deposit_amount as product_rent_deposit_amount,eop.deposit_amount as product_deposit_amount,eop.credit_deposit_amount as product_credit_deposit_amount,eop.insurance_amount as product_insurance_amount, eop.product_sku_snapshot as product_product_sku_snapshot,eop.deposit_cycle as product_deposit_cycle,eop.payment_cycle as product_payment_cycle,eop.pay_mode as product_pay_mode,eop.is_new_product as product_is_new_product,eop.data_status as product_data_status,eop.remark as product_remark,eop.create_time as product_create_time,eop.create_user as product_create_user,eop.update_time as product_update_time,eop.update_user as product_update_user,eop.renting_product_count as product_renting_product_count,eop.product_number as product_product_number,eop.FEntry_id as product_FEntry_id,eop.order_joint_product_id as product_order_joint_product_id,eop.joint_product_product_id as product_joint_product_product_id,eop.stable_product_count as product_stable_product_count
    </sql>

    <sql id="consign_column_List">
        eoci.id as consign_id,eoci.order_id as consign_order_id,eoci.customer_consign_id as consign_customer_consign_id,eoci.consignee_name as consign_consignee_name,eoci.consignee_phone as consign_consignee_phone,eoci.province as consign_province,eoci.city as consign_city,eoci.district as consign_district,eoci.address as consign_address,eoci.data_status as consign_data_status,eoci.remark as consign_remark,eoci.create_time as consign_create_time,eoci.create_user as consign_create_user,eoci.update_time as consign_update_time,eoci.update_user as consign_update_user
    </sql>

    <sql id="material_column_List">
        eom.id as material_id,eom.order_id as material_order_id,eom.rent_type as material_rent_type,eom.rent_time_length as material_rent_time_length,eom.rent_length_type as material_rent_length_type,eom.material_id as material_material_id,eom.material_name as material_material_name,eom.material_count as material_material_count,eom.material_unit_amount as material_material_unit_amount,eom.material_amount as material_material_amount,eom.deposit_amount as material_deposit_amount,eom.credit_deposit_amount as material_credit_deposit_amount,eom.insurance_amount as material_insurance_amount,eom.material_snapshot as material_material_snapshot,eom.rent_deposit_amount as material_rent_deposit_amount,eom.deposit_cycle as material_deposit_cycle,eom.payment_cycle as material_payment_cycle,eom.pay_mode as material_pay_mode,eom.is_new_material as material_is_new_material,eom.data_status as material_data_status,eom.remark as material_remark,eom.create_time as material_create_time,eom.create_user as material_create_user,eom.update_time as material_update_time,eom.update_user as material_update_user,eom.renting_material_count as material_renting_material_count,eom.product_number as material_product_number,eom.FEntry_id as material_FEntry_id,eom.order_joint_product_id as material_order_joint_product_id,eom.joint_material_id as material_joint_material_id,eom.stable_material_count as material_stable_material_count
    </sql>

    <sql id="joint_product_column_List">
        eojp.id as order_joint_product_id,ejp.joint_product_name as order_joint_product_name,eojp.order_id as order_joint_product_order_id,eojp.joint_product_id as order_joint_product_joint_product_id, eojp.joint_product_count as order_joint_product_joint_product_count,eojp.data_status as order_joint_product_data_status,eojp.remark as order_joint_product_remark, eojp.create_time as order_joint_product_create_time, eojp.create_user as order_joint_product_create_user,eojp.update_time as order_joint_product_update_time,eojp.update_user as order_joint_product_update_user,eojp.is_new as order_joint_product_is_new
    </sql>

    <sql id="time_axis_column_List">
        eota.id as time_axis_id,eota.order_id as time_axis_order_id,eota.order_status as time_axis_order_status,eota.generation_time as time_axis_generation_time,eota.order_snapshot as time_axis_order_snapshot,eota.data_status as time_axis_data_status,eota.remark as time_axis_remark,eota.create_time as time_axis_create_time,eota.create_user as time_axis_create_user,eota.update_time as time_axis_update_time,eota.update_user as time_axis_update_user
    </sql>


    <sql id="relet_column_List">
        ero.id as relet_id,ero.relet_order_no as relet_relet_order_no,ero.order_id as relet_order_id,ero.order_no as relet_order_no,ero.buyer_customer_id as relet_buyer_customer_id,ero.buyer_customer_no as relet_buyer_customer_no,ero.buyer_customer_name as relet_buyer_customer_name,ero.order_sub_company_id as relet_order_sub_company_id,ero.delivery_sub_company_id as relet_delivery_sub_company_id,ero.rent_type as relet_rent_type,ero.rent_time_length as relet_rent_time_length,ero.rent_length_type as relet_rent_length_type,ero.rent_start_time as relet_rent_start_time,ero.total_product_count as relet_total_product_count,ero.total_product_amount as relet_total_product_amount,ero.total_material_count as relet_total_material_count,ero.total_material_amount as relet_total_material_amount,ero.total_order_amount as relet_total_order_amount,ero.total_paid_order_amount as relet_total_paid_order_amount,ero.order_seller_id as relet_order_seller_id,ero.order_union_seller_id as relet_order_union_seller_id,ero.total_discount_amount as relet_total_discount_amount,ero.relet_order_status as relet_relet_order_status,ero.pay_status as relet_pay_status,ero.pay_time as relet_pay_time,ero.expect_return_time as relet_expect_return_time,ero.actual_return_time as relet_actual_return_time,ero.high_tax_rate as relet_high_tax_rate,ero.low_tax_rate as relet_low_tax_rate,ero.statement_date as relet_statement_date,ero.buyer_remark as relet_buyer_remark,ero.product_summary as relet_product_summary,ero.data_status as relet_data_status,ero.remark as relet_remark,ero.owner as relet_owner,ero.create_time as relet_create_time,ero.create_user as relet_create_user,ero.update_time as relet_update_time,ero.update_user as relet_update_user
    </sql>


    <select id="findById" resultMap="OrderDO" parameterType="java.lang.Integer">
        select
        <include refid="column_List"/>
        from erp_order eo where eo.id = #{id, jdbcType=INTEGER} and eo.data_status = 1
    </select>
    <select id="findByOrderIdSimple" resultMap="OrderDO" parameterType="java.lang.Integer">
        SELECT <include refid="column_List"/>,<include refid="product_column_List"/>,<include refid="material_column_List"/>
        from erp_order eo
        LEFT JOIN erp_order_product eop ON eo.id = eop.order_id and eop.data_status = 1
        LEFT JOIN erp_order_material eom ON eo.id = eom.order_id and eom.data_status = 1
        where eo.id = #{orderId, jdbcType=INTEGER} and  eo.data_status = 1
    </select>
    <select id="findByOrderNoSimple" resultMap="OrderDO" parameterType="java.lang.String">
        SELECT <include refid="column_List"/>,<include refid="product_column_List"/>,<include refid="material_column_List"/>
        from erp_order eo
        LEFT JOIN erp_order_product eop ON eo.id = eop.order_id and eop.data_status = 1
        LEFT JOIN erp_order_material eom ON eo.id = eom.order_id and eom.data_status = 1
        where eo.order_no = #{orderNo, jdbcType=VARCHAR} and eo.data_status=1
    </select>
    <select id="findByOrderParam" resultMap="OrderDO" parameterType="java.lang.Integer">
        select
        <include refid="column_List"/>
        from erp_order eo
        <where>
            <if test="startTime != null ">
                <![CDATA[ AND eo.create_time >= #{startTime,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="endTime != null">
                <![CDATA[ AND eo.create_time <= #{endTime,jdbcType=TIMESTAMP} ]]>
            </if>
            AND eo.data_status = 1
        </where>
    </select>

    <select id="findByOrderId" resultMap="OrderDO" parameterType="java.lang.Integer">
        SELECT m_order.*
        <trim prefix=",">
            <include refid="product_column_List"/>
        </trim>
        <trim prefix=",">
            <include refid="material_column_List"/>
        </trim>
        FROM (
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,
            eu.real_name AS order_seller_name, esc.sub_company_name AS order_sub_company_name, escd.sub_company_name AS
            delivery_sub_company_name, ec.customer_no AS buyer_customer_no
        </trim>
        FROM erp_order eo
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        WHERE eo.id = #{orderId, jdbcType=INTEGER} and eo.data_status=1
        ) m_order
        LEFT JOIN erp_order_product eop ON m_order.id = eop.order_id and eop.data_status = 1
        LEFT JOIN erp_order_material eom ON m_order.id = eom.order_id and eom.data_status = 1
    </select>

    <select id="findByOrderNo" resultMap="OrderDO" parameterType="java.lang.String">
        SELECT m_order.*
        <trim prefix=",">
            <include refid="product_column_List"/>
        </trim>
        <trim prefix=",">
            <include refid="material_column_List"/>
        </trim>
        <trim prefix=",">
            <include refid="joint_product_column_List"/>
        </trim>
        FROM (
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,
            eu.real_name AS order_seller_name, esc.sub_company_name AS order_sub_company_name, escd.sub_company_name AS
            delivery_sub_company_name, ec.customer_no AS buyer_customer_no, eu.phone AS order_seller_phone
        </trim>
        FROM erp_order eo
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        WHERE eo.order_no = #{orderNo, jdbcType=VARCHAR} and eo.data_status=1
        ) m_order
        LEFT JOIN erp_order_product eop ON m_order.id = eop.order_id and eop.data_status = 1
        LEFT JOIN erp_order_material eom ON m_order.id = eom.order_id and eom.data_status = 1
        LEFT JOIN erp_order_joint_product eojp on m_order.id = eojp.order_id and eojp.data_status = 1
        LEFT JOIN erp_joint_product ejp on ejp.id = eojp.joint_product_id
    </select>

    <select id="findByCustomerId" resultMap="OrderDO" parameterType="java.lang.Integer">
        SELECT m_order.*
        <trim prefix=",">
            <include refid="product_column_List"/>
        </trim>
        <trim prefix=",">
            <include refid="material_column_List"/>
        </trim>
        <trim prefix=",">
            <include refid="time_axis_column_List"/>
        </trim>
        FROM (
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,
            eu.real_name AS order_seller_name, esc.sub_company_name AS order_sub_company_name, escd.sub_company_name AS
            delivery_sub_company_name, ec.customer_no AS buyer_customer_no
        </trim>
        FROM erp_order eo
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        WHERE eo.buyer_customer_id = #{customerId, jdbcType=INTEGER} and eo.data_status=1
        ) m_order
        LEFT JOIN erp_order_product eop ON m_order.id = eop.order_id and eop.data_status = 1
        LEFT JOIN erp_order_material eom ON m_order.id = eom.order_id and eom.data_status = 1
        LEFT JOIN erp_order_time_axis eota ON m_order.id = eota.order_id and eota.data_status = 1
    </select>

    <select id="findUnReletedOrderByParams" resultMap="OrderDO" parameterType="map">

        SELECT
        <include refid="column_List"/>
        FROM erp_order eo
        <where>

            <if test="maps.orderQueryParam.orderStatus != null">
                and eo.order_status = #{maps.orderQueryParam.orderStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderStatusList != null &amp;&amp; maps.orderQueryParam.orderStatusList.size() > 0">
                and eo.order_status in
                <foreach item="item" index="index" collection="maps.orderQueryParam.orderStatusList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="maps.orderQueryParam.startExpectReturnTime != null">
                <![CDATA[ AND eo.expect_return_time >= #{maps.orderQueryParam.startExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.endExpectReturnTime != null ">
                <![CDATA[ AND eo.expect_return_time <= #{maps.orderQueryParam.endExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.rentLengthType != null">
                and eo.rent_length_type = #{maps.orderQueryParam.rentLengthType, jdbcType=INTEGER}
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
                and eo.order_no not in (SELECT order_no from erp_relet_order)
            </if>
        </where>

        ORDER BY eo.create_time DESC
    </select>


    <select id="findOrderByParams" resultMap="OrderDO" parameterType="map">

        SELECT e_order.*
        <trim prefix=",">
            <include refid="relet_column_List"/>
        </trim>
        FROM (

        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,
            eu.real_name AS order_seller_name, esc.sub_company_name AS order_sub_company_name, escd.sub_company_name AS
            delivery_sub_company_name, ec.customer_no AS buyer_customer_no
        </trim>
        FROM erp_order eo
        INNER JOIN erp_user eu ON eu.id = eo.order_seller_id
        INNER JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        INNER JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        INNER JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        <where>
            <if test="maps.orderQueryParam.buyerRealName != null &amp;&amp; maps.orderQueryParam.buyerRealName != ''">
                and eo.buyer_customer_name like CONCAT('%','${maps.orderQueryParam.buyerRealName}','%' )
            </if>
            <if test="maps.orderQueryParam.consigneeName != null &amp;&amp; maps.orderQueryParam.consigneeName != ''">
                and eoci.consignee_name like CONCAT('%','${maps.orderQueryParam.consigneeName}','%' )
            </if>
            <if test="maps.orderQueryParam.consigneePhone != null &amp;&amp; maps.orderQueryParam.consigneePhone != ''">
                and eoci.consignee_phone = #{maps.orderQueryParam.consigneePhone, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.deliveryMode != null">
                and eo.delivery_mode = #{maps.orderQueryParam.deliveryMode, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.orderQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.deliverySubCompanyId != null">
                and eo.delivery_sub_company_id = #{maps.orderQueryParam.deliverySubCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderId != null">
                and eo.id = #{maps.orderQueryParam.orderId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderNo != null &amp;&amp; maps.orderQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.orderQueryParam.orderNo}','%' )
            </if>
            <if test="maps.orderQueryParam.buyerCustomerId != null">
                and eo.buyer_customer_id = #{maps.orderQueryParam.buyerCustomerId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.buyerCustomerNo != null &amp;&amp; maps.orderQueryParam.buyerCustomerNo != ''">
                and ec.customer_no = #{maps.orderQueryParam.buyerCustomerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.orderSellerId != null">
                and eo.order_seller_id = #{maps.orderQueryParam.orderSellerId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderSellerName != null &amp;&amp; maps.orderQueryParam.orderSellerName != ''">
                and eu.real_name = #{maps.orderQueryParam.orderSellerName, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.rentType != null">
                and eo.rent_type = #{maps.orderQueryParam.rentType, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.isRecycleBin != null &amp;&amp; maps.orderQueryParam.isRecycleBin==1">
                and eo.order_status = 28
            </if>
            <if test="maps.orderQueryParam.isRecycleBin != null &amp;&amp; maps.orderQueryParam.isRecycleBin==0">
                and eo.order_status != 28
            </if>
            <if test="maps.orderQueryParam.isReturnOverDue != null &amp;&amp; maps.orderQueryParam.isReturnOverDue==1">
                and  curdate() > eo.expect_return_time AND eo.order_status IN (16, 20, 22)
            </if>
            <if test="maps.orderQueryParam.isReturnOverDue != null &amp;&amp; maps.orderQueryParam.isReturnOverDue==2">
                and (eo.expect_return_time >= curdate()  OR eo.order_status NOT  IN (16, 20, 22))
            </if>
            <if test="maps.orderQueryParam.orderStatus != null">
                and eo.order_status = #{maps.orderQueryParam.orderStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderStatusList != null &amp;&amp; maps.orderQueryParam.orderStatusList.size() > 0">
                and eo.order_status in
                <foreach item="item" index="index" collection="maps.orderQueryParam.orderStatusList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="maps.orderQueryParam.payStatus != null">
                and eo.pay_status = #{maps.orderQueryParam.payStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.isPeer != null">
                and eo.is_peer = #{maps.orderQueryParam.isPeer, jdbcType=INTEGER}
            </if>
            <if test='maps.orderQueryParam.isPendingDelivery != null &amp;&amp; maps.orderQueryParam.isPendingDelivery != null &amp;&amp; maps.orderQueryParam.isPendingDelivery == 1'>
                and eo.order_status in (8, 12) AND (eo.pay_status = 8 OR eo.first_need_pay_amount = 0)
            </if>
            <if test="maps.orderQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.orderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.orderQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.orderQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.orderQueryParam.startRentStratTime != null">
                <![CDATA[ AND eo.rent_start_time >= #{maps.orderQueryParam.startRentStratTime} ]]>
            </if>
            <if test="maps.orderQueryParam.endRentStratTime != null ">
                <![CDATA[ AND eo.rent_start_time <= #{maps.orderQueryParam.endRentStratTime} ]]>
            </if>
            <if test="maps.orderQueryParam.startExpectReturnTime != null">
                <![CDATA[ AND eo.expect_return_time >= #{maps.orderQueryParam.startExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.endExpectReturnTime != null ">
                <![CDATA[ AND eo.expect_return_time <= #{maps.orderQueryParam.endExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.rentLengthType != null">
                and eo.rent_length_type = #{maps.orderQueryParam.rentLengthType, jdbcType=INTEGER}
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <include refid="permission_sql.order_control"/>
        </where>
        ORDER BY eo.create_time DESC
        LIMIT #{maps.start},#{maps.pageSize}
        ) e_order
        LEFT JOIN erp_relet_order ero ON ero.order_id = e_order.id and ero.data_status = 1
    </select>
    <select id="queryPaidSubCompanyOrderAmount" resultType="java.util.HashMap" parameterType="java.util.Map">
       SELECT
          esc.id,
	      esc.sub_company_name,
	      SUM( eo.total_order_amount ) AS total_order_amount
       FROM
	      erp_sub_company esc
	   LEFT JOIN (SELECT order_sub_company_id,total_order_amount from erp_order WHERE pay_status = 8) eo ON esc.id = eo.order_sub_company_id
       GROUP BY esc.id
    </select>
    <select id="querySubCompanyOrderAmount" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT esc.sub_company_name, sum(eo.total_order_amount) as total_order_amount
        FROM erp_sub_company esc LEFT JOIN erp_department ed ON esc.id = ed.sub_company_id
        LEFT JOIN erp_role er ON er.department_id = ed.id
        LEFT JOIN erp_user_role eur ON er.id = eur.role_id
        LEFT JOIN erp_user eu ON eur.user_id = eu.id
        LEFT JOIN erp_order eo ON eu.id = eo.order_seller_id AND eo.pay_status = 8 GROUP BY esc.sub_company_name
    </select>

    <select id="findPaidOrderAmount" resultType="java.math.BigDecimal">
        SELECT sum(eo.total_order_amount) as total_order_amount
        FROM erp_order eo WHERE eo.pay_status = 8
    </select>

    <select id="listCount" resultType="java.lang.Integer" >
        SELECT COUNT( eo.id )
        FROM erp_order eo
        WHERE eo.data_status = 1
    </select>
    <select id="findOrderCountByParams" resultType="java.lang.Integer" parameterType="map">
        SELECT count(eo.id)
        FROM erp_order eo
        INNER JOIN erp_user eu ON eu.id = eo.order_seller_id
        INNER JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        INNER JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        INNER JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        <where>
            <if test="maps.orderQueryParam.buyerRealName != null &amp;&amp; maps.orderQueryParam.buyerRealName != ''">
                and eo.buyer_customer_name like CONCAT('%','${maps.orderQueryParam.buyerRealName}','%' )
            </if>
            <if test="maps.orderQueryParam.consigneeName != null &amp;&amp; maps.orderQueryParam.consigneeName != ''">
                and eoci.consignee_name like CONCAT('%','${maps.orderQueryParam.consigneeName}','%' )
            </if>
            <if test="maps.orderQueryParam.consigneePhone != null &amp;&amp; maps.orderQueryParam.consigneePhone != ''">
                and eoci.consignee_phone = #{maps.orderQueryParam.consigneePhone, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.deliveryMode != null">
                and eo.delivery_mode = #{maps.orderQueryParam.deliveryMode, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.orderQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.deliverySubCompanyId != null">
                and eo.delivery_sub_company_id = #{maps.orderQueryParam.deliverySubCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderId != null">
                and eo.id = #{maps.orderQueryParam.orderId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderNo != null &amp;&amp; maps.orderQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.orderQueryParam.orderNo}','%' )
            </if>
            <if test="maps.orderQueryParam.buyerCustomerId != null">
                and eo.buyer_customer_id = #{maps.orderQueryParam.buyerCustomerId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.buyerCustomerNo != null &amp;&amp; maps.orderQueryParam.buyerCustomerNo != ''">
                and ec.customer_no = #{maps.orderQueryParam.buyerCustomerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.orderSellerId != null">
                and eo.order_seller_id = #{maps.orderQueryParam.orderSellerId, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderSellerName != null &amp;&amp; maps.orderQueryParam.orderSellerName != ''">
                and eu.real_name = #{maps.orderQueryParam.orderSellerName, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderQueryParam.rentType != null">
                and eo.rent_type = #{maps.orderQueryParam.rentType, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.isRecycleBin != null &amp;&amp; maps.orderQueryParam.isRecycleBin==1">
                and eo.order_status = 28
            </if>
            <if test="maps.orderQueryParam.isRecycleBin != null &amp;&amp; maps.orderQueryParam.isRecycleBin==0">
                and eo.order_status != 28
            </if>
            <if test="maps.orderQueryParam.isReturnOverDue != null &amp;&amp; maps.orderQueryParam.isReturnOverDue==1">
                and  curdate() > eo.expect_return_time AND eo.order_status IN (16, 20, 22)
            </if>
            <if test="maps.orderQueryParam.isReturnOverDue != null &amp;&amp; maps.orderQueryParam.isReturnOverDue==2">
                and (eo.expect_return_time >= curdate()  OR eo.order_status NOT  IN (16, 20, 22))
            </if>
            <if test="maps.orderQueryParam.orderStatus != null">
                and eo.order_status = #{maps.orderQueryParam.orderStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.orderStatusList != null &amp;&amp; maps.orderQueryParam.orderStatusList.size() > 0">
                and eo.order_status in
                <foreach item="item" index="index" collection="maps.orderQueryParam.orderStatusList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="maps.orderQueryParam.payStatus != null">
                and eo.pay_status = #{maps.orderQueryParam.payStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderQueryParam.isPeer != null">
                and eo.is_peer = #{maps.orderQueryParam.isPeer, jdbcType=INTEGER}
            </if>
            <if test='maps.orderQueryParam.isPendingDelivery != null &amp;&amp; maps.orderQueryParam.isPendingDelivery != null &amp;&amp; maps.orderQueryParam.isPendingDelivery == 1'>
                and eo.order_status in (8, 12) AND (eo.pay_status = 8 OR eo.first_need_pay_amount = 0)
            </if>
            <if test="maps.orderQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.orderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.orderQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.orderQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.orderQueryParam.startRentStratTime != null">
                <![CDATA[ AND eo.rent_start_time >= #{maps.orderQueryParam.startRentStratTime} ]]>
            </if>
            <if test="maps.orderQueryParam.endRentStratTime != null ">
                <![CDATA[ AND eo.rent_start_time <= #{maps.orderQueryParam.endRentStratTime} ]]>
            </if>
            <if test="maps.orderQueryParam.startExpectReturnTime != null">
                <![CDATA[ AND eo.expect_return_time >= #{maps.orderQueryParam.startExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.endExpectReturnTime != null ">
                <![CDATA[ AND eo.expect_return_time <= #{maps.orderQueryParam.endExpectReturnTime} ]]>
            </if>
            <if test="maps.orderQueryParam.rentLengthType != null">
                and eo.rent_length_type = #{maps.orderQueryParam.rentLengthType, jdbcType=INTEGER}
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <include refid="permission_sql.order_control"/>
        </where>
    </select>

    <sql id="set_column_sql">
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo, jdbcType=INTEGER},
            </if>
            <if test="deliveryMode != null">
                delivery_mode = #{deliveryMode, jdbcType=INTEGER},
            </if>
            <if test="buyerCustomerId != null">
                buyer_customer_id = #{buyerCustomerId, jdbcType=INTEGER},
            </if>
            <if test="buyerCustomerName != null">
                buyer_customer_name = #{buyerCustomerName, jdbcType=VARCHAR},
            </if>
            <if test="rentStartTime != null">
                rent_start_time = #{rentStartTime, jdbcType=TIMESTAMP},
            </if>
            <if test="rentType != null">
                rent_type = #{rentType, jdbcType=INTEGER},
            </if>
            <if test="rentTimeLength != null">
                rent_time_length = #{rentTimeLength, jdbcType=INTEGER},
            </if>
            <if test="rentLengthType != null">
                rent_length_type = #{rentLengthType, jdbcType=INTEGER},
            </if>
            <if test="expectDeliveryTime != null">
                expect_delivery_time = #{expectDeliveryTime, jdbcType=TIMESTAMP},
            </if>
            <if test="totalDepositAmount != null">
                total_deposit_amount = #{totalDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="totalMustDepositAmount != null">
                total_must_deposit_amount = #{totalMustDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="totalCreditDepositAmount != null">
                total_credit_deposit_amount = #{totalCreditDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="totalInsuranceAmount != null">
                total_insurance_amount = #{totalInsuranceAmount,jdbcType=DECIMAL},
            </if>
            <if test="totalRentDepositAmount != null">
                total_rent_deposit_amount = #{totalRentDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="totalProductCount != null">
                total_product_count = #{totalProductCount, jdbcType=INTEGER},
            </if>
            <if test="totalProductAmount != null">
                total_product_amount = #{totalProductAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalProductDepositAmount != null">
                total_product_deposit_amount = #{totalProductDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalProductCreditDepositAmount != null">
                total_product_credit_deposit_amount = #{totalProductCreditDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalProductRentDepositAmount != null">
                total_product_rent_deposit_amount = #{totalProductRentDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalMaterialCount != null">
                total_material_count = #{totalMaterialCount, jdbcType=INTEGER},
            </if>
            <if test="totalMaterialAmount != null">
                total_material_amount = #{totalMaterialAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalMaterialDepositAmount != null">
                total_material_deposit_amount = #{totalMaterialDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalMaterialCreditDepositAmount != null">
                total_material_credit_deposit_amount = #{totalMaterialCreditDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalMaterialRentDepositAmount != null">
                total_material_rent_deposit_amount = #{totalMaterialRentDepositAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalOrderAmount != null">
                total_order_amount = #{totalOrderAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalPaidOrderAmount != null">
                total_paid_order_amount = #{totalPaidOrderAmount, jdbcType=DECIMAL},
            </if>
            <if test="totalDiscountAmount != null">
                total_discount_amount = #{totalDiscountAmount, jdbcType=DECIMAL},
            </if>
            <if test="logisticsAmount != null">
                logistics_amount = #{logisticsAmount, jdbcType=DECIMAL},
            </if>
            <if test="orderSellerId != null">
                order_seller_id = #{orderSellerId, jdbcType=INTEGER},
            </if>
            <if test="orderUnionSellerId != null">
                order_union_seller_id = #{orderUnionSellerId, jdbcType=INTEGER},
            </if>
            <if test="orderSubCompanyId != null">
                order_sub_company_id = #{orderSubCompanyId, jdbcType=INTEGER},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus, jdbcType=INTEGER},
            </if>
            <if test="firstNeedPayAmount != null">
                first_need_pay_amount = #{firstNeedPayAmount, jdbcType=INTEGER},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus, jdbcType=INTEGER},
            </if>
            <if test="isPeer != null">
                is_peer = #{isPeer, jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime, jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime, jdbcType=TIMESTAMP},
            </if>
            <if test="confirmDeliveryTime != null">
                confirm_delivery_time = #{confirmDeliveryTime, jdbcType=TIMESTAMP},
            </if>
            <if test="expectReturnTime != null">
                expect_return_time = #{expectReturnTime, jdbcType=TIMESTAMP},
            </if>
            <if test="actualReturnTime != null">
                actual_return_time = #{actualReturnTime, jdbcType=TIMESTAMP},
            </if>
            <if test="highTaxRate != null">
                high_tax_rate = #{highTaxRate, jdbcType=INTEGER},
            </if>
            <if test="lowTaxRate != null">
                low_tax_rate = #{lowTaxRate, jdbcType=INTEGER},
            </if>
            <if test="buyerRemark != null">
                buyer_remark = #{buyerRemark, jdbcType=VARCHAR},
            </if>
            <if test="productSummary != null">
                product_summary = #{productSummary, jdbcType=VARCHAR},
            </if>
            <if test="dataStatus != null">
                data_status = #{dataStatus, jdbcType=INTEGER},
            </if>
            <if test="isK3Order != null">
                is_k3_order = #{isK3Order, jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark, jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser, jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
            <if test="deliverySubCompanyId != null">
                delivery_sub_company_id = #{deliverySubCompanyId, jdbcType=INTEGER},
            </if>
            <if test="statementDate != null">
                statement_date = #{statementDate, jdbcType=INTEGER},
            </if>
            <if test="orderMessage != null &amp;&amp; orderMessage != ''">
                order_message = #{orderMessage},
            </if>
            <if test="cancelOrderReasonType != null">
                cancel_order_reason_type = #{cancelOrderReasonType},
            </if>
            <if test="reletOrderId != null">
                relet_order_id = #{reletOrderId, jdbcType=INTEGER},
            </if>
        </set>
    </sql>

    <update id="update" parameterType="com.lxzl.erp.dataaccess.domain.order.OrderDO">
        update erp_order
        <include refid="set_column_sql"/>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <insert id="save" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.lxzl.erp.dataaccess.domain.order.OrderDO">
        INSERT INTO erp_order
        <include refid="set_column_sql"/>
    </insert>
    <update id="updateListForReturn" parameterType="java.util.ArrayList">
        update erp_order
        SET
        <trim>
            order_status =
            <foreach item="orderDO" collection="orderDOList" index="index" separator=" " open="case id" close="end">
                when #{orderDO.id} then #{orderDO.orderStatus}
            </foreach>
        </trim>
        <trim prefix=",">
            actual_return_time =
            <foreach item="orderDO" collection="orderDOList" index="index" separator=" " open="case id" close="end">
                when #{orderDO.id} then #{orderDO.actualReturnTime}
            </foreach>
        </trim>
        WHERE id in
        <foreach collection="orderDOList" index="index" item="orderDO"
                 separator="," open="(" close=")">
            #{orderDO.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <!-- 根据订单号列表获取订单列表信息 -->
    <select id="listByOrderNOs" resultMap="OrderDO">
        SELECT <include refid="column_List"/> FROM erp_order eo
        <where>
            AND eo.order_no IN
            <if test="orderNOs != null">
                <foreach item="orderNO" index="index" collection="orderNOs" open="(" separator="," close=")">
                    #{orderNO}
                </foreach>
            </if>
        </where>
    </select>
    <select id="findVerifyOrderByParams" resultMap="OrderDO" parameterType="map">
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,
            eu.real_name AS order_seller_name, esc.sub_company_name AS order_sub_company_name, escd.sub_company_name AS
            delivery_sub_company_name, ec.customer_no AS buyer_customer_no
        </trim>
        FROM erp_order eo
        INNER JOIN erp_user eu ON eu.id = eo.order_seller_id
        INNER JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        INNER JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        INNER JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        <where>
            <if test="maps.verifyOrderQueryParam.buyerRealName != null &amp;&amp; maps.verifyOrderQueryParam.buyerRealName != ''">
                and eo.buyer_customer_name like CONCAT('%','${maps.verifyOrderQueryParam.buyerRealName}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.consigneeName != null &amp;&amp; maps.verifyOrderQueryParam.consigneeName != ''">
                and eoci.consignee_name like CONCAT('%','${maps.verifyOrderQueryParam.consigneeName}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.consigneePhone != null &amp;&amp; maps.verifyOrderQueryParam.consigneePhone != ''">
                and eoci.consignee_phone = #{maps.verifyOrderQueryParam.consigneePhone, jdbcType=VARCHAR}
            </if>
            <if test="maps.verifyOrderQueryParam.deliveryMode != null">
                and eo.delivery_mode = #{maps.verifyOrderQueryParam.deliveryMode, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.verifyOrderQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.deliverySubCompanyId != null">
                and eo.delivery_sub_company_id = #{maps.verifyOrderQueryParam.deliverySubCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.orderNo != null &amp;&amp; maps.verifyOrderQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.verifyOrderQueryParam.orderNo}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.buyerCustomerNo != null &amp;&amp; maps.verifyOrderQueryParam.buyerCustomerNo != ''">
                and ec.customer_no = #{maps.verifyOrderQueryParam.buyerCustomerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.verifyOrderQueryParam.orderSellerId != null">
                and eo.order_seller_id = #{maps.verifyOrderQueryParam.orderSellerId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.rentType != null">
                and eo.rent_type = #{maps.verifyOrderQueryParam.rentType, jdbcType=INTEGER}
            </if>
            <if test="true">
                and eo.order_status = 4
            </if>
            <if test="maps.verifyOrderQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.verifyOrderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.verifyOrderQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.verifyOrderQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <if test="maps.workflowReferNoList != null &amp;&amp; maps.workflowReferNoList.size() > 0">
                and eo.order_no in
                <foreach item="workflowReferNo" index="index" collection="maps.workflowReferNoList"
                         open="(" separator="," close=")">
                    #{workflowReferNo,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ORDER BY eo.create_time DESC
        LIMIT #{maps.start},#{maps.pageSize}

    </select>
    <select id="findVerifyOrderCountByParams" resultType="java.lang.Integer" parameterType="map">
        SELECT count(eo.id)
        FROM erp_order eo
        INNER JOIN erp_user eu ON eu.id = eo.order_seller_id
        INNER JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        INNER JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        INNER JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        <where>

            <if test="maps.verifyOrderQueryParam.buyerRealName != null &amp;&amp; maps.verifyOrderQueryParam.buyerRealName != ''">
                and eo.buyer_customer_name like CONCAT('%','${maps.verifyOrderQueryParam.buyerRealName}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.consigneeName != null &amp;&amp; maps.verifyOrderQueryParam.consigneeName != ''">
                and eoci.consignee_name like CONCAT('%','${maps.verifyOrderQueryParam.consigneeName}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.consigneePhone != null &amp;&amp; maps.verifyOrderQueryParam.consigneePhone != ''">
                and eoci.consignee_phone = #{maps.verifyOrderQueryParam.consigneePhone, jdbcType=VARCHAR}
            </if>
            <if test="maps.verifyOrderQueryParam.deliveryMode != null">
                and eo.delivery_mode = #{maps.verifyOrderQueryParam.deliveryMode, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.verifyOrderQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.deliverySubCompanyId != null">
                and eo.delivery_sub_company_id = #{maps.verifyOrderQueryParam.deliverySubCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.orderNo != null &amp;&amp; maps.verifyOrderQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.verifyOrderQueryParam.orderNo}','%' )
            </if>
            <if test="maps.verifyOrderQueryParam.buyerCustomerNo != null &amp;&amp; maps.verifyOrderQueryParam.buyerCustomerNo != ''">
                and ec.customer_no = #{maps.verifyOrderQueryParam.buyerCustomerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.verifyOrderQueryParam.orderSellerId != null">
                and eo.order_seller_id = #{maps.verifyOrderQueryParam.orderSellerId, jdbcType=INTEGER}
            </if>
            <if test="maps.verifyOrderQueryParam.rentType != null">
                and eo.rent_type = #{maps.verifyOrderQueryParam.rentType, jdbcType=INTEGER}
            </if>
            <if test="true">
                and eo.order_status = 4
            </if>
            <if test="maps.verifyOrderQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.verifyOrderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.verifyOrderQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.verifyOrderQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <if test="maps.workflowReferNoList != null &amp;&amp; maps.workflowReferNoList.size() > 0">
                and eo.order_no in
                <foreach item="workflowReferNo" index="index" collection="maps.workflowReferNoList"
                         open="(" separator="," close=")">
                    #{workflowReferNo,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findConsignByCustomerNo" resultMap="OrderDO" parameterType="java.lang.String">
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
        eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name
        </trim>
        FROM erp_order eo
        LEFT JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        WHERE ec.customer_no = #{customerNo, jdbcType=VARCHAR} and eo.data_status=1
        ORDER BY eo.create_time DESC LIMIT 0,1
    </select>

    <select id="findByOrderStatus" resultMap="OrderDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_order eo
        WHERE eo.order_status = #{orderStatus} and eo.data_status=1
    </select>

    <select id="findByOrderItemTypeAndOrderItemReferId" resultMap="OrderDO">
        SELECT
        <include refid="column_List"/>
        ,<include refid="product_column_List"/>
        ,<include refid="material_column_List"/>
        FROM erp_order eo
        LEFT JOIN erp_order_product eop on eop.order_id = eo.id
        LEFT JOIN erp_order_material eom on eom.order_id = eo.id
        WHERE 1 = 1
        <choose>
            <when test="orderItemType == 1">
                AND eop.id = #{orderItemReferId, jdbcType=INTEGER}
            </when>
            <when test="orderItemType == 2">
                AND eom.id = #{orderItemReferId, jdbcType=INTEGER}
            </when>
            <otherwise>
                AND 1 = 2
            </otherwise>
        </choose>
    </select>

    <select id="findOrderForReturnCountParam" resultType="java.lang.Integer" parameterType="map">
        SELECT count(eo.id)
        FROM erp_order eo
        INNER JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        <where>
            <if test="maps.orderForReturnQueryParam.orderStatus != null">
                and eo.order_status = #{maps.orderForReturnQueryParam.orderStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderForReturnQueryParam.orderStatus == null">
                and eo.order_status in (20,22)
            </if>
            <if test="maps.orderForReturnQueryParam.orderNo != null &amp;&amp; maps.orderForReturnQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.orderForReturnQueryParam.orderNo}','%' )
            </if>
            <if test="maps.orderForReturnQueryParam.customerNo != null &amp;&amp; maps.orderForReturnQueryParam.customerNo != ''">
                and ec.customer_no = #{maps.orderForReturnQueryParam.customerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderForReturnQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.orderForReturnQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.orderForReturnQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.orderForReturnQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <include refid="permission_sql.order_control"/>
        </where>
    </select>

    <select id="findOrderForReturnParam" resultMap="OrderDO" parameterType="map">
        SELECT
        <include refid="column_List"/>
        <trim prefix=",">
            <include refid="consign_column_List"/>
        </trim>
        <trim prefix=",">
            eap.province_name AS province_name,eac.city_name AS city_name,ead.district_name AS district_name,esc.sub_company_name AS order_sub_company_name
            ,ec.customer_no AS buyer_customer_no,escd.sub_company_name AS delivery_sub_company_name
        </trim>
        FROM erp_order eo
        LEFT JOIN erp_order_consign_info eoci ON eo.id = eoci.order_id and eoci.data_status = 1
        LEFT JOIN erp_area_province eap ON eap.id = eoci.province
        LEFT JOIN erp_area_city eac ON eac.id = eoci.city
        LEFT JOIN erp_area_district ead ON ead.id = eoci.district
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status = 1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status = 1
        LEFT JOIN erp_sub_company escd ON escd.id = eo.delivery_sub_company_id AND escd.data_status = 1
        <where>
            <if test="maps.orderForReturnQueryParam.orderStatus != null">
                and eo.order_status = #{maps.orderForReturnQueryParam.orderStatus, jdbcType=INTEGER}
            </if>
            <if test="maps.orderForReturnQueryParam.orderStatus == null">
                and eo.order_status in (20,22)
            </if>
            <if test="maps.orderForReturnQueryParam.orderNo != null &amp;&amp; maps.orderForReturnQueryParam.orderNo != ''">
                and eo.order_no like CONCAT('%','${maps.orderForReturnQueryParam.orderNo}','%' )
            </if>
            <if test="maps.orderForReturnQueryParam.customerNo != null &amp;&amp; maps.orderForReturnQueryParam.customerNo != ''">
                and ec.customer_no = #{maps.orderForReturnQueryParam.customerNo, jdbcType=VARCHAR}
            </if>
            <if test="maps.orderForReturnQueryParam.createStartTime != null">
                <![CDATA[ AND eo.create_time >= #{maps.orderForReturnQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.orderForReturnQueryParam.createEndTime != null ">
                <![CDATA[ AND eo.create_time <= #{maps.orderForReturnQueryParam.createEndTime} ]]>
            </if>
            <if test="maps.isQueryAll == null">
                and eo.data_status = 1
            </if>
            <include refid="permission_sql.order_control"/>
        </where>
        ORDER BY eo.create_time DESC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>
</mapper>