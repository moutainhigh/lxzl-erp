<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.statement.StatementOrderDetailMapper">

    <resultMap id="StatementOrderDetailDO" type="com.lxzl.erp.dataaccess.domain.statement.StatementOrderDetailDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="statement_order_id" jdbcType="INTEGER" property="statementOrderId"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="order_type" jdbcType="INTEGER" property="orderType"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType"/>
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId"/>
        <result column="return_refer_id" jdbcType="INTEGER" property="returnReferId"/>
        <result column="statement_detail_type" jdbcType="INTEGER" property="statementDetailType"/>
        <result column="statement_detail_phase" jdbcType="INTEGER" property="statementDetailPhase"/>
        <result column="statement_detail_amount" jdbcType="DECIMAL" property="statementDetailAmount"/>
        <result column="statement_detail_other_amount" jdbcType="DECIMAL" property="statementDetailOtherAmount"/>
        <result column="statement_detail_other_paid_amount" jdbcType="DECIMAL"
                property="statementDetailOtherPaidAmount"/>
        <result column="statement_detail_rent_deposit_amount" jdbcType="DECIMAL"
                property="statementDetailRentDepositAmount"/>
        <result column="statement_detail_rent_deposit_paid_amount" jdbcType="DECIMAL"
                property="statementDetailRentDepositPaidAmount"/>
        <result column="statement_detail_rent_deposit_return_amount" jdbcType="DECIMAL"
                property="statementDetailRentDepositReturnAmount"/>
        <result column="statement_detail_rent_deposit_return_time" jdbcType="TIMESTAMP"
                property="statementDetailRentDepositReturnTime"/>
        <result column="statement_detail_deposit_amount" jdbcType="DECIMAL" property="statementDetailDepositAmount"/>
        <result column="statement_detail_deposit_paid_amount" jdbcType="DECIMAL"
                property="statementDetailDepositPaidAmount"/>
        <result column="statement_detail_deposit_return_amount" jdbcType="DECIMAL"
                property="statementDetailDepositReturnAmount"/>
        <result column="statement_detail_deposit_return_time" jdbcType="TIMESTAMP"
                property="statementDetailDepositReturnTime"/>
        <result column="statement_detail_rent_amount" jdbcType="DECIMAL" property="statementDetailRentAmount"/>
        <result column="statement_detail_rent_paid_amount" jdbcType="DECIMAL" property="statementDetailRentPaidAmount"/>
        <result column="statement_detail_paid_time" jdbcType="DATE" property="statementDetailPaidTime"/>
        <result column="statement_detail_overdue_amount" jdbcType="DECIMAL" property="statementDetailOverdueAmount"/>
        <result column="statement_detail_overdue_paid_amount" jdbcType="DECIMAL"
                property="statementDetailOverduePaidAmount"/>
        <result column="statement_detail_overdue_days" jdbcType="INTEGER" property="statementDetailOverdueDays"/>
        <result column="statement_detail_overdue_phase_count" jdbcType="INTEGER"
                property="statementDetailOverduePhaseCount"/>
        <result column="statement_detail_status" jdbcType="INTEGER" property="statementDetailStatus"/>
        <result column="statement_expect_pay_time" jdbcType="TIMESTAMP" property="statementExpectPayTime"/>
        <result column="statement_start_time" jdbcType="DATE" property="statementStartTime"/>
        <result column="statement_end_time" jdbcType="DATE" property="statementEndTime"/>
        <result column="statement_detail_correct_amount" jdbcType="DECIMAL" property="statementDetailCorrectAmount"/>
        <result column="data_status" jdbcType="INTEGER" property="dataStatus"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>

        <result column="rent_type" jdbcType="INTEGER" property="rentType"/>
        <result column="goods_count" jdbcType="INTEGER" property="goodsCount"/>
        <result column="goods_unit_amount" jdbcType="DECIMAL" property="goodsUnitAmount"/>
        <result column="statement_coupon_amount" jdbcType="DECIMAL" property="statementCouponAmount" />
        <result column="statement_detail_penalty_amount" jdbcType="DECIMAL" property="statementDetailPenaltyAmount" />
        <result column="statement_detail_penalty_paid_amount" jdbcType="DECIMAL" property="statementDetailPenaltyPaidAmount" />

        <result column="relet_order_item_refer_id" jdbcType="INTEGER" property="reletOrderItemReferId"/>

        <result column="salesman_id" jdbcType="INTEGER" property="salesmanId" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />

        <result column="statement_order_no" jdbcType="VARCHAR" property="statementOrderNo"/>
    </resultMap>

    <resultMap id="FinanceStatementOrderPayDetail" type="com.lxzl.erp.common.domain.export.FinanceStatementOrderPayDetail">
        <result column="orderNo" jdbcType="VARCHAR" property="orderNo"/>
        <result column="customerName" jdbcType="VARCHAR" property="customerName"/>
        <result column="customerNo" jdbcType="VARCHAR" property="customerNo"/>
        <result column="k3CustomerCode" jdbcType="VARCHAR" property="k3CustomerCode"/>
        <result column="customerCompany" jdbcType="VARCHAR" property="customerCompany"/>
        <result column="orderCompany" jdbcType="VARCHAR" property="orderCompany"/>
        <result column="deliveryCompany" jdbcType="VARCHAR" property="deliveryCompany"/>
        <result column="rentPaidAmount" jdbcType="DECIMAL" property="rentPaidAmount"/>
        <result column="depositPaidAmount" jdbcType="DECIMAL" property="depositPaidAmount"/>
        <result column="totalPaidAmount" jdbcType="DECIMAL" property="totalPaidAmount"/>
    </resultMap>

    <resultMap id="CheckStatementOrderDetailDO" type="com.lxzl.erp.dataaccess.domain.statement.CheckStatementOrderDetailDO">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="statement_order_id" jdbcType="INTEGER" property="statementOrderId" />
        <result column="customer_id" jdbcType="INTEGER" property="customerId" />
        <result column="order_type" jdbcType="INTEGER" property="orderType" />
        <result column="order_id" jdbcType="INTEGER" property="orderId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="return_refer_id" jdbcType="INTEGER" property="returnReferId" />
        <result column="statement_detail_phase" jdbcType="INTEGER" property="statementDetailPhase" />
        <result column="statement_detail_type" jdbcType="INTEGER" property="statementDetailType" />
        <result column="statement_expect_pay_time" jdbcType="TIMESTAMP" property="statementExpectPayTime" />
        <result column="statement_detail_amount" jdbcType="DECIMAL" property="statementDetailAmount" />
        <result column="statement_detail_other_amount" jdbcType="DECIMAL" property="statementDetailOtherAmount" />
        <result column="statement_detail_other_paid_amount" jdbcType="DECIMAL" property="statementDetailOtherPaidAmount" />
        <result column="statement_detail_rent_deposit_amount" jdbcType="DECIMAL" property="statementDetailRentDepositAmount" />
        <result column="statement_detail_rent_deposit_paid_amount" jdbcType="DECIMAL" property="statementDetailRentDepositPaidAmount" />
        <result column="statement_detail_rent_deposit_return_amount" jdbcType="DECIMAL" property="statementDetailRentDepositReturnAmount" />
        <result column="statement_detail_rent_deposit_return_time" jdbcType="TIMESTAMP" property="statementDetailRentDepositReturnTime" />
        <result column="statement_detail_deposit_amount" jdbcType="DECIMAL" property="statementDetailDepositAmount" />
        <result column="statement_detail_deposit_paid_amount" jdbcType="DECIMAL" property="statementDetailDepositPaidAmount" />
        <result column="statement_detail_deposit_return_amount" jdbcType="DECIMAL" property="statementDetailDepositReturnAmount" />
        <result column="statement_detail_deposit_return_time" jdbcType="TIMESTAMP" property="statementDetailDepositReturnTime" />
        <result column="statement_detail_rent_amount" jdbcType="DECIMAL" property="statementDetailRentAmount" />
        <result column="statement_detail_rent_paid_amount" jdbcType="DECIMAL" property="statementDetailRentPaidAmount" />
        <result column="statement_detail_paid_time" jdbcType="TIMESTAMP" property="statementDetailPaidTime" />
        <result column="statement_detail_overdue_amount" jdbcType="DECIMAL" property="statementDetailOverdueAmount" />
        <result column="statement_detail_overdue_paid_amount" jdbcType="DECIMAL" property="statementDetailOverduePaidAmount" />
        <result column="statement_detail_overdue_days" jdbcType="INTEGER" property="statementDetailOverdueDays" />
        <result column="statement_detail_overdue_phase_count" jdbcType="INTEGER" property="statementDetailOverduePhaseCount" />
        <result column="statement_detail_status" jdbcType="INTEGER" property="statementDetailStatus" />
        <result column="statement_start_time" jdbcType="TIMESTAMP" property="statementStartTime" />
        <result column="statement_end_time" jdbcType="TIMESTAMP" property="statementEndTime" />
        <result column="statement_detail_correct_amount" jdbcType="DECIMAL" property="statementDetailCorrectAmount" />
        <result column="data_status" jdbcType="INTEGER" property="dataStatus" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_user" jdbcType="VARCHAR" property="createUser" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
        <result column="statement_coupon_amount" jdbcType="DECIMAL" property="statementCouponAmount" />
        <result column="statement_detail_penalty_amount" jdbcType="DECIMAL" property="statementDetailPenaltyAmount" />
        <result column="statement_detail_penalty_paid_amount" jdbcType="DECIMAL" property="statementDetailPenaltyPaidAmount" />
        <result column="orderRentType" jdbcType="INTEGER" property="orderRentType" />
        <result column="orderRentStartTime" jdbcType="TIMESTAMP" property="orderRentStartTime" />
        <result column="orderExpectReturnTime" jdbcType="TIMESTAMP" property="orderExpectReturnTime" />
        <result column="orderRentTimeLength" jdbcType="INTEGER" property="orderRentTimeLength" />
        <result column="isNew" jdbcType="INTEGER" property="isNew" />
        <result column="relet_order_item_refer_id" jdbcType="INTEGER" property="reletOrderItemReferId"/>
    </resultMap>


    <sql id="column_List">
		esod.id,esod.statement_order_id,esod.customer_id,esod.order_type,esod.order_id,esod.order_item_type,esod.order_item_refer_id,esod.return_refer_id,esod.statement_detail_type,esod.statement_detail_phase,esod.statement_detail_amount,esod.statement_detail_other_amount,esod.statement_detail_other_paid_amount ,esod.statement_detail_rent_deposit_amount,esod.statement_detail_rent_deposit_paid_amount,esod.statement_detail_rent_deposit_return_amount,esod.statement_detail_rent_deposit_return_time,esod.statement_detail_deposit_amount,esod.statement_detail_deposit_paid_amount,esod.statement_detail_deposit_return_amount,esod.statement_detail_deposit_return_time,esod.statement_detail_rent_amount,esod.statement_detail_rent_paid_amount,esod.statement_detail_paid_time,esod.statement_detail_overdue_amount,esod.statement_detail_overdue_paid_amount,esod.statement_detail_overdue_days,esod.statement_detail_overdue_phase_count,esod.statement_detail_status,esod.statement_expect_pay_time,esod.statement_start_time,esod.statement_end_time,esod.data_status,esod.remark,esod.create_time,esod.create_user,esod.update_time,esod.update_user,esod.statement_detail_correct_amount,esod.statement_coupon_amount,esod.statement_detail_penalty_amount as statement_detail_penalty_amount,esod.statement_detail_penalty_paid_amount as statement_detail_penalty_paid_amount,esod.relet_order_item_refer_id
	</sql>

    <select id="findById" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.id = #{id, jdbcType=INTEGER} AND esod.data_status = 1
    </select>

    <select id="findByStatementOrderId" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.statement_order_id = #{statementOrderId, jdbcType=INTEGER} AND esod.data_status = 1
    </select>

    <select id="findByOrderIdAndOrderItemType" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_id = #{orderId, jdbcType=INTEGER} AND order_type = 1 AND esod.data_status = 1 AND
        esod.statement_detail_type = 1
        AND esod.order_item_type = #{orderItemType, jdbcType=INTEGER} AND esod.order_item_refer_id =
        #{orderItemReferId, jdbcType=INTEGER}
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC
    </select>

    <select id="findByOrderId" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_id = #{orderId, jdbcType=INTEGER} AND order_type = 1 AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC
    </select>

    <select id="findByOrderIdForOrderDetail" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>,eso.statement_order_no
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_statement_order eso ON esod.statement_order_id = eso.id AND eso.data_status = 1
        WHERE esod.order_id = #{orderId, jdbcType=INTEGER} AND order_type = 1 AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC
    </select>

    <select id="findByReturnOrderId" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_id = #{orderId, jdbcType=INTEGER} AND order_type = 4 AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC
    </select>

    <select id="findByOrderItemTypeAndId" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_item_type = #{orderItemType, jdbcType=INTEGER} AND esod.order_item_refer_id =
        #{orderItemId, jdbcType=INTEGER} AND order_type = 1 AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC,esod.statement_order_id ASC
    </select>

    <select id="findByOrderTypeAndId" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_type = #{orderType, jdbcType=INTEGER} AND esod.order_id = #{orderId, jdbcType=INTEGER} AND
        esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC,esod.statement_order_id ASC
    </select>

    <select id="findByOrderNo" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_id = #{orderId, jdbcType=INTEGER} AND esod.data_status = 1
    </select>

    <select id="listCount" resultType="java.lang.Integer" parameterType="map">
        SELECT count(esod.id) FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON esod.order_item_refer_id = eop.id AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON esod.order_item_refer_id = eom.id AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id
        LEFT JOIN erp_order eo on eo.id = esod.order_id and esod.order_type = 1
        <where>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.rentLengthType != null">
                and (eop.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eom.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eo.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER})
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.customerId != null">
                and esod.customer_id = #{maps.statementOrderDetailQueryParam.customerId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.statementOrderDetailQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay == 1">
                and esod.statement_detail_status = 0
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue == 1">
                <![CDATA[ and esod.statement_detail_overdue_amount > 0 ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createStartTime != null">
                <![CDATA[ AND eso.create_time >= #{maps.statementOrderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createEndTime != null">
                <![CDATA[ AND eso.create_time <= #{maps.statementOrderQueryParam.createEndTime} ]]>
            </if>
            <if test="true">
                AND esod.data_status = 1
            </if>
        </where>
    </select>

    <select id="listPage" resultMap="StatementOrderDetailDO" parameterType="map">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON esod.order_item_refer_id = eop.id AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON esod.order_item_refer_id = eom.id AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id
        LEFT JOIN erp_order eo on eo.id = esod.order_id and esod.order_type = 1
        <where>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.rentLengthType != null">
                and (eop.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eom.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eo.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER})
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.customerId != null">
                and esod.customer_id = #{maps.statementOrderDetailQueryParam.customerId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.statementOrderDetailQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay == 1">
                and esod.statement_detail_status = 0
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue == 1">
                <![CDATA[ and esod.statement_detail_overdue_amount > 0 ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createStartTime != null">
                <![CDATA[ AND eso.create_time >= #{maps.statementOrderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createEndTime != null">
                <![CDATA[ AND eso.create_time <= #{maps.statementOrderQueryParam.createEndTime} ]]>
            </if>
            <if test="true">
                AND esod.data_status = 1
            </if>
        </where>
        LIMIT #{maps.start},#{maps.pageSize}
    </select>
    <select id="listAllForStatistics" resultMap="StatementOrderDetailDO" parameterType="map">
        SELECT<include refid="column_List"/>,
        eo3.rent_type,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_count WHEN esod.order_item_type = 2 THEN eom.material_count
        end) goods_count,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_unit_amount WHEN esod.order_item_type = 2 THEN
        eom.material_unit_amount end) goods_unit_amount
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND
        esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND
        esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id
        LEFT JOIN erp_order eo1 ON eop.order_id = eo1.id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eom.order_id = eo2.id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON esod.order_id = eo3.id AND eo3.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo3.order_seller_id
        WHERE esod.data_status = 1 AND esod.order_type = 1 AND esod.statement_detail_status=8
        <if test="maps.incomeQueryParam.rentLengthType!=null">
            AND eo3.rent_length_type = #{maps.incomeQueryParam.rentLengthType}
        </if>
        <if test="maps.incomeQueryParam.customerName!=null&amp;&amp; maps.incomeQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.incomeQueryParam.customerName}','%' )
        </if>
        <if test="maps.incomeQueryParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.incomeQueryParam.subCompanyId}
        </if>
        <if test="maps.incomeQueryParam.salesmanName!=null&amp;&amp; maps.incomeQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.incomeQueryParam.salesmanName}','%' )
        </if>
        AND (
        (#{maps.incomeQueryParam.startTime}>esod.statement_start_time
        AND esod.statement_end_time>= #{maps.incomeQueryParam.startTime})
        OR
        (#{maps.incomeQueryParam.endTime}>esod.statement_start_time
        AND esod.statement_end_time>= #{maps.incomeQueryParam.endTime})
        OR
        (esod.statement_start_time >= #{maps.incomeQueryParam.startTime}
        AND #{maps.incomeQueryParam.endTime} > esod.statement_end_time)
        )
    </select>

    <select id="listAllForHome" resultMap="StatementOrderDetailDO" parameterType="map">
        SELECT<include refid="column_List"/>,
        (CASE WHEN esod.order_item_type = 1 THEN eop.rent_type WHEN esod.order_item_type = 2 THEN eom.rent_type end)
        rent_type,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_count WHEN esod.order_item_type = 2 THEN eom.material_count
        end) goods_count,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_unit_amount WHEN esod.order_item_type = 2 THEN
        eom.material_unit_amount end) goods_unit_amount FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND
        esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND
        esod.order_item_type = 2
        LEFT JOIN erp_order eo1 ON eop.order_id = eo1.id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eom.order_id = eo2.id AND eo2.data_status=1
        WHERE (CASE WHEN esod.order_item_type = 1 THEN eop.rent_length_type WHEN esod.order_item_type = 2 THEN
        eom.rent_length_type end)=#{maps.homeRentParam.rentLengthType}
        AND esod.data_status =1 AND esod.order_type = 1 AND esod.statement_detail_status=8
        AND esod.statement_expect_pay_time>=#{maps.homeRentParam.startTime} AND
        #{maps.homeRentParam.endTime}>esod.statement_expect_pay_time
    </select>

    <select id="queryAllRentIncomeForHome" resultType="java.math.BigDecimal" parameterType="map">
        SELECT IFNULL(SUM(statement_detail_amount),0)
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND
        esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND
        esod.order_item_type = 2
        LEFT JOIN erp_order eo1 ON eop.order_id = eo1.id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eom.order_id = eo2.id AND eo2.data_status=1
        WHERE (CASE WHEN esod.order_item_type = 1 THEN eop.rent_length_type WHEN esod.order_item_type = 2 THEN
        eom.rent_length_type end)=#{maps.homeRentParam.rentLengthType}
        AND esod.data_status =1 AND esod.order_type = 1 AND esod.statement_detail_status=8
        AND esod.statement_expect_pay_time>=#{maps.homeRentParam.startTime} AND
        #{maps.homeRentParam.endTime}>esod.statement_expect_pay_time
        AND statement_detail_type=1
    </select>

    <select id="listAllForRentInfo" resultMap="StatementOrderDetailDO" parameterType="map">
        SELECT<include refid="column_List"/>,
        eo3.order_seller_id salesman_id,
        eo3.order_sub_company_id sub_company_id,
        (CASE WHEN esod.order_item_type = 1 THEN eop.rent_length_type WHEN esod.order_item_type = 2 THEN eom.rent_length_type
        end) rent_length_type,
        (CASE WHEN esod.order_item_type = 1 THEN eop.rent_type WHEN esod.order_item_type = 2 THEN eom.rent_type end)
        rent_type,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_count WHEN esod.order_item_type = 2 THEN eom.material_count
        end) goods_count,
        (CASE WHEN esod.order_item_type = 1 THEN eop.product_unit_amount WHEN esod.order_item_type = 2 THEN
        eom.material_unit_amount end) goods_unit_amount
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND
        esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND
        esod.order_item_type = 2
        LEFT JOIN erp_order eo1 ON eop.order_id = eo1.id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eom.order_id = eo2.id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON esod.order_id = eo3.id AND eo3.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo3.order_seller_id
        WHERE esod.data_status = 1 AND esod.order_type = 1 AND esod.statement_detail_status=8
        <if test="maps.rentInfoQueryParam.rentLengthType!=null">
            AND (CASE WHEN esod.order_item_type = 1 THEN eop.rent_length_type WHEN esod.order_item_type = 2 THEN
            eom.rent_length_type end)=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        <if test="maps.rentInfoQueryParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.rentInfoQueryParam.subCompanyId}
        </if>
        <if test="maps.rentInfoQueryParam.salesmanName!=null&amp;&amp; maps.rentInfoQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.rentInfoQueryParam.salesmanName}','%' )
        </if>
        AND esod.statement_expect_pay_time>=#{maps.rentInfoQueryParam.startTime} AND
        #{maps.rentInfoQueryParam.endTime}>esod.statement_expect_pay_time
    </select>

    <sql id="set_column_sql">
        <set>
            <if test="statementOrderId != null">
                statement_order_id = #{statementOrderId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="orderItemType != null">
                order_item_type = #{orderItemType,jdbcType=INTEGER},
            </if>
            <if test="orderItemReferId != null">
                order_item_refer_id = #{orderItemReferId,jdbcType=INTEGER},
            </if>
            <if test="returnReferId != null">
                return_refer_id = #{returnReferId,jdbcType=INTEGER},
            </if>
            <if test="statementDetailType != null">
                statement_detail_type = #{statementDetailType,jdbcType=INTEGER},
            </if>
            <if test="statementDetailPhase != null">
                statement_detail_phase = #{statementDetailPhase,jdbcType=INTEGER},
            </if>
            <if test="statementDetailAmount != null">
                statement_detail_amount = #{statementDetailAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailOtherAmount != null">
                statement_detail_other_amount = #{statementDetailOtherAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailOtherPaidAmount != null">
                statement_detail_other_paid_amount = #{statementDetailOtherPaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailRentDepositAmount != null">
                statement_detail_rent_deposit_amount = #{statementDetailRentDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailRentDepositPaidAmount != null">
                statement_detail_rent_deposit_paid_amount = #{statementDetailRentDepositPaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailRentDepositReturnAmount != null">
                statement_detail_rent_deposit_return_amount =
                #{statementDetailRentDepositReturnAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailRentDepositReturnTime != null">
                statement_detail_rent_deposit_return_time = #{statementDetailRentDepositReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="statementDetailDepositAmount != null">
                statement_detail_deposit_amount = #{statementDetailDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailDepositPaidAmount != null">
                statement_detail_deposit_paid_amount = #{statementDetailDepositPaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailDepositReturnAmount != null">
                statement_detail_deposit_return_amount = #{statementDetailDepositReturnAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailDepositReturnTime != null">
                statement_detail_deposit_return_time = #{statementDetailDepositReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="statementDetailRentAmount != null">
                statement_detail_rent_amount = #{statementDetailRentAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailRentPaidAmount != null">
                statement_detail_rent_paid_amount = #{statementDetailRentPaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailPaidTime != null">
                statement_detail_paid_time = #{statementDetailPaidTime,jdbcType=DATE},
            </if>
            <if test="statementDetailOverdueAmount != null">
                statement_detail_overdue_amount = #{statementDetailOverdueAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailOverduePaidAmount != null">
                statement_detail_overdue_paid_amount = #{statementDetailOverduePaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailOverdueDays != null">
                statement_detail_overdue_days = #{statementDetailOverdueDays,jdbcType=INTEGER},
            </if>
            <if test="statementDetailOverduePhaseCount != null">
                statement_detail_overdue_phase_count = #{statementDetailOverduePhaseCount,jdbcType=INTEGER},
            </if>
            <if test="statementDetailStatus != null">
                statement_detail_status = #{statementDetailStatus,jdbcType=INTEGER},
            </if>
            <if test="statementExpectPayTime != null">
                statement_expect_pay_time = #{statementExpectPayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="statementStartTime != null">
                statement_start_time = #{statementStartTime,jdbcType=DATE},
            </if>
            <if test="statementEndTime != null">
                statement_end_time = #{statementEndTime,jdbcType=DATE},
            </if>
            <if test="statementDetailCorrectAmount != null">
                statement_detail_correct_amount = #{statementDetailCorrectAmount,jdbcType=DECIMAL},
            </if>
            <if test="dataStatus != null">
                data_status = #{dataStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="statementCouponAmount != null">
                statement_coupon_amount = #{statementCouponAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailPenaltyAmount != null">
                statement_detail_penalty_amount = #{statementDetailPenaltyAmount,jdbcType=DECIMAL},
            </if>
            <if test="statementDetailPenaltyPaidAmount != null">
                statement_detail_penalty_paid_amount = #{statementDetailPenaltyPaidAmount,jdbcType=DECIMAL},
            </if>
            <if test="reletOrderItemReferId != null">
                relet_order_item_refer_id = #{reletOrderItemReferId,jdbcType=INTEGER},
            </if>
        </set>
    </sql>

    <insert id="save" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.lxzl.erp.dataaccess.domain.statement.StatementOrderDetailDO">
        INSERT INTO erp_statement_order_detail
        <include refid="set_column_sql"/>
    </insert>

    <update id="update" parameterType="com.lxzl.erp.dataaccess.domain.statement.StatementOrderDetailDO">
        UPDATE erp_statement_order_detail
        <include refid="set_column_sql"/>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <insert id="saveList" parameterType="java.util.ArrayList">
        INSERT INTO erp_statement_order_detail
        (statement_order_id,customer_id,order_type,order_id,order_item_type,order_item_refer_id,return_refer_id,statement_detail_type,statement_detail_phase,statement_expect_pay_time,statement_detail_amount,statement_detail_other_amount,statement_detail_other_paid_amount,statement_detail_rent_deposit_amount,statement_detail_rent_deposit_paid_amount,statement_detail_rent_deposit_return_amount,statement_detail_deposit_amount,statement_detail_deposit_paid_amount,statement_detail_deposit_return_amount,statement_detail_rent_amount,statement_detail_rent_paid_amount,statement_detail_paid_time,statement_detail_overdue_amount,statement_detail_overdue_paid_amount,statement_detail_overdue_days,statement_detail_overdue_phase_count,statement_detail_status,statement_start_time,statement_end_time,data_status,remark,create_time,create_user,update_time,update_user,statement_coupon_amount,relet_order_item_refer_id)
        VALUES
        <foreach item="statementOrderDetailDO" index="index" collection="statementOrderDetailDOList" separator=",">
            (#{statementOrderDetailDO.statementOrderId},#{statementOrderDetailDO.customerId},#{statementOrderDetailDO.orderType},#{statementOrderDetailDO.orderId},#{statementOrderDetailDO.orderItemType},#{statementOrderDetailDO.orderItemReferId},#{statementOrderDetailDO.returnReferId},#{statementOrderDetailDO.statementDetailType},#{statementOrderDetailDO.statementDetailPhase},#{statementOrderDetailDO.statementExpectPayTime},#{statementOrderDetailDO.statementDetailAmount},#{statementOrderDetailDO.statementDetailOtherAmount},#{statementOrderDetailDO.statementDetailOtherPaidAmount},#{statementOrderDetailDO.statementDetailRentDepositAmount},#{statementOrderDetailDO.statementDetailRentDepositPaidAmount},#{statementOrderDetailDO.statementDetailRentDepositReturnAmount},#{statementOrderDetailDO.statementDetailDepositAmount},#{statementOrderDetailDO.statementDetailDepositPaidAmount},#{statementOrderDetailDO.statementDetailDepositReturnAmount},#{statementOrderDetailDO.statementDetailRentAmount},#{statementOrderDetailDO.statementDetailRentPaidAmount},#{statementOrderDetailDO.statementDetailPaidTime},#{statementOrderDetailDO.statementDetailOverdueAmount},#{statementOrderDetailDO.statementDetailOverduePaidAmount},#{statementOrderDetailDO.statementDetailOverdueDays},#{statementOrderDetailDO.statementDetailOverduePhaseCount},#{statementOrderDetailDO.statementDetailStatus},#{statementOrderDetailDO.statementStartTime},#{statementOrderDetailDO.statementEndTime},#{statementOrderDetailDO.dataStatus},#{statementOrderDetailDO.remark},#{statementOrderDetailDO.createTime},#{statementOrderDetailDO.createUser},#{statementOrderDetailDO.updateTime},#{statementOrderDetailDO.updateUser},#{statementOrderDetailDO.statementCouponAmount},#{statementOrderDetailDO.reletOrderItemReferId})
        </foreach>
    </insert>

    <select id="findByStatementOrderIdAndItemReferId" resultMap="StatementOrderDetailDO"
            parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_item_refer_id = #{itemReferId, jdbcType=INTEGER} AND esod.statement_order_id =
        #{statementOrderId, jdbcType=INTEGER} AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC
    </select>

    <update id="batchUpdate" parameterType="java.util.ArrayList">
        update erp_statement_order_detail
        SET
        <trim>
            statement_order_id =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementOrderId,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            customer_id =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.customerId,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            order_type =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.orderType,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            order_id =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.orderId,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            order_item_type =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.orderItemType,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            order_item_refer_id =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.orderItemReferId,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            return_refer_id =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.returnReferId,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_type =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailType,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_phase =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailPhase,jdbcType=INTEGER}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_other_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOtherAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_other_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOtherPaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_rent_deposit_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentDepositAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_rent_deposit_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentDepositPaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_rent_deposit_return_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentDepositReturnAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_rent_deposit_return_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentDepositReturnTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_deposit_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositPaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_return_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositReturnAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_return_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositReturnTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositPaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_return_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositReturnAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_deposit_return_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailDepositReturnTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_rent_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_rent_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailRentPaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_detail_paid_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailPaidTime,jdbcType=DATE}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_overdue_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOverdueAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_overdue_paid_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOverduePaidAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_overdue_days =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOverdueDays,jdbcType=INTEGER}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_overdue_phase_count =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailOverduePhaseCount,jdbcType=INTEGER}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_status =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailStatus,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_expect_pay_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementExpectPayTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_start_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementStartTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_end_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementEndTime,jdbcType=DATE}
            </foreach>
        </trim>

        <trim prefix=",">
            statement_detail_correct_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementDetailCorrectAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>

        <trim prefix=",">
            data_status =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.dataStatus,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            remark =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.remark,jdbcType=VARCHAR}
            </foreach>
        </trim>
        <trim prefix=",">
            create_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>
        <trim prefix=",">
            create_user =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.createUser,jdbcType=VARCHAR}
            </foreach>
        </trim>
        <trim prefix=",">
            update_time =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
            </foreach>
        </trim>

        <trim prefix=",">
            update_user =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.updateUser,jdbcType=DECIMAL}
            </foreach>
        </trim>
        <trim prefix=",">
            statement_coupon_amount =
            <foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
                when #{item.id,jdbcType=INTEGER} then #{item.statementCouponAmount,jdbcType=DECIMAL}
            </foreach>
        </trim>
        WHERE id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <update id="deleteByOrderId">
        UPDATE erp_statement_order_detail
        <set>
            data_status = 2,update_time = now(),update_user = #{updateUser,jdbcType=VARCHAR}
        </set>
        WHERE order_id = #{orderId, jdbcType=INTEGER} AND order_type=1 AND  data_status=1
    </update>

    <select id="findByReturnReferIdAndStatementType" resultMap="StatementOrderDetailDO"
            parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.return_refer_id = #{returnReferId, jdbcType=INTEGER} AND esod.statement_detail_type =
        #{statementDetailType, jdbcType=INTEGER} AND esod.data_status = 1
    </select>

    <delete id="realDeleteStatementOrderDetailList">
        DELETE FROM erp_statement_order_detail
        WHERE id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </delete>
    <select id="queryStatementOrderDetailCountByParam" resultType="java.lang.Integer" parameterType="map">
        SELECT count(distinct amount.order_id) FROM (
            SELECT
            esod.order_id AS order_id,
            SUM(esod.statement_detail_rent_paid_amount) AS rentPaidAmount,
            SUM(esod.statement_detail_deposit_paid_amount + esod.statement_detail_rent_deposit_paid_amount)AS depositPaidAmount,
            SUM(esod.statement_detail_rent_paid_amount + esod.statement_detail_deposit_paid_amount + esod.statement_detail_rent_deposit_paid_amount)AS rentDepositPaidAmount
            FROM erp_statement_order_detail esod
            <where>
                <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createStartTime != null">
                    <![CDATA[ AND esod.create_time >= #{maps.statementOrderDetailQueryParam.createStartTime} ]]>
                </if>
                <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createEndTime != null">
                    <![CDATA[ AND esod.create_time <= #{maps.statementOrderDetailQueryParam.createEndTime} ]]>
                </if>
                <if test="true">
                    AND esod.data_status = 1
                </if>
                AND (esod.statement_detail_status = 4 OR esod.statement_detail_status = 8) AND  esod.order_type = 1
            </where>
            GROUP BY esod.order_id
        ) amount
        LEFT JOIN erp_order eo on eo.id = amount.order_id and eo.data_status = 1
        LEFT JOIN erp_customer ec on ec.id = eo.buyer_customer_id and ec.data_status = 1
        LEFT JOIN erp_sub_company esc_order on esc_order.id = eo.order_sub_company_id and esc_order.data_status = 1
        LEFT JOIN erp_sub_company escd_delivery on escd_delivery.id = eo.delivery_sub_company_id and escd_delivery.data_status = 1
        LEFT JOIN erp_sub_company escd_customer on escd_customer.id = ec.owner_sub_company_id and escd_customer.data_status = 1
        <where>
            <if test="maps.subCompanyId != null &amp;&amp; maps.currentUserType != 1 &amp;&amp; maps.currentUserType != 2">
                esc_order.id = #{maps.subCompanyId,jdbcType=INTEGER} OR (CASE WHEN (esc_order.id = 10 OR esc_order.id = 11)THEN (escd_delivery.id = #{maps.subCompanyId,jdbcType=INTEGER}) END )
            </if>
        </where>
    </select>

    <select id="queryStatementOrderDetailByParam" resultMap="FinanceStatementOrderPayDetail" parameterType="map">
        SELECT amount.rentPaidAmount,(IFNULL(amount.rentDepositPaidAmount,0)+IFNULL(amount.depositPaidAmount,0)) AS depositPaidAmount,(IFNULL(amount.rentPaidAmount,0)+IFNULL(amount.depositPaidAmount,0)+IFNULL(amount.rentDepositPaidAmount,0)) AS totalPaidAmount,
        eo.buyer_customer_name AS customerName,
        eo.order_no AS orderNo,
        ec.customer_no AS customerNo,
        esc_order.sub_company_name AS  orderCompany,
        escd_customer.sub_company_name AS  customerCompany,
        escd_delivery.sub_company_name AS  deliveryCompany,
        ek3mc.k3_customer_code AS k3CustomerCode FROM (
                SELECT
                esod.order_id AS order_id,
                SUM(esod.statement_detail_rent_paid_amount) AS rentPaidAmount,
                SUM(esod.statement_detail_deposit_paid_amount) AS depositPaidAmount,
                SUM(esod.statement_detail_rent_deposit_paid_amount) AS rentDepositPaidAmount
                FROM erp_statement_order_detail esod
                INNER JOIN erp_statement_order eso ON eso.id = esod.statement_order_id AND eso.data_status = 1
                <where>
                    <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createStartTime != null">
                        <![CDATA[ AND eso.statement_expect_pay_time >= #{maps.statementOrderDetailQueryParam.createStartTime} ]]>
                    </if>
                    <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createEndTime != null">
                        <![CDATA[ AND eso.statement_expect_pay_time <= #{maps.statementOrderDetailQueryParam.createEndTime} ]]>
                    </if>
                    <if test="true">
                        AND esod.data_status = 1
                    </if>
                    AND (esod.statement_detail_status = 4 OR esod.statement_detail_status = 8) AND  esod.order_type = 1
                </where>
                GROUP BY esod.order_id
        ) amount
        LEFT JOIN erp_order eo on eo.id = amount.order_id and eo.data_status = 1
        LEFT JOIN erp_customer ec on ec.id = eo.buyer_customer_id and ec.data_status = 1
        LEFT JOIN erp_sub_company esc_order on esc_order.id = eo.order_sub_company_id and esc_order.data_status = 1
        LEFT JOIN erp_sub_company escd_delivery on escd_delivery.id = eo.delivery_sub_company_id and escd_delivery.data_status = 1
        LEFT JOIN erp_sub_company escd_customer on escd_customer.id = ec.owner_sub_company_id and escd_customer.data_status = 1
        LEFT JOIN erp_k3_mapping_customer ek3mc on ek3mc.erp_customer_code = ec.customer_no
        <where>
            <if test="maps.subCompanyId != null &amp;&amp; maps.currentUserType != 1 &amp;&amp; maps.currentUserType != 2">
                esc_order.id = #{maps.subCompanyId,jdbcType=INTEGER} OR (CASE WHEN (esc_order.id = 10 OR esc_order.id = 11)THEN (escd_delivery.id = #{maps.subCompanyId,jdbcType=INTEGER}) END )
            </if>
        </where>
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <select id="findPrdcByReletOrderItemReferIds" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.data_status = 1 AND esod.order_item_type=1 AND  esod.relet_order_item_refer_id = #{id}

    </select>

    <select id="findMtrByReletOrderItemReferIds" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.data_status = 1 AND esod.order_item_type=2 AND  esod.relet_order_item_refer_id = #{id}
    </select>

    <update id="deleteStatementOrderDetailList">
        UPDATE erp_statement_order_detail
        SET data_status=2
        WHERE id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <select id="findReturnByOrderItemTypeAndId" resultMap="StatementOrderDetailDO" parameterType="java.lang.Integer">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.order_item_type = #{orderItemType, jdbcType=INTEGER} AND esod.order_item_refer_id =
        #{orderItemId, jdbcType=INTEGER} AND order_type = 4 AND esod.data_status = 1
        ORDER BY esod.statement_expect_pay_time ASC,esod.statement_detail_phase ASC,esod.statement_order_id ASC
    </select>

    <select id="exportListPage" resultMap="CheckStatementOrderDetailDO" parameterType="map">
        select distinct t1.buyer_customer_id as customer_id,<![CDATA[ date_format(t0.month_config,'%Y-%m')]]> as monthTime,
        case when t4.order_id is null then t1.id else t4.order_id end as order_id,
        case when t4.order_item_refer_id is null then t2.id else t4.order_item_refer_id end as order_item_refer_id,
        case when t4.order_type is null then 1 else t4.order_type end as order_type,
        case when t4.order_item_type is null then 1 else t4.order_item_type end as order_item_type,
        case when t4.orderRentType is null then t1.rent_type else t4.orderRentType end as orderRentType,
        case when order_type = 4 then t4.orderRentStartTime when t4.orderRentStartTime is null or t4.orderRentStartTime = '0000-00-00 00:00:00' then t1.rent_start_time else t4.orderRentStartTime end as orderRentStartTime,
        case when order_type = 4 then t4.orderRentStartTime when t4.orderExpectReturnTime is null or t4.orderExpectReturnTime = '0000-00-00 00:00:00' then t1.expect_return_time else t4.orderExpectReturnTime end as orderExpectReturnTime,
        case when t4.orderRentTimeLength is null then t1.rent_time_length else t4.orderRentTimeLength end as orderRentTimeLength,
        case when t4.isNew is null then t2.is_new_product else t4.isNew end as isNew,
        case when t4.payMode is null then t2.pay_mode else t4.payMode end as payMode,
        case when t4.depositCycle is null then t2.deposit_cycle else t4.depositCycle end as depositCycle,
        case when t4.paymentCycle is null then t2.payment_cycle  else t4.paymentCycle end as paymentCycle,
        case when t4.statement_expect_pay_time is null then t0.month_start_config else t4.statement_expect_pay_time end as statement_expect_pay_time,
        case when t4.id is null then t1.id else t4.id end as id,
        case when t4.statement_start_time is null then t0.month_start_config else t4.statement_start_time end as statement_start_time,
        case when t4.statement_end_time is null then t0.month_end_config else t4.statement_end_time end as statement_end_time,
        --         case when t4.statement_detail_amount is null then t5.statement_detail_amount else t4.statement_detail_amount end as statementDetailEndAmount,
        --         case when t4.statement_detail_amount is null then t5.statement_expect_pay_time else t4.statement_expect_pay_time end as statementExpectPayEndTime,
        --         case when t4.statement_detail_rent_amount is null or t4.statement_detail_rent_amount = 0 then t5.statement_detail_rent_amount else t4.statement_detail_rent_amount end as statementDetailRentEndAmount,
        t4.*
        from erp_month_config t0 left join erp_order t1
        on t0.month_start_config between t1.rent_start_time and t1.expect_return_time or t0.month_end_config between t1.rent_start_time and t1.expect_return_time
        or date_format(t1.rent_start_time,'%Y-%m') = date_format(t0.month_config,'%Y-%m')
        or date_format(t1.expect_return_time,'%Y-%m') = date_format(t0.month_config,'%Y-%m')
        left join erp_order_product t2 on t1.id = t2.order_id and t2.data_status = 1
        left join
        (
        SELECT
        <![CDATA[ date_format(esod.statement_expect_pay_time,'%Y-%m')]]> AS monthTime,
        <include refid="column_List"/>,
        eo.rent_type AS orderRentType,
        eo.rent_start_time AS orderRentStartTime,
        eo.expect_return_time AS orderExpectReturnTime,
        eo.rent_time_length AS orderRentTimeLength,
        (CASE WHEN eop.id is NULL THEN eom.is_new_material ELSE eop.is_new_product END ) AS isNew,
        (CASE WHEN eop.id is NULL THEN eom.pay_mode ELSE eop.pay_mode END ) AS payMode,
        (CASE WHEN eop.id is NULL THEN eom.deposit_cycle ELSE eop.deposit_cycle END ) AS depositCycle,
        (CASE WHEN eop.id is NULL THEN eom.payment_cycle ELSE eop.payment_cycle END ) AS paymentCycle
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON esod.order_item_refer_id = eop.id AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON esod.order_item_refer_id = eom.id AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id
        LEFT JOIN erp_order eo on eo.id = esod.order_id and esod.order_type = 1
        <where>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.rentLengthType != null">
                and (eop.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eom.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER} OR
                eo.rent_length_type = #{maps.statementOrderDetailQueryParam.rentLengthType, jdbcType=INTEGER})
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.customerId != null">
                and esod.customer_id = #{maps.statementOrderDetailQueryParam.customerId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.subCompanyId != null">
                and eo.order_sub_company_id = #{maps.statementOrderDetailQueryParam.subCompanyId, jdbcType=INTEGER}
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay != null &amp;&amp; maps.statementOrderDetailQueryParam.isNeedToPay == 1">
                and esod.statement_detail_status = 0
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue != null &amp;&amp; maps.statementOrderDetailQueryParam.isOverdue == 1">
                <![CDATA[ and esod.statement_detail_overdue_amount > 0 ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createStartTime != null">
                <![CDATA[ AND eso.create_time >= #{maps.statementOrderQueryParam.createStartTime} ]]>
            </if>
            <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.createEndTime != null">
                <![CDATA[ AND eso.create_time <= #{maps.statementOrderQueryParam.createEndTime} ]]>
            </if>
            <if test="true">
                AND esod.data_status = 1
            </if>
        </where>
        ) t4 on t1.buyer_customer_id = t4.customer_id and t4.monthTime = date_format(t0.month_config,'%Y-%m') and t1.id = t4.order_id
        <!--left join (-->
        <!--select m1.id,month_config,statement_detail_amount,statement_detail_rent_amount,statement_expect_pay_time from erp_month_config m0 left join erp_statement_order_detail m1 on m0.month_config BETWEEN statement_start_time and statement_end_time and m1.data_status = 1-->
        <!--<where>-->
        <!--<if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.customerId != null">-->
        <!--and m1.customer_id = #{maps.statementOrderDetailQueryParam.customerId, jdbcType=INTEGER}-->
        <!--</if>-->
        <!--</where>-->
        <!--) t5 on t4.id = t5.id-->
        where t1.order_status in (20,22,24,32)
        <if test="maps.statementOrderDetailQueryParam != null &amp;&amp; maps.statementOrderDetailQueryParam.customerId != null">
            and t1.buyer_customer_id = #{maps.statementOrderDetailQueryParam.customerId, jdbcType=INTEGER}
        </if>
        and t1.id is not null order by monthTime DESC, orderRentStartTime ASC, order_item_refer_id ASC
    </select>

    <select id="findByReletOrderItemReferId" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.data_status = 1 AND esod.relet_order_item_refer_id = #{id, jdbcType=INTEGER} AND statement_detail_type=1
    </select>

    <select id="findThisPeriodsByOrderInfo" resultType="java.util.Map">
        select sum(statement_detail_amount) as statementDetailAmount,sum(statement_detail_rent_amount) as statementDetailRentAmount,min(statement_start_time) as statementStartTime, max(statement_end_time) as statementEndTime, statement_expect_pay_time as statementExpectPayTime from erp_statement_order_detail
        where data_status = 1 and order_id =  #{orderId, jdbcType=INTEGER} and order_item_refer_id =  #{orderItemReferId, jdbcType=INTEGER}
        <if test="payMode != null &amp;&amp; payMode == 2">
            <![CDATA[ AND statement_expect_pay_time >= #{expectPayTime, jdbcType=TIMESTAMP} ]]>
        </if>
        <if test="payMode != null &amp;&amp; payMode == 1">
            <![CDATA[ AND statement_expect_pay_time <= #{expectPayTime, jdbcType=TIMESTAMP} ]]>
        </if>
        and statement_detail_amount > 0 group by statementExpectPayTime limit 0,1;
    </select>

    <select id="findProductRentByReletOrderItemReferIds" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.data_status = 1 AND statement_detail_type=1 AND order_item_type =1 AND esod.relet_order_item_refer_id in
        <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="findMaterialRentByReletOrderItemReferIds" resultMap="StatementOrderDetailDO">
        SELECT
        <include refid="column_List"/>
        FROM erp_statement_order_detail esod
        WHERE esod.data_status = 1 AND statement_detail_type=1 AND order_item_type =2 AND esod.relet_order_item_refer_id in
        <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
</mapper>