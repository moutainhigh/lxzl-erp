<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.replace.ReplaceOrderProductMapper">

	<resultMap id="ReplaceOrderProductDO" type="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderProductDO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="replace_order_id" jdbcType="INTEGER" property="replaceOrderId" />
		<result column="replace_order_no" jdbcType="VARCHAR" property="replaceOrderNo" />
		<result column="old_order_product_id" jdbcType="INTEGER" property="oldOrderProductId" />
		<result column="old_product_entry" jdbcType="INTEGER" property="oldProductEntry" />
		<result column="new_order_product_id" jdbcType="INTEGER" property="newOrderProductId" />
		<result column="rent_type" jdbcType="INTEGER" property="rentType" />
		<result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
		<result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
		<result column="deposit_cycle" jdbcType="INTEGER" property="depositCycle" />
		<result column="payment_cycle" jdbcType="INTEGER" property="paymentCycle" />
		<result column="pay_mode" jdbcType="INTEGER" property="payMode" />
		<result column="old_product_unit_amount" jdbcType="DECIMAL" property="oldProductUnitAmount" />
		<result column="product_id" jdbcType="INTEGER" property="productId" />
		<result column="product_name" jdbcType="VARCHAR" property="productName" />
		<result column="product_sku_id" jdbcType="INTEGER" property="productSkuId" />
		<result column="product_sku_name" jdbcType="VARCHAR" property="productSkuName" />
		<result column="replace_product_count" jdbcType="INTEGER" property="replaceProductCount" />
		<result column="product_unit_amount" jdbcType="DECIMAL" property="productUnitAmount" />
		<result column="rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount" />
		<result column="deposit_amount" jdbcType="DECIMAL" property="depositAmount" />
		<result column="credit_deposit_amount" jdbcType="DECIMAL" property="creditDepositAmount" />
		<result column="is_new_product" jdbcType="INTEGER" property="isNewProduct" />
		<result column="data_status" jdbcType="INTEGER" property="dataStatus" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="VARCHAR" property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR" property="updateUser" />
		<result column="real_replace_product_count" jdbcType="INTEGER" property="realReplaceProductCount" />
		<result column="is_relet_order_replace" jdbcType="INTEGER" property="isReletOrderReplace" />
		<result column="relet_order_item_id" jdbcType="INTEGER" property="reletOrderItemId" />
		<result column="old_product_id" jdbcType="INTEGER" property="oldProductId" />
		<result column="old_product_name" jdbcType="VARCHAR" property="oldProductName" />
		<result column="old_product_sku_id" jdbcType="INTEGER" property="oldProductSkuId" />
		<result column="old_product_sku_name" jdbcType="VARCHAR" property="oldProductSkuName" />
		<result column="old_product_number" jdbcType="VARCHAR" property="oldProductNumber" />
		<result column="old_is_new_product" jdbcType="INTEGER" property="oldIsNewProduct" />
		<result column="product_number" jdbcType="VARCHAR" property="productNumber" />
		<result column="old_renting_product_count" jdbcType="INTEGER" property="oldRentingProductCount" />
		<result column="old_product_sku_snapshot" jdbcType="VARCHAR" property="oldProductSkuSnapshot" />
		<result column="new_product_sku_snapshot" jdbcType="VARCHAR" property="newProductSkuSnapshot" />
	</resultMap>

	<sql id="column_List">
		erop.id,erop.replace_order_id,erop.replace_order_no,erop.old_order_product_id,erop.old_product_entry,erop.new_order_product_id,erop.rent_type,erop.rent_time_length,erop.rent_length_type,erop.deposit_cycle,erop.payment_cycle,erop.pay_mode,erop.old_product_unit_amount,erop.product_id,erop.product_name,erop.product_sku_id,erop.product_sku_name,erop.replace_product_count,erop.product_unit_amount,erop.rent_deposit_amount,erop.deposit_amount,erop.credit_deposit_amount,erop.is_new_product,erop.data_status,erop.remark,erop.create_time,erop.create_user,erop.update_time,erop.update_user,erop.real_replace_product_count,erop.is_relet_order_replace,erop.relet_order_item_id,
		erop.old_product_id,erop.old_product_name,erop.old_product_sku_id,erop.old_product_sku_name,erop.old_product_number,erop.old_is_new_product,erop.product_number,erop.old_renting_product_count,erop.old_product_sku_snapshot,erop.new_product_sku_snapshot
	</sql>

	<select id="findById" resultMap="ReplaceOrderProductDO" parameterType="java.lang.Integer">
		SELECT <include refid="column_List"/> FROM erp_replace_order_product erop 
		WHERE erop.id = #{id, jdbcType=INTEGER} AND erop.data_status = 1 
	</select>

	<select id="listCount" resultType="java.lang.Integer" parameterType="map">
		SELECT count(erop.id) FROM erp_replace_order_product erop 
		<where>
			<if test="true">
				AND erop.data_status = 1
			</if>
		</where>
	</select>

	<select id="listPage" resultMap="ReplaceOrderProductDO" parameterType="map">
		SELECT <include refid="column_List"/> FROM erp_replace_order_product erop 
		<where>
			<if test="true">
				AND erop.data_status = 1
			</if>
		</where>
		LIMIT #{maps.start},#{maps.pageSize}
	</select>

	<sql id="set_column_sql">
		<set>
			<if test="replaceOrderId != null">
				replace_order_id = #{replaceOrderId,jdbcType=INTEGER},
			</if>
			<if test="replaceOrderNo != null">
				replace_order_no = #{replaceOrderNo,jdbcType=VARCHAR},
			</if>
			<if test="oldOrderProductId != null">
				old_order_product_id = #{oldOrderProductId,jdbcType=INTEGER},
			</if>
			<if test="oldProductEntry != null">
				old_product_entry = #{oldProductEntry,jdbcType=INTEGER},
			</if>
			<if test="newOrderProductId != null">
				new_order_product_id = #{newOrderProductId,jdbcType=INTEGER},
			</if>
			<if test="rentType != null">
				rent_type = #{rentType,jdbcType=INTEGER},
			</if>
			<if test="rentTimeLength != null">
				rent_time_length = #{rentTimeLength,jdbcType=INTEGER},
			</if>
			<if test="rentLengthType != null">
				rent_length_type = #{rentLengthType,jdbcType=INTEGER},
			</if>
			<if test="depositCycle != null">
				deposit_cycle = #{depositCycle,jdbcType=INTEGER},
			</if>
			<if test="paymentCycle != null">
				payment_cycle = #{paymentCycle,jdbcType=INTEGER},
			</if>
			<if test="payMode != null">
				pay_mode = #{payMode,jdbcType=INTEGER},
			</if>
			<if test="oldProductUnitAmount != null">
				old_product_unit_amount = #{oldProductUnitAmount,jdbcType=DECIMAL},
			</if>
			<if test="productId != null">
				product_id = #{productId,jdbcType=INTEGER},
			</if>
			<if test="productName != null">
				product_name = #{productName,jdbcType=VARCHAR},
			</if>
			<if test="productSkuId != null">
				product_sku_id = #{productSkuId,jdbcType=INTEGER},
			</if>
			<if test="productSkuName != null">
				product_sku_name = #{productSkuName,jdbcType=VARCHAR},
			</if>
			<if test="replaceProductCount != null">
				replace_product_count = #{replaceProductCount,jdbcType=INTEGER},
			</if>
			<if test="productUnitAmount != null">
				product_unit_amount = #{productUnitAmount,jdbcType=DECIMAL},
			</if>
			<if test="rentDepositAmount != null">
				rent_deposit_amount = #{rentDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="depositAmount != null">
				deposit_amount = #{depositAmount,jdbcType=DECIMAL},
			</if>
			<if test="creditDepositAmount != null">
				credit_deposit_amount = #{creditDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="isNewProduct != null">
				is_new_product = #{isNewProduct,jdbcType=INTEGER},
			</if>
			<if test="dataStatus != null">
				data_status = #{dataStatus,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="realReplaceProductCount != null">
				real_replace_product_count = #{realReplaceProductCount,jdbcType=INTEGER},
			</if>
			<if test="isReletOrderReplace != null">
				is_relet_order_replace = #{isReletOrderReplace,jdbcType=INTEGER},
			</if>
			<if test="reletOrderItemId != null">
				relet_order_item_id = #{reletOrderItemId,jdbcType=INTEGER},
			</if>
			<if test="oldProductId != null">
				old_product_id = #{oldProductId,jdbcType=INTEGER},
			</if>
			<if test="oldProductName != null">
				old_product_name = #{oldProductName,jdbcType=VARCHAR},
			</if>
			<if test="oldProductSkuId != null">
				old_product_sku_id = #{oldProductSkuId,jdbcType=INTEGER},
			</if>
			<if test="oldProductSkuName != null">
				old_product_sku_name = #{oldProductSkuName,jdbcType=VARCHAR},
			</if>
			<if test="oldProductNumber != null">
				old_product_number = #{oldProductNumber,jdbcType=VARCHAR},
			</if>
			<if test="oldIsNewProduct != null">
				old_is_new_product = #{oldIsNewProduct,jdbcType=INTEGER},
			</if>
			<if test="productNumber != null">
				product_number = #{productNumber,jdbcType=VARCHAR},
			</if>
			<if test="oldRentingProductCount != null">
				old_renting_product_count = #{oldRentingProductCount,jdbcType=INTEGER},
			</if>
			<if test="oldProductSkuSnapshot != null">
				old_product_sku_snapshot = #{oldProductSkuSnapshot,jdbcType=VARCHAR},
			</if>
			<if test="newProductSkuSnapshot != null">
				new_product_sku_snapshot = #{newProductSkuSnapshot,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>

	<insert id="save" keyProperty="id" useGeneratedKeys="true" parameterType="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderProductDO">
		INSERT INTO erp_replace_order_product <include refid="set_column_sql"/>
	</insert>

	<update id="update" parameterType="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderProductDO">
		UPDATE erp_replace_order_product <include refid="set_column_sql"/> WHERE id = #{id, jdbcType=INTEGER}
	</update>
	<insert id="saveList" parameterType="java.util.ArrayList" >
		INSERT INTO erp_replace_order_product (replace_order_id,replace_order_no,old_order_product_id,old_product_entry,new_order_product_id,rent_type,rent_time_length,rent_length_type,deposit_cycle,payment_cycle,pay_mode,
		old_product_unit_amount,product_id,product_name,product_sku_id,product_sku_name,replace_product_count,product_unit_amount,rent_deposit_amount,deposit_amount,credit_deposit_amount,is_new_product,data_status,remark,create_time,
		create_user,update_time,update_user,real_replace_product_count,is_relet_order_replace,relet_order_item_id,old_product_id,old_product_name,old_product_sku_id,old_product_sku_name,old_product_number,old_is_new_product,product_number,old_renting_product_count,
		old_product_sku_snapshot,new_product_sku_snapshot)
		values
		<foreach collection="list" item="replaceOrderProductDO" separator="," >
			(#{replaceOrderProductDO.replaceOrderId}, #{replaceOrderProductDO.replaceOrderNo},#{replaceOrderProductDO.oldOrderProductId},
			#{replaceOrderProductDO.oldProductEntry},#{replaceOrderProductDO.newOrderProductId},#{replaceOrderProductDO.rentType},#{replaceOrderProductDO.rentTimeLength},
			#{replaceOrderProductDO.rentLengthType},#{replaceOrderProductDO.depositCycle},#{replaceOrderProductDO.paymentCycle},
			#{replaceOrderProductDO.payMode},#{replaceOrderProductDO.oldProductUnitAmount},#{replaceOrderProductDO.productId},#{replaceOrderProductDO.productName},
			#{replaceOrderProductDO.productSkuId},#{replaceOrderProductDO.productSkuName},#{replaceOrderProductDO.replaceProductCount},
			#{replaceOrderProductDO.productUnitAmount},#{replaceOrderProductDO.rentDepositAmount},#{replaceOrderProductDO.depositAmount},#{replaceOrderProductDO.creditDepositAmount},
			#{replaceOrderProductDO.isNewProduct},#{replaceOrderProductDO.dataStatus},#{replaceOrderProductDO.remark},
			#{replaceOrderProductDO.createTime},#{replaceOrderProductDO.createUser},#{replaceOrderProductDO.updateTime},#{replaceOrderProductDO.updateUser},
			#{replaceOrderProductDO.realReplaceProductCount},#{replaceOrderProductDO.isReletOrderReplace},#{replaceOrderProductDO.reletOrderItemId},
			#{replaceOrderProductDO.oldProductId},#{replaceOrderProductDO.oldProductName},#{replaceOrderProductDO.oldProductSkuId},
			#{replaceOrderProductDO.oldProductSkuName},#{replaceOrderProductDO.oldProductNumber},#{replaceOrderProductDO.oldIsNewProduct},
			#{replaceOrderProductDO.productNumber},#{replaceOrderProductDO.oldRentingProductCount},#{replaceOrderProductDO.oldProductSkuSnapshot},#{replaceOrderProductDO.newProductSkuSnapshot})
		</foreach>
	</insert>

	<update id="updateListForCancel" parameterType="java.util.ArrayList">
		update erp_replace_order_product
		SET
		<trim >
			update_user =
			<foreach item="replaceOrderProductDO" collection="replaceOrderProductDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderProductDO.id} then #{replaceOrderProductDO.updateUser}
			</foreach>
		</trim>
		<trim prefix=",">
			data_status =
			<foreach item="replaceOrderProductDO" collection="replaceOrderProductDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderProductDO.id} then #{replaceOrderProductDO.dataStatus}
			</foreach>
		</trim>
		<trim prefix=",">
			update_time =
			<foreach item="replaceOrderProductDO" collection="replaceOrderProductDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderProductDO.id} then #{replaceOrderProductDO.updateTime}
			</foreach>
		</trim>
		WHERE id in
		<foreach collection="replaceOrderProductDOList" index="index" item="replaceOrderProductDO" separator="," open="(" close=")">
			#{replaceOrderProductDO.id,jdbcType=INTEGER}
		</foreach>
	</update>

	<select id="findByOldProductIdAndRepalceId" resultMap="ReplaceOrderProductDO">
		SELECT <include refid="column_List"/> FROM erp_replace_order_product erop
		WHERE erop.old_order_product_id = #{oldProductId, jdbcType=INTEGER} AND erop.replace_order_id = #{replaceOrderId, jdbcType=INTEGER} AND erop.data_status = 1
	</select>

	<select id="findByNewProductIdAndRepalceId" resultMap="ReplaceOrderProductDO">
		SELECT <include refid="column_List"/> FROM erp_replace_order_product erop
		WHERE erop.new_order_product_id = #{newProductId, jdbcType=INTEGER} AND erop.replace_order_id = #{replaceOrderId, jdbcType=INTEGER} AND erop.data_status = 1
	</select>
</mapper>