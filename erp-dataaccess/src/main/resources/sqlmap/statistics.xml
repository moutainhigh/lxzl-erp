<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.statistics.StatisticsMapper">

    <resultMap id="StatisticsIncome" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsIncome">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_deposit" jdbcType="DECIMAL" property="totalDeposit" />
        <result column="total_rent_deposit" jdbcType="DECIMAL" property="totalRentDeposit" />
        <result column="total_return_deposit" jdbcType="DECIMAL" property="totalReturnDeposit" />
        <result column="total_return_rent_deposit" jdbcType="DECIMAL" property="totalReturnRentDeposit" />
        <result column="total_other_paid" jdbcType="DECIMAL" property="totalOtherPaid" />
        <result column="total_correct_amount" jdbcType="DECIMAL" property="totalCorrectAmount" />
        <result column="total_overdue_amount" jdbcType="DECIMAL" property="totalOverdueAmount" />
    </resultMap>

    <select id="queryIncomeCount" resultMap="StatisticsIncome" parameterType="map">
        SELECT COUNT(distinct esod.id) total_count,
        IFNULL(SUM(esod.statement_detail_deposit_paid_amount),0) total_deposit,
        IFNULL(SUM(esod.statement_detail_rent_deposit_paid_amount),0) total_rent_deposit,
        IFNULL(SUM(esod.statement_detail_other_amount),0) total_other_paid,
        IFNULL(SUM(esod.statement_detail_correct_amount),0) total_correct_amount,
        IFNULL(SUM(esod.statement_detail_overdue_paid_amount),0) total_overdue_amount,
        SUM(CASE WHEN esord.return_type=1 THEN esord.return_amount ELSE 0 END ) total_return_rent_deposit,
        SUM(CASE WHEN esord.return_type=2 THEN esord.return_amount ELSE 0 END ) total_return_deposit
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status =1
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status =1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status =1
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_statement_order_return_detail esord ON esod.id = esord.statement_order_id AND esord.data_status=1 AND esod.statement_detail_type = 4
        AND esord.return_time>=#{maps.incomeQueryParam.startTime} AND #{maps.incomeQueryParam.endTime}>esord.return_time
        WHERE esod.order_type =1 AND esod.data_status=1 AND esod.statement_detail_status = 8

        <if test="maps.incomeQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.incomeQueryParam.rentLengthType}
        </if>
        <if test="maps.incomeQueryParam.customerName!=null&amp;&amp; maps.incomeQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.incomeQueryParam.customerName}','%' )
        </if>
        <if test="maps.incomeQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.incomeQueryParam.subCompanyId}
        </if>
        <if test="maps.incomeQueryParam.salesmanName!=null&amp;&amp; maps.incomeQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.incomeQueryParam.salesmanName}','%' )
        </if>
        AND (
        esord.return_time>=#{maps.incomeQueryParam.startTime}
        AND #{maps.incomeQueryParam.endTime}>esord.return_time
        OR
        (
        (#{maps.incomeQueryParam.startTime}>=esod.statement_start_time
        AND  esod.statement_end_time>= #{maps.incomeQueryParam.startTime})
        OR
        (#{maps.incomeQueryParam.endTime}>esod.statement_start_time
        AND  esod.statement_end_time>= #{maps.incomeQueryParam.endTime})
        OR
        (esod.statement_start_time >= #{maps.incomeQueryParam.startTime}
        AND  #{maps.incomeQueryParam.endTime} > esod.statement_end_time)
        )
        )
    </select>
    <resultMap id="StatisticsIncomeDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsIncomeDetail">
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="deposit_paid_amount" jdbcType="DECIMAL" property="depositPaidAmount" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherPaidAmount" />
        <result column="rent_deposit_paid_amount" jdbcType="DECIMAL" property="rentDepositPaidAmount" />
        <result column="return_deposit_paid_amount" jdbcType="DECIMAL" property="returnDepositPaidAmount" />
        <result column="return_rent_deposit_paid_amount" jdbcType="DECIMAL" property="returnRentDepositPaidAmount" />
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
        <result column="rent_amount" jdbcType="TIMESTAMP" property="rentAmount" />
        <result column="correct_amount" jdbcType="DECIMAL" property="correctAmount" />
        <result column="overdue_amount" jdbcType="DECIMAL" property="overdueAmount" />
    </resultMap>
    <select id="queryIncome" resultMap="StatisticsIncomeDetail" parameterType="map">
        SELECT esod.id,MIN(eo.buyer_customer_id) customer_id,MIN(ec.customer_no) customer_no,MIN(ec.customer_name) customer_name ,MIN(eo.rent_length_type) rent_length_type,
        MIN(eo.order_sub_company_id) sub_company_id,MIN(esc.sub_company_name)  sub_company_name,MIN(esod.statement_detail_paid_time) pay_time,
        MIN(esod.order_item_refer_id) order_item_refer_id,MIN(esod.order_item_type) order_item_type,
        MIN(eo.order_seller_id) order_seller_id, MIN(eu.real_name) order_seller_name,
        IFNULL(SUM(esod.statement_detail_deposit_paid_amount),0) deposit_paid_amount,
        IFNULL(SUM(esod.statement_detail_rent_deposit_paid_amount),0) rent_deposit_paid_amount,
        IFNULL(SUM(esod.statement_detail_rent_paid_amount),0) rent_amount,
        IFNULL(SUM(esod.statement_detail_other_amount),0) other_amount,
        IFNULL(SUM(esod.statement_detail_correct_amount),0) correct_amount,
        IFNULL(SUM(esod.statement_detail_overdue_paid_amount),0) overdue_amount,
        SUM(CASE WHEN esord.return_type=1 THEN esord.return_amount ELSE 0 END ) return_rent_deposit_paid_amount,
        SUM(CASE WHEN esord.return_type=2 THEN esord.return_amount ELSE 0 END ) return_deposit_paid_amount
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status =1
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status =1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status =1
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_statement_order_return_detail esord ON esod.id = esord.statement_order_id AND esord.data_status=1 AND esod.statement_detail_type = 4
        AND esord.return_time>=#{maps.incomeQueryParam.startTime} AND #{maps.incomeQueryParam.endTime}>esord.return_time
        WHERE esod.order_type =1 AND esod.data_status=1 AND esod.statement_detail_status = 8
        <if test="maps.incomeQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.incomeQueryParam.rentLengthType}
        </if>
        <if test="maps.incomeQueryParam.customerName!=null&amp;&amp; maps.incomeQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.incomeQueryParam.customerName}','%' )
        </if>
        <if test="maps.incomeQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.incomeQueryParam.subCompanyId}
        </if>
        <if test="maps.incomeQueryParam.salesmanName!=null&amp;&amp; maps.incomeQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.incomeQueryParam.salesmanName}','%' )
        </if>
        AND (
            esord.return_time>=#{maps.incomeQueryParam.startTime}
            AND #{maps.incomeQueryParam.endTime}>esord.return_time
            OR
            (
            (#{maps.incomeQueryParam.startTime}>=esod.statement_start_time
            AND  esod.statement_end_time>= #{maps.incomeQueryParam.startTime})
            OR
            (#{maps.incomeQueryParam.endTime}>=esod.statement_start_time
            AND  esod.statement_end_time>= #{maps.incomeQueryParam.endTime})
            OR
            (esod.statement_start_time >= #{maps.incomeQueryParam.startTime}
            AND  #{maps.incomeQueryParam.endTime} > esod.statement_end_time)
            )
        )
        GROUP BY esod.id
        ORDER BY esod.id
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="UnReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.UnReceivableDetail">
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="un_receivable" jdbcType="INTEGER" property="unReceivable" />
        <result column="overdue_phase_count" jdbcType="INTEGER" property="overduePhaseCount" />
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    </resultMap>

    <resultMap id="UnReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.UnReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
    </resultMap>

    <select id="queryUnReceivableCount" resultMap="UnReceivable" parameterType="map">
        SELECT COUNT(DISTINCT (esod.order_item_refer_id)) total_count,
        SUM(esod.statement_detail_amount) total_un_receivable
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1 AND NOW()>esod.statement_expect_pay_time
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND  eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
    </select>

    <select id="queryUnReceivable" resultMap="UnReceivableDetail" parameterType="map">
        SELECT eo.order_no,eo.rent_length_type,
        SUM(esod.statement_detail_amount) un_receivable,
        IFNULL(MAX(esod.statement_detail_overdue_phase_count),0)overdue_phase_count,
        MIN(eu.id) order_seller_id,MIN(eu.real_name) order_seller_name,
        MIN(esc.id) sub_company_id,MIN(esc.sub_company_name) sub_company_name,
        MIN(ec.customer_no) customer_no,MIN(ec.customer_name)customer_name,
        MIN(esod.statement_detail_paid_time) pay_time,MIN(esod.create_time) esod_create_time
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id=eo.order_sub_company_id and esc.data_status = 1
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1 AND NOW()>esod.statement_expect_pay_time
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
        GROUP BY eo.order_no,eo.rent_length_type
        ORDER BY esod_create_time ASC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>


    <select id="queryWaitReceivableCount" resultMap="UnReceivable" parameterType="map">
        SELECT COUNT(DISTINCT (esod.order_item_refer_id)) total_count,
        SUM(esod.statement_detail_amount) total_un_receivable
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND  eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
    </select>

    <select id="queryWaitReceivable" resultMap="UnReceivableDetail" parameterType="map">
        SELECT esod.order_item_refer_id , esod.order_item_type ,eo.rent_length_type,
        SUM(esod.statement_detail_amount) un_receivable,
        IFNULL(MIN(esod.statement_detail_overdue_phase_count),0)overdue_phase_count,
        MIN(eu.id) order_seller_id,MIN(eu.real_name) order_seller_name,
        MIN(esc.id) sub_company_id,MIN(esc.sub_company_name) sub_company_name,
        MIN(ec.customer_no) customer_no,MIN(ec.customer_name)customer_name,
        MIN(esod.statement_detail_paid_time) pay_time,MIN(esod.create_time) esod_create_time
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id=eo.order_sub_company_id and esc.data_status = 1
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
        GROUP BY eo.rent_length_type,esod.order_item_refer_id,esod.order_item_type
        ORDER BY esod_create_time ASC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>



    <resultMap id="StatisticsUnReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_last_month_rent" jdbcType="DECIMAL" property="totalLastMonthRent" />
        <result column="total_un_receivable_long" jdbcType="DECIMAL" property="totalUnReceivableLong" />
        <result column="total_un_receivable_short" jdbcType="DECIMAL" property="totalUnReceivableShort" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
        <result column="total_un_receivable_percentage" jdbcType="DOUBLE" property="totalUnReceivablePercentage" />
        <result column="total_customer_count" jdbcType="INTEGER" property="totalCustomerCount" />
        <result column="total_un_receivable_customer_count_short" jdbcType="INTEGER" property="totalUnReceivableCustomerCountShort" />
        <result column="total_un_receivable_customer_count_long" jdbcType="INTEGER" property="totalUnReceivableCustomerCountLong" />
        <result column="total_rented_customer_count_short" jdbcType="INTEGER" property="totalRentedCustomerCountShort" />
        <result column="total_renting_customer_count_long" jdbcType="INTEGER" property="totalRentingCustomerCountLong" />
    </resultMap>

    <resultMap id="StatisticsUnReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableDetail">
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="last_month_rent" jdbcType="DECIMAL" property="lastMonthRent" />
        <result column="un_receivable_long" jdbcType="DECIMAL" property="unReceivableLong" />
        <result column="un_receivable_short" jdbcType="DECIMAL" property="unReceivableShort" />
        <result column="un_receivable" jdbcType="DECIMAL" property="unReceivable" />
        <result column="un_receivable_percentage" jdbcType="DOUBLE" property="unReceivablePercentage" />
        <result column="customer_count" jdbcType="INTEGER" property="customerCount" />
        <result column="un_receivable_customer_count_short" jdbcType="INTEGER" property="unReceivableCustomerCountShort" />
        <result column="un_receivable_customer_count_long" jdbcType="INTEGER" property="unReceivableCustomerCountLong" />
        <result column="rented_customer_count_short" jdbcType="INTEGER" property="rentedCustomerCountShort" />
        <result column="renting_customer_count_long" jdbcType="INTEGER" property="rentingCustomerCountLong" />
    </resultMap>
    <select id="queryStatisticsUnReceivableCount" resultMap="StatisticsUnReceivable" parameterType="map">
        select count(DISTINCT esod.order_seller_id,esod.order_sub_company_id) total_count ,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) total_rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) total_renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) total_un_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  total_un_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) total_last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable

        from (

        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsUnReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsUnReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsUnReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsUnReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsUnReceivablePageParam.salesmanName}','%' )
        </if>) esod
    </select>
    <select id="queryStatisticsUnReceivable" resultMap="StatisticsUnReceivableDetail" parameterType="map">
        select esod.order_seller_id,MIN(esod.order_seller_name) order_seller_name,
        esod.order_sub_company_id,MIN(esod.sub_company_name) sub_company_name,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) un_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  un_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable
        from (

        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsUnReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsUnReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsUnReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsUnReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsUnReceivablePageParam.salesmanName}','%' )
        </if>) esod
        group by esod.order_seller_id,esod.order_sub_company_id
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="StatisticsHomeByRentLengthType" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsHomeByRentLengthType">
        <result column="new_customer_count" jdbcType="INTEGER" property="newCustomerCount" />
        <result column="old_customer_count" jdbcType="INTEGER" property="oldCustomerCount" />
        <result column="order_count_by_new_customer" jdbcType="INTEGER" property="orderCountByNewCustomer" />
        <result column="order_count_by_old_customer" jdbcType="INTEGER" property="orderCountByOldCustomer" />
        <result column="total_order_count" jdbcType="INTEGER" property="totalOrderCount" />
        <result column="product_count_by_new_customer" jdbcType="INTEGER" property="productCountByNewCustomer" />
        <result column="product_count_by_old_customer" jdbcType="INTEGER" property="productCountByOldCustomer" />
        <result column="total_product_count" jdbcType="INTEGER" property="totalProductCount" />
        <result column="return_product_count" jdbcType="INTEGER" property="returnProductCount" />
        <result column="increase_product_count" jdbcType="INTEGER" property="increaseProductCount" />
        <result column="rent_deposit" jdbcType="DECIMAL" property="rentDeposit" />
        <result column="deposit" jdbcType="DECIMAL" property="deposit" />
        <result column="return_deposit" jdbcType="DECIMAL" property="returnDeposit" />
        <result column="return_rent_deposit" jdbcType="DECIMAL" property="returnRentDeposit" />
        <result column="rent" jdbcType="DECIMAL" property="rent" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherAmount" />
        <result column="prepay_rent" jdbcType="DECIMAL" property="prepayRent" />
        <result column="rent_income" jdbcType="DECIMAL" property="rentIncome" />
    </resultMap>

    <select id="queryHomeByRentLengthType" resultMap="StatisticsHomeByRentLengthType" parameterType="map">
        SELECT COUNT(DISTINCT new_customer_table.buyer_customer_id) new_customer_count,
        COUNT(DISTINCT old_customer_table.buyer_customer_id) old_customer_count  ,
        COUNT(DISTINCT (CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_new_customer,
        COUNT(DISTINCT (CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_old_customer,
        IFNULL(SUM(CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_new_customer,
        IFNULL(SUM(CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_old_customer,
        (
            SELECT COUNT(*) FROM (
            SELECT DISTINCT(erop.id) id FROM erp_return_order_product erop
            LEFT JOIN erp_return_order ero ON ero.id= erop.return_order_id AND  ero.data_status =1
            LEFT JOIN erp_statement_order_detail esod_r ON esod_r.data_status=1 AND esod_r.order_type=4 AND esod_r.order_item_refer_id=erop.id
            LEFT JOIN erp_statement_order_detail esod ON esod.data_status=1 AND esod.id=esod_r.return_refer_id AND esod.order_type=1 AND esod.order_item_type = 1
            LEFT JOIN erp_order_product eop ON eop.data_status=1 AND eop.id=esod.order_item_refer_id
            WHERE erop.data_status=1 AND eop.rent_length_type=#{maps.homeRentParam.rentLengthType}
            AND ero.return_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>ero.return_time
        ) long_erop_id LEFT JOIN erp_return_order_product_equipment erope ON erope.return_order_product_id = long_erop_id.id
        ) return_product_count
        FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1
        LEFT JOIN
        (
        SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND
        eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) new_customer LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND #{maps.homeRentParam.startTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NULL
        ) new_customer_table ON new_customer_table.buyer_customer_id = eo.buyer_customer_id
        LEFT JOIN
        (
        SELECT old_customer.buyer_customer_id  FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND
        eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) new_customer LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND #{maps.homeRentParam.startTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NOT NULL
        ) old_customer_table ON old_customer_table.buyer_customer_id = eo.buyer_customer_id
        WHERE  eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
    </select>

    <resultMap id="StatisticsRentInfo" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsRentInfo">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="new_customer_count" jdbcType="INTEGER" property="newCustomerCount" />
        <result column="old_customer_count" jdbcType="INTEGER" property="oldCustomerCount" />
        <result column="order_count_by_new_customer" jdbcType="INTEGER" property="orderCountByNewCustomer" />
        <result column="order_count_by_old_customer" jdbcType="INTEGER" property="orderCountByOldCustomer" />
        <result column="total_order_count" jdbcType="INTEGER" property="totalOrderCount" />
        <result column="product_count_by_new_customer" jdbcType="INTEGER" property="productCountByNewCustomer" />
        <result column="product_count_by_old_customer" jdbcType="INTEGER" property="productCountByOldCustomer" />
        <result column="total_product_count" jdbcType="INTEGER" property="totalProductCount" />
        <result column="return_product_count" jdbcType="INTEGER" property="returnProductCount" />
        <result column="increase_product_count" jdbcType="INTEGER" property="increaseProductCount" />
        <result column="rent_deposit" jdbcType="DECIMAL" property="rentDeposit" />
        <result column="deposit" jdbcType="DECIMAL" property="deposit" />
        <result column="return_deposit" jdbcType="DECIMAL" property="returnDeposit" />
        <result column="return_rent_deposit" jdbcType="DECIMAL" property="returnRentDeposit" />
        <result column="rent" jdbcType="DECIMAL" property="rent" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherAmount" />
        <result column="prepay_rent" jdbcType="DECIMAL" property="prepayRent" />
        <result column="rent_income" jdbcType="DECIMAL" property="rentIncome" />
    </resultMap>

    <select id="queryRentInfoCount" parameterType="map" resultMap="StatisticsRentInfo">
        SELECT
        COUNT(DISTINCT eo.order_seller_id, eo.order_sub_company_id, eop.rent_length_type) total_count,
        COUNT(DISTINCT new_customer_table.buyer_customer_id) new_customer_count,
        COUNT(DISTINCT old_customer_table.buyer_customer_id) old_customer_count,
        COUNT(DISTINCT (CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_new_customer,
        COUNT(DISTINCT (CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_old_customer,
        IFNULL(SUM(CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_new_customer,
        IFNULL(SUM(CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_old_customer,
        (
        SELECT COUNT(*) FROM (
        SELECT DISTINCT(erop.id) id FROM erp_return_order_product erop
        LEFT JOIN erp_return_order ero ON ero.id= erop.return_order_id AND  ero.data_status =1
        LEFT JOIN erp_statement_order_detail esod_r ON esod_r.data_status=1 AND esod_r.order_type=4 AND esod_r.order_item_refer_id=erop.id
        LEFT JOIN erp_statement_order_detail esod ON esod.data_status=1 AND esod.id=esod_r.return_refer_id AND esod.order_type=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_product eop ON eop.data_status=1 AND eop.id=esod.order_item_refer_id
        WHERE erop.data_status=1 AND ero.return_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>ero.return_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) long_erop_id
        LEFT JOIN erp_return_order_product_equipment erope ON erope.return_order_product_id = long_erop_id.id
        ) return_product_count
        FROM erp_order_product eop
        LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1
        LEFT JOIN
        (SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) new_customer
        LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND #{maps.rentInfoQueryParam.startTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NULL
        ) new_customer_table ON new_customer_table.buyer_customer_id = eo.buyer_customer_id
        LEFT JOIN
        (SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) new_customer
        LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND #{maps.rentInfoQueryParam.startTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NOT NULL
        ) old_customer_table ON old_customer_table.buyer_customer_id = eo.buyer_customer_id
        WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.subCompanyId != null">
            AND eo.order_sub_company_id=#{maps.rentInfoQueryParam.subCompanyId}
        </if>
        <if test="maps.rentInfoQueryParam.salesmanName!=null&amp;&amp; maps.rentInfoQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.rentInfoQueryParam.salesmanName}','%' )
        </if>
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
    </select>

    <resultMap id="StatisticsRentInfoDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsRentInfoDetail">
        <result column="salesman_id" jdbcType="INTEGER" property="salesmanId" />
        <result column="salesman_name" jdbcType="VARCHAR" property="salesmanName" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="new_customer_count" jdbcType="INTEGER" property="newCustomerCount" />
        <result column="old_customer_count" jdbcType="INTEGER" property="oldCustomerCount" />
        <result column="order_count_by_new_customer" jdbcType="INTEGER" property="orderCountByNewCustomer" />
        <result column="order_count_by_old_customer" jdbcType="INTEGER" property="orderCountByOldCustomer" />
        <result column="total_order_count" jdbcType="INTEGER" property="totalOrderCount" />
        <result column="product_count_by_new_customer" jdbcType="INTEGER" property="productCountByNewCustomer" />
        <result column="product_count_by_old_customer" jdbcType="INTEGER" property="productCountByOldCustomer" />
        <result column="total_product_count" jdbcType="INTEGER" property="totalProductCount" />
        <result column="return_product_count" jdbcType="INTEGER" property="returnProductCount" />
        <result column="increase_product_count" jdbcType="INTEGER" property="increaseProductCount" />
        <result column="rent_deposit" jdbcType="DECIMAL" property="rentDeposit" />
        <result column="deposit" jdbcType="DECIMAL" property="deposit" />
        <result column="return_deposit" jdbcType="DECIMAL" property="returnDeposit" />
        <result column="return_rent_deposit" jdbcType="DECIMAL" property="returnRentDeposit" />
        <result column="rent" jdbcType="DECIMAL" property="rent" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherAmount" />
        <result column="prepay_rent" jdbcType="DECIMAL" property="prepayRent" />
        <result column="rent_income" jdbcType="DECIMAL" property="rentIncome" />
    </resultMap>

    <select id="queryRentInfoDetail" parameterType="map" resultMap="StatisticsRentInfoDetail">
        SELECT
        eo.order_seller_id salesman_id,
        MIN(eu.real_name) salesman_name,
        eo.order_sub_company_id sub_company_id,
        MIN(esc.sub_company_name) sub_company_name,
        eop.rent_length_type,
        COUNT(DISTINCT new_customer_table.buyer_customer_id) new_customer_count,
        COUNT(DISTINCT old_customer_table.buyer_customer_id) old_customer_count,
        COUNT(DISTINCT (CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_new_customer,
        COUNT(DISTINCT (CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_old_customer,
        IFNULL(SUM(CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_new_customer,
        IFNULL(SUM(CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 THEN eop.product_count ELSE 0 END),0) product_count_by_old_customer,
        (
        SELECT COUNT(*) FROM (
        SELECT DISTINCT(erop.id) id FROM erp_return_order_product erop
        LEFT JOIN erp_return_order ero ON ero.id= erop.return_order_id AND  ero.data_status =1
        LEFT JOIN erp_statement_order_detail esod_r ON esod_r.data_status=1 AND esod_r.order_type=4 AND esod_r.order_item_refer_id=erop.id
        LEFT JOIN erp_statement_order_detail esod ON esod.data_status=1 AND esod.id=esod_r.return_refer_id AND esod.order_type=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_product eop ON eop.data_status=1 AND eop.id=esod.order_item_refer_id
        WHERE erop.data_status=1 AND ero.return_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>ero.return_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) long_erop_id
        LEFT JOIN erp_return_order_product_equipment erope ON erope.return_order_product_id = long_erop_id.id
        ) return_product_count
        FROM erp_order_product eop
        LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eo.order_seller_id = eu.id
        LEFT JOIN erp_sub_company esc on eo.order_sub_company_id = esc.id AND esc.data_status = 1
        LEFT JOIN
        (SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) new_customer
        LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND #{maps.rentInfoQueryParam.startTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NULL
        ) new_customer_table ON new_customer_table.buyer_customer_id = eo.buyer_customer_id
        LEFT JOIN
        (SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) new_customer
        LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        AND #{maps.rentInfoQueryParam.startTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NOT NULL
        ) old_customer_table ON old_customer_table.buyer_customer_id = eo.buyer_customer_id
        WHERE eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28 AND eo.create_time>=#{maps.rentInfoQueryParam.startTime} AND #{maps.rentInfoQueryParam.endTime}>eo.create_time
        <if test="maps.rentInfoQueryParam.subCompanyId != null">
            AND eo.order_sub_company_id=#{maps.rentInfoQueryParam.subCompanyId}
        </if>
        <if test="maps.rentInfoQueryParam.salesmanName!=null&amp;&amp; maps.rentInfoQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.rentInfoQueryParam.salesmanName}','%' )
        </if>
        <if test="maps.rentInfoQueryParam.rentLengthType != null">
            and eop.rent_length_type=#{maps.rentInfoQueryParam.rentLengthType}
        </if>
        GROUP BY eo.order_seller_id, eo.order_sub_company_id, eop.rent_length_type
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="StatisticsUnReceivableForSubCompany" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableForSubCompany">
        <result column="total_last_month_rent" jdbcType="DECIMAL" property="totalLastMonthRent" />
        <result column="total_un_receivable_long" jdbcType="DECIMAL" property="totalUnReceivableLong" />
        <result column="total_un_receivable_short" jdbcType="DECIMAL" property="totalUnReceivableShort" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
        <result column="total_un_receivable_percentage" jdbcType="DOUBLE" property="totalUnReceivablePercentage" />
        <result column="total_customer_count" jdbcType="INTEGER" property="totalCustomerCount" />
        <result column="total_un_receivable_customer_count_short" jdbcType="INTEGER" property="totalUnReceivableCustomerCountShort" />
        <result column="total_un_receivable_customer_count_long" jdbcType="INTEGER" property="totalUnReceivableCustomerCountLong" />
        <result column="total_rented_customer_count_short" jdbcType="INTEGER" property="totalRentedCustomerCountShort" />
        <result column="total_renting_customer_count_long" jdbcType="INTEGER" property="totalRentingCustomerCountLong" />
    </resultMap>
    <resultMap id="StatisticsUnReceivableDetailForSubCompany" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableDetailForSubCompany">
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="last_month_rent" jdbcType="DECIMAL" property="lastMonthRent" />
        <result column="un_receivable_long" jdbcType="DECIMAL" property="unReceivableLong" />
        <result column="un_receivable_short" jdbcType="DECIMAL" property="unReceivableShort" />
        <result column="un_receivable" jdbcType="DECIMAL" property="unReceivable" />
        <result column="un_receivable_percentage" jdbcType="DOUBLE" property="unReceivablePercentage" />
        <result column="customer_count" jdbcType="INTEGER" property="customerCount" />
        <result column="un_receivable_customer_count_short" jdbcType="INTEGER" property="unReceivableCustomerCountShort" />
        <result column="un_receivable_customer_count_long" jdbcType="INTEGER" property="unReceivableCustomerCountLong" />
        <result column="rented_customer_count_short" jdbcType="INTEGER" property="rentedCustomerCountShort" />
        <result column="renting_customer_count_long" jdbcType="INTEGER" property="rentingCustomerCountLong" />
    </resultMap>




    <select id="querySubCompanyInfo" resultMap="StatisticsUnReceivableDetailForSubCompany">
        SELECT esc.id,esc.sub_company_name,
COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) rented_customer_count_short,
COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) renting_customer_count_long,
COUNT(DISTINCT
(CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) un_receivable_customer_count_short ,
COUNT(DISTINCT
(CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  un_receivable_customer_count_long,
SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
THEN esod.statement_detail_amount ELSE 0 END ) last_month_rent,
SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_short,
SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_long,
SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable
 FROM erp_sub_company esc LEFT JOIN
(
SELECT esod.id,esod.statement_detail_amount ,esod.statement_expect_pay_time,
eo.order_sub_company_id sub_company_id ,
eo.rent_length_type ,
eo.order_status ,eo.buyer_customer_id ,
esod.statement_detail_status
FROM erp_statement_order_detail esod
LEFT JOIN erp_order eo ON eo.id = esod.order_id AND eo.data_status=1
WHERE esod.order_type=1 AND esod.data_status=1
) esod ON esod.sub_company_id = esc.id
GROUP BY esc.id
ORDER BY esc.data_order DESC
    </select>

    <resultMap id="AwaitReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.AwaitReceivableDetail">
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="await_receivable" jdbcType="INTEGER" property="awaitReceivable" />
        <result column="overdue_phase_count" jdbcType="INTEGER" property="overduePhaseCount" />
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    </resultMap>

    <resultMap id="AwaitReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.AwaitReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_await_receivable" jdbcType="DECIMAL" property="totalAwaitReceivable" />
    </resultMap>

    <select id="queryAwaitReceivableCount" resultMap="AwaitReceivable" parameterType="map">
            SELECT SUM(esod.statement_detail_amount) AS totalAwaitReceivable,
            COUNT(DISTINCT (esod.order_item_refer_id)) AS totalCount
            FROM erp_statement_order_detail esod
            LEFT JOIN erp_customer ec ON esod.customer_id = ec.id AND ec.data_status = 1
            LEFT JOIN erp_order eo ON eo.id = esod.order_id AND eo.data_status = 1
            LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
            WHERE esod.statement_detail_status = 0 AND  esod.data_status = 1 AND esod.order_type = 1 AND esod.statement_expect_pay_time>NOW()
        <if test="maps.awaitReceivableQueryParam != null &amp;&amp; maps.awaitReceivableQueryParam.rentLengthType!=null">
            AND  eo.rent_length_type = #{maps.awaitReceivableQueryParam.rentLengthType, jdbcType=INTEGER}
        </if>
        <if test="maps.awaitReceivableQueryParam != null &amp;&amp; maps.awaitReceivableQueryParam.customerName!=null &amp;&amp; maps.awaitReceivableQueryParam.customerName != ''">
            AND  ec.customer_name LIKE CONCAT('%','${maps.awaitReceivableQueryParam.customerName}','%')
        </if>
        <if test="maps.awaitReceivableQueryParam != null &amp;&amp; maps.awaitReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.awaitReceivableQueryParam.subCompanyId, jdbcType=INTEGER}
        </if>
        <if test="maps.awaitReceivableQueryParam != null &amp;&amp; maps.awaitReceivableQueryParam.salesmanName!=null&amp;&amp; maps.awaitReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.awaitReceivableQueryParam.salesmanName}','%' )
        </if>
    </select>

    <select id="queryAwaitReceivable" resultMap="AwaitReceivableDetail" parameterType="map">
        SELECT eo.order_no,eo.rent_length_type,
        SUM(esod.statement_detail_amount) await_receivable,
        IFNULL(MAX(esod.statement_detail_overdue_phase_count),0)overdue_phase_count,
        MIN(eu.id) order_seller_id,MIN(eu.real_name) order_seller_name,
        MIN(esc.id) sub_company_id,MIN(esc.sub_company_name) sub_company_name,
        MIN(ec.customer_no) customer_no,MIN(ec.customer_name)customer_name,
        MIN(esod.statement_detail_paid_time) pay_time,MIN(esod.create_time) esod_create_time
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id=eo.order_sub_company_id and esc.data_status = 1
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1 AND esod.statement_expect_pay_time>NOW()
        <if test="maps.awaitReceivableQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.awaitReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.awaitReceivableQueryParam.customerName!=null&amp;&amp; maps.awaitReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.awaitReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.awaitReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.awaitReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.awaitReceivableQueryParam.salesmanName!=null&amp;&amp; maps.awaitReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.awaitReceivableQueryParam.salesmanName}','%' )
        </if>
        GROUP BY eo.order_no,eo.rent_length_type
        ORDER BY esod_create_time ASC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>


    <resultMap id="StatisticsAwaitReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsAwaitReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_last_month_rent" jdbcType="DECIMAL" property="totalLastMonthRent" />
        <result column="total_await_receivable_long" jdbcType="DECIMAL" property="totalAwaitReceivableLong" />
        <result column="total_await_receivable_short" jdbcType="DECIMAL" property="totalAwaitReceivableShort" />
        <result column="total_await_receivable" jdbcType="DECIMAL" property="totalAwaitReceivable" />
        <result column="total_await_receivable_percentage" jdbcType="DOUBLE" property="totalAwaitReceivablePercentage" />
        <result column="total_customer_count" jdbcType="INTEGER" property="totalCustomerCount" />
        <result column="total_await_receivable_customer_count_short" jdbcType="INTEGER" property="totalAwaitReceivableCustomerCountShort" />
        <result column="total_await_receivable_customer_count_long" jdbcType="INTEGER" property="totalAwaitReceivableCustomerCountLong" />
        <result column="total_rented_customer_count_short" jdbcType="INTEGER" property="totalRentedCustomerCountShort" />
        <result column="total_renting_customer_count_long" jdbcType="INTEGER" property="totalRentingCustomerCountLong" />
    </resultMap>

    <resultMap id="StatisticsAwaitReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsAwaitReceivableDetail">
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="last_month_rent" jdbcType="DECIMAL" property="lastMonthRent" />
        <result column="await_receivable_long" jdbcType="DECIMAL" property="awaitReceivableLong" />
        <result column="await_receivable_short" jdbcType="DECIMAL" property="awaitReceivableShort" />
        <result column="await_receivable" jdbcType="DECIMAL" property="awaitReceivable" />
        <result column="await_receivable_percentage" jdbcType="DOUBLE" property="awaitReceivablePercentage" />
        <result column="customer_count" jdbcType="INTEGER" property="customerCount" />
        <result column="await_receivable_customer_count_short" jdbcType="INTEGER" property="awaitReceivableCustomerCountShort" />
        <result column="await_receivable_customer_count_long" jdbcType="INTEGER" property="awaitReceivableCustomerCountLong" />
        <result column="rented_customer_count_short" jdbcType="INTEGER" property="rentedCustomerCountShort" />
        <result column="renting_customer_count_long" jdbcType="INTEGER" property="rentingCustomerCountLong" />
    </resultMap>

    <select id="queryStatisticsAwaitReceivableCount" resultMap="StatisticsAwaitReceivable" parameterType="map">
        select count(DISTINCT esod.order_seller_id,esod.order_sub_company_id) total_count ,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) total_rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) total_renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.buyer_customer_id ELSE NULL END )) total_await_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.buyer_customer_id ELSE NULL END ))  total_await_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) total_last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) total_await_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) total_await_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) total_await_receivable
        from (
        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id AND eo3.data_status=1
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id AND esc.data_status=1
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsAwaitReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsAwaitReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsAwaitReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsAwaitReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsAwaitReceivablePageParam.salesmanName}','%' )
        </if>) esod
    </select>
    <select id="queryStatisticsAwaitReceivable" resultMap="StatisticsAwaitReceivableDetail" parameterType="map">
        select esod.order_seller_id,MIN(esod.order_seller_name) order_seller_name,
        esod.order_sub_company_id,MIN(esod.sub_company_name) sub_company_name,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.buyer_customer_id ELSE NULL END )) await_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.buyer_customer_id ELSE NULL END ))  await_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) await_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) await_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND esod.statement_expect_pay_time>NOW() THEN esod.statement_detail_amount ELSE 0 END ) await_receivable
        from (
        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id AND eo3.data_status=1
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id AND esc.data_status=1
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsAwaitReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsAwaitReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsAwaitReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsAwaitReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsAwaitReceivablePageParam.salesmanName}','%' )
        </if>) esod
        group by esod.order_seller_id,esod.order_sub_company_id
        LIMIT #{maps.start},#{maps.pageSize}
    </select>
    
    <resultMap id="StatisticsSalesman" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsSalesman">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_deals_count" jdbcType="INTEGER" property="totalDealsCount" />
        <result column="total_deals_product_count" jdbcType="INTEGER" property="totalDealsProductCount" />
        <result column="total_deals_amount" jdbcType="DECIMAL" property="totalDealsAmount" />
        <result column="total_await_receivable" jdbcType="DECIMAL" property="totalAwaitReceivable" />
        <result column="total_income" jdbcType="DECIMAL" property="totalIncome" />
    </resultMap>

    <select id="querySalesmanCount" resultMap="StatisticsSalesman" parameterType="map">
        select
        count(distinct distinct_data.eu_id, distinct_data.esc_id, distinct_data.rent_length_type) total_count,
        SUM(distinct_data.deals_count) total_deals_count,
        SUM(distinct_data.deals_product_count) total_deals_product_count,
        SUM(distinct_data.deals_amount) total_deals_amount,
        SUM(distinct_data.await_receivable) total_await_receivable,
        SUM(distinct_data.income) total_income
        from
        (
        select
        eu.id eu_id,
        esc.id esc_id,
        rlt.rent_length_type,
        MIN(deal_data.deals_count) deals_count,
        MIN(deal_data.deals_product_count) deals_product_count,
        MIN(deal_data.deals_amount) deals_amount,
        MIN(deal_income.await_receivable) await_receivable,
        MIN(deal_income.income) income
        from erp_department ed
        LEFT JOIN erp_role er on er.department_id = ed.id
        LEFT JOIN erp_user_role eur on eur.role_id = er.id
        LEFT JOIN erp_user eu on eu.id = eur.user_id
        LEFT JOIN erp_sub_company esc ON ed.sub_company_id = esc.id
        LEFT JOIN
        (
        select 1 rent_length_type UNION select 2 rent_length_type
        ) rlt on 1 = 1
        LEFT JOIN
        (
        select
        eu.id eu_id,
        eo.order_sub_company_id esc_id,
        eo.rent_length_type,
        SUM(CASE WHEN eo.id IS NOT NULL THEN 1 ELSE 0 END) deals_count,
        SUM(CASE WHEN eo.total_product_count IS NOT NULL THEN eo.total_product_count ELSE 0 END) deals_product_count,
        SUM(CASE WHEN eo.total_order_amount IS NOT NULL THEN eo.total_order_amount ELSE 0 END) deals_amount
        FROM erp_order eo
        LEFT JOIN erp_user eu on eo.order_seller_id = eu.id
        LEFT JOIN
        (
        select
        eo.id,
        count(esod.id) esod_ok_count
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo on esod.order_id = eo.id
        where esod.statement_detail_status = 8 and esod.statement_detail_phase = 1 and esod.statement_detail_paid_time >= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time
        group by eo.id
        ) deal_esod on deal_esod.id = eo.id
        where deal_esod.esod_ok_count > 0
        group by eu.id, eo.order_sub_company_id, eo.rent_length_type
        ) deal_data on deal_data.eu_id = eu.id and deal_data.esc_id = esc.id and deal_data.rent_length_type = rlt.rent_length_type
        LEFT JOIN
        (
        select
        eo.order_seller_id eu_id,
        eo.order_sub_company_id esc_id,
        eo.rent_length_type,
        SUM(CASE WHEN (esod.statement_detail_status = 0 AND #{maps.salesmanQueryParam.endTime} > esod.statement_expect_pay_time ) THEN esod.statement_detail_rent_amount ELSE 0 END ) await_receivable,
        SUM(CASE WHEN (esod.statement_detail_status = 8 AND esod.statement_detail_paid_time>= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time) THEN esod.statement_detail_rent_amount ELSE 0 END) income
        from erp_statement_order_detail esod
        LEFT JOIN erp_order eo on esod.order_id = eo.id
        group by eo.order_seller_id, eo.order_sub_company_id, eo.rent_length_type
        ) deal_income on deal_income.eu_id = eu.id and deal_income.esc_id = esc.id and deal_income.rent_length_type = rlt.rent_length_type
        where esc.id is not null and eu.id is not null and ed.department_type in (select department_type from erp_business_commission_config)
        <if test="maps.salesmanQueryParam.rentLengthType!=null">
            AND rlt.rent_length_type = #{maps.salesmanQueryParam.rentLengthType}
        </if>
        <if test="maps.salesmanQueryParam.subCompanyId!=null">
            AND esc.id = #{maps.salesmanQueryParam.subCompanyId}
        </if>
        <if test="maps.salesmanQueryParam.salesmanName!=null&amp;&amp; maps.salesmanQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.salesmanQueryParam.salesmanName}','%' )
        </if>
        group by eu.id, esc.id, rlt.rent_length_type
        ) distinct_data
    </select>

    <resultMap id="SalesmanDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsSalesmanDetail">
        <result column="salesman_id" jdbcType="INTEGER" property="salesmanId"/>
        <result column="salesman_name" jdbcType="VARCHAR" property="salesmanName"/>
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId"/>
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName"/>
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="deals_count" jdbcType="INTEGER" property="dealsCount"/>
        <result column="deals_product_count" jdbcType="INTEGER" property="dealsProductCount"/>
        <result column="deals_amount" jdbcType="DECIMAL" property="dealsAmount"/>
        <result column="await_receivable" jdbcType="DECIMAL" property="awaitReceivable"/>
        <result column="income" jdbcType="DECIMAL" property="income"/>
    </resultMap>

    <select id="querySalesmanDetail" resultMap="SalesmanDetail" parameterType="map">
        select
        eu.id salesman_id,
        eu.real_name salesman_name,
        esc.id sub_company_id,
        esc.sub_company_name sub_company_name,
        rlt.rent_length_type,
        MIN(deal_data.deals_count) deals_count,
        MIN(deal_data.deals_product_count) deals_product_count,
        MIN(deal_data.deals_amount) deals_amount,
        MIN(deal_income.await_receivable) await_receivable,
        MIN(deal_income.income) income
        from erp_department ed
        LEFT JOIN erp_role er on er.department_id = ed.id
        LEFT JOIN erp_user_role eur on eur.role_id = er.id
        LEFT JOIN erp_user eu on eu.id = eur.user_id
        LEFT JOIN erp_sub_company esc ON ed.sub_company_id = esc.id
        LEFT JOIN
        (
        select 1 rent_length_type UNION select 2 rent_length_type
        ) rlt on 1 = 1
        LEFT JOIN
        (
        select
        eu.id eu_id,
        eo.order_sub_company_id esc_id,
        eo.rent_length_type,
        SUM(CASE WHEN eo.id IS NOT NULL THEN 1 ELSE 0 END) deals_count,
        SUM(CASE WHEN eo.total_product_count IS NOT NULL THEN eo.total_product_count ELSE 0 END) deals_product_count,
        SUM(CASE WHEN eo.total_order_amount IS NOT NULL THEN eo.total_order_amount ELSE 0 END) deals_amount
        FROM erp_order eo
        LEFT JOIN erp_user eu on eo.order_seller_id = eu.id
        LEFT JOIN
        (
        select
        eo.id,
        count(esod.id) esod_ok_count
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo on esod.order_id = eo.id
        where esod.statement_detail_status = 8 and esod.statement_detail_phase = 1 and esod.statement_detail_paid_time >= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time
        group by eo.id
        ) deal_esod on deal_esod.id = eo.id
        where deal_esod.esod_ok_count > 0
        group by eu.id, eo.order_sub_company_id, eo.rent_length_type
        ) deal_data on deal_data.eu_id = eu.id and deal_data.esc_id = esc.id and deal_data.rent_length_type = rlt.rent_length_type
        LEFT JOIN
        (
        select
        eo.order_seller_id eu_id,
        eo.order_sub_company_id esc_id,
        eo.rent_length_type,
        SUM(CASE WHEN (esod.statement_detail_status = 0 AND #{maps.salesmanQueryParam.endTime} > esod.statement_expect_pay_time ) THEN esod.statement_detail_rent_amount ELSE 0 END ) await_receivable,
        SUM(CASE WHEN (esod.statement_detail_status = 8 AND esod.statement_detail_paid_time>= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time) THEN esod.statement_detail_rent_amount ELSE 0 END) income
        from erp_statement_order_detail esod
        LEFT JOIN erp_order eo on esod.order_id = eo.id
        group by eo.order_seller_id, eo.order_sub_company_id, eo.rent_length_type
        ) deal_income on deal_income.eu_id = eu.id and deal_income.esc_id = esc.id and deal_income.rent_length_type = rlt.rent_length_type
        where esc.id is not null and eu.id is not null and ed.department_type in (select department_type from erp_business_commission_config)
        <if test="maps.salesmanQueryParam.rentLengthType!=null">
            AND rlt.rent_length_type = #{maps.salesmanQueryParam.rentLengthType}
        </if>
        <if test="maps.salesmanQueryParam.subCompanyId!=null">
            AND esc.id = #{maps.salesmanQueryParam.subCompanyId}
        </if>
        <if test="maps.salesmanQueryParam.salesmanName!=null&amp;&amp; maps.salesmanQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.salesmanQueryParam.salesmanName}','%' )
        </if>
        group by eu.id, esc.id, rlt.rent_length_type
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="SalesmanDetailExtend" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsSalesmanDetailExtend">
        <result column="salesman_id" jdbcType="INTEGER" property="salesmanId"/>
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId"/>
        <result column="eop_id" jdbcType="INTEGER" property="eopId" />
        <result column="product_count" jdbcType="INTEGER" property="productCount" />
        <result column="product_unit_amount" jdbcType="DECIMAL" property="productUnitAmount" />
        <result column="rent_type" jdbcType="INTEGER" property="rentType" />
        <result column="rent_price" jdbcType="DECIMAL" property="rentPrice" />
        <result column="localization_time" jdbcType="DATE" property="localizationTime" />
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="rent_start_time" jdbcType="DATE" property="rentStartTime" />
        <result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
        <result column="product_count_factor" jdbcType="FLOAT" property="productCountFactor" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
    </resultMap>

    <select id="querySalesmanDetailExtend" resultMap="SalesmanDetailExtend" parameterType="map">
        select
        eo.order_seller_id salesman_id,
        eo.order_sub_company_id sub_company_id,
        eop.id eop_id,
        eop.product_count,
        eop.product_unit_amount,
        eop.rent_type,
        eop.rent_length_type,
        (CASE WHEN eop.rent_type = 1 THEN eps.day_rent_price ELSE eps.month_rent_price END) rent_price,
        ec.localization_time localization_time,
        eo.create_time create_time,
        eo.rent_start_time rent_start_time,
        eo.rent_time_length rent_time_length,
        CASE WHEN epc.id in (800002, 800003, 800005) THEN 1 WHEN epc.id in (800004) THEN 0.7 WHEN epc.id in (800006) THEN 0.3 ELSE 0 END product_count_factor
        from erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop on esod.order_item_refer_id = eop.id and esod.order_item_type = 1
        LEFT JOIN erp_product_sku eps on eop.product_sku_id = eps.id
        LEFT JOIN erp_product ep on eps.product_id = ep.id and ep.data_status = 1
        LEFT JOIN erp_product_category epc on ep.category_id = epc.id and epc.data_status = 1
        LEFT JOIN erp_order eo on eo.id = eop.order_id
        LEFT JOIN erp_customer ec on eo.buyer_customer_id = ec.id
        LEFT JOIN erp_user eu on eo.order_seller_id = eu.id
        where eop.id is not null and esod.statement_detail_status = 8 and esod.statement_detail_phase =1
        AND esod.statement_detail_paid_time >= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time
        <if test="maps.salesmanQueryParam.rentLengthType!=null">
            AND eop.rent_length_type = #{maps.salesmanQueryParam.rentLengthType}
        </if>
        <if test="maps.salesmanQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.salesmanQueryParam.subCompanyId}
        </if>
        <if test="maps.salesmanQueryParam.salesmanName!=null&amp;&amp; maps.salesmanQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.salesmanQueryParam.salesmanName}','%' )
        </if>
    </select>

    <resultMap id="SalesmanReturnOrder" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsSalesmanReturnOrder">
        <result column="eop_id" jdbcType="INTEGER" property="eopId"/>
        <result column="eu_id" jdbcType="INTEGER" property="euId" />
        <result column="esc_id" jdbcType="INTEGER" property="escId" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="return_time" jdbcType="DATE" property="returnTime"/>
        <result column="product_count" jdbcType="INTEGER" property="productCount"/>
        <result column="product_no" jdbcType="VARCHAR" property="productNo"/>
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="localization_time" jdbcType="DATE" property="localizationTime" />
        <result column="return_type" jdbcType="INTEGER" property="returnType" />
        <result column="rent_start_time" jdbcType="DATE" property="rentStartTime" />
        <result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
        <result column="product_count_factor" jdbcType="DOUBLE" property="productCountFactor" />
    </resultMap>

    <select id="querySalesmanReturnOrder" resultMap="SalesmanReturnOrder" parameterType="map">
        select
        eop.id eop_id,
        eo.order_seller_id eu_id,
        eo.order_sub_company_id esc_id,
        eop.rent_length_type,
        k3ro.return_time,
        k3rod.product_count,
        k3rod.product_no,
        eop.create_time,
        ec.localization_time,
        eop.rent_type,
        eo.rent_start_time,
        eo.rent_time_length,
        CASE WHEN epc.id in (800002, 800003, 800005) THEN 1 WHEN epc.id in (800004) THEN 0.7 WHEN epc.id in (800006) THEN 0.3 ELSE 0 END product_count_factor
        from erp_k3_return_order_detail k3rod
        LEFT JOIN erp_k3_return_order k3ro on k3rod.return_order_id = k3ro.id and k3ro.data_status = 1
        LEFT JOIN erp_order_product eop on k3rod.order_item_id = eop.id
        LEFT JOIN erp_statement_order_detail esod on esod.order_item_refer_id = eop.id and esod.order_item_type = 1 and esod.data_status = 1
        LEFT JOIN erp_order eo on eo.id = eop.order_id AND eo.data_status = 1
        LEFT JOIN erp_customer ec on eo.buyer_customer_id = ec.id and ec.data_status = 1
        LEFT JOIN erp_product_sku eps on eop.product_sku_id = eps.id
        LEFT JOIN erp_product ep on eps.product_id = ep.id and ep.data_status = 1
        LEFT JOIN erp_product_category epc on ep.category_id = epc.id and epc.data_status = 1
        LEFT JOIN erp_user eu on eo.order_seller_id = eu.id
        where k3rod.data_status = 1 and eop.rent_length_type = 2
        and eop.id is not null and esod.statement_detail_status = 8 and esod.statement_detail_phase =1
        AND esod.statement_detail_paid_time >= #{maps.salesmanQueryParam.startTime} AND #{maps.salesmanQueryParam.endTime} > esod.statement_detail_paid_time
        <if test="maps.salesmanQueryParam.rentLengthType!=null">
            AND eop.rent_length_type = #{maps.salesmanQueryParam.rentLengthType}
        </if>
        <if test="maps.salesmanQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.salesmanQueryParam.subCompanyId}
        </if>
        <if test="maps.salesmanQueryParam.salesmanName!=null&amp;&amp; maps.salesmanQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.salesmanQueryParam.salesmanName}','%' )
        </if>
        group by k3rod.id
    </select>


</mapper>
