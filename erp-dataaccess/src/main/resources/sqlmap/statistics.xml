<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.statistics.StatisticsMapper">

    <resultMap id="StatisticsIncome" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsIncome">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_deposit" jdbcType="DECIMAL" property="totalDeposit" />
        <result column="total_rent_deposit" jdbcType="DECIMAL" property="totalRentDeposit" />
        <result column="total_return_deposit" jdbcType="DECIMAL" property="totalReturnDeposit" />
        <result column="total_return_rent_deposit" jdbcType="DECIMAL" property="totalReturnRentDeposit" />
        <result column="total_other_paid" jdbcType="DECIMAL" property="totalOtherPaid" />
        <result column="total_correct_amount" jdbcType="DECIMAL" property="totalCorrectAmount" />
        <result column="total_overdue_amount" jdbcType="DECIMAL" property="totalOverdueAmount" />
    </resultMap>

    <select id="queryIncomeCount" resultMap="StatisticsIncome" parameterType="map">
        SELECT COUNT(distinct esod.id) total_count,
        IFNULL(SUM(esod.statement_detail_deposit_paid_amount),0) total_deposit,
        IFNULL(SUM(esod.statement_detail_rent_deposit_paid_amount),0) total_rent_deposit,
        IFNULL(SUM(esod.statement_detail_other_amount),0) total_other_paid,
        IFNULL(SUM(esod.statement_detail_correct_amount),0) total_correct_amount,
        IFNULL(SUM(esod.statement_detail_overdue_paid_amount),0) total_overdue_amount,
        SUM(CASE WHEN esord.return_type=1 THEN esord.return_amount ELSE 0 END ) total_return_rent_deposit,
        SUM(CASE WHEN esord.return_type=2 THEN esord.return_amount ELSE 0 END ) total_return_deposit
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status =1
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status =1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status =1
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_statement_order_return_detail esord ON esod.id = esord.statement_order_id AND esord.data_status=1 AND esod.statement_detail_type = 4
        AND esord.return_time>=#{maps.incomeQueryParam.startTime} AND #{maps.incomeQueryParam.endTime}>esord.return_time
        WHERE esod.order_type =1 AND esod.data_status=1 AND esod.statement_detail_status = 8

        <if test="maps.incomeQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.incomeQueryParam.rentLengthType}
        </if>
        <if test="maps.incomeQueryParam.customerName!=null&amp;&amp; maps.incomeQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.incomeQueryParam.customerName}','%' )
        </if>
        <if test="maps.incomeQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.incomeQueryParam.subCompanyId}
        </if>
        <if test="maps.incomeQueryParam.salesmanName!=null&amp;&amp; maps.incomeQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.incomeQueryParam.salesmanName}','%' )
        </if>
        AND (
        esord.return_time>=#{maps.incomeQueryParam.startTime}
        AND #{maps.incomeQueryParam.endTime}>esord.return_time
        OR
        (
        (#{maps.incomeQueryParam.startTime}>=esod.statement_start_time
        AND  esod.statement_end_time>= #{maps.incomeQueryParam.startTime})
        OR
        (#{maps.incomeQueryParam.endTime}>esod.statement_start_time
        AND  esod.statement_end_time>= #{maps.incomeQueryParam.endTime})
        OR
        (esod.statement_start_time >= #{maps.incomeQueryParam.startTime}
        AND  #{maps.incomeQueryParam.endTime} > esod.statement_end_time)
        )
        )
    </select>
    <resultMap id="StatisticsIncomeDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsIncomeDetail">
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="deposit_paid_amount" jdbcType="DECIMAL" property="depositPaidAmount" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherPaidAmount" />
        <result column="rent_deposit_paid_amount" jdbcType="DECIMAL" property="rentDepositPaidAmount" />
        <result column="return_deposit_paid_amount" jdbcType="DECIMAL" property="returnDepositPaidAmount" />
        <result column="return_rent_deposit_paid_amount" jdbcType="DECIMAL" property="returnRentDepositPaidAmount" />
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
        <result column="rent_amount" jdbcType="TIMESTAMP" property="rentAmount" />
        <result column="correct_amount" jdbcType="DECIMAL" property="correctAmount" />
        <result column="overdue_amount" jdbcType="DECIMAL" property="overdueAmount" />
    </resultMap>
    <select id="queryIncome" resultMap="StatisticsIncomeDetail" parameterType="map">
        SELECT esod.id,MIN(eo.buyer_customer_id) customer_id,MIN(ec.customer_no) customer_no,MIN(ec.customer_name) customer_name ,MIN(eo.rent_length_type) rent_length_type,
        MIN(eo.order_sub_company_id) sub_company_id,MIN(esc.sub_company_name)  sub_company_name,MIN(esod.statement_detail_paid_time) pay_time,
        MIN(esod.order_item_refer_id) order_item_refer_id,MIN(esod.order_item_type) order_item_type,
        MIN(eo.order_seller_id) order_seller_id, MIN(eu.real_name) order_seller_name,
        IFNULL(SUM(esod.statement_detail_deposit_paid_amount),0) deposit_paid_amount,
        IFNULL(SUM(esod.statement_detail_rent_deposit_paid_amount),0) rent_deposit_paid_amount,
        IFNULL(SUM(esod.statement_detail_rent_paid_amount),0) rent_amount,
        IFNULL(SUM(esod.statement_detail_other_amount),0) other_amount,
        IFNULL(SUM(esod.statement_detail_correct_amount),0) correct_amount,
        IFNULL(SUM(esod.statement_detail_overdue_paid_amount),0) overdue_amount,
        SUM(CASE WHEN esord.return_type=1 THEN esord.return_amount ELSE 0 END ) return_rent_deposit_paid_amount,
        SUM(CASE WHEN esord.return_type=2 THEN esord.return_amount ELSE 0 END ) return_deposit_paid_amount
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status =1
        LEFT JOIN erp_customer ec ON ec.id = eo.buyer_customer_id AND ec.data_status =1
        LEFT JOIN erp_sub_company esc ON esc.id = eo.order_sub_company_id AND esc.data_status =1
        LEFT JOIN erp_user eu ON eu.id = eo.order_seller_id
        LEFT JOIN erp_statement_order_return_detail esord ON esod.id = esord.statement_order_id AND esord.data_status=1 AND esod.statement_detail_type = 4
        AND esord.return_time>=#{maps.incomeQueryParam.startTime} AND #{maps.incomeQueryParam.endTime}>esord.return_time
        WHERE esod.order_type =1 AND esod.data_status=1 AND esod.statement_detail_status = 8
        <if test="maps.incomeQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.incomeQueryParam.rentLengthType}
        </if>
        <if test="maps.incomeQueryParam.customerName!=null&amp;&amp; maps.incomeQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.incomeQueryParam.customerName}','%' )
        </if>
        <if test="maps.incomeQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.incomeQueryParam.subCompanyId}
        </if>
        <if test="maps.incomeQueryParam.salesmanName!=null&amp;&amp; maps.incomeQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.incomeQueryParam.salesmanName}','%' )
        </if>
        AND (
            esord.return_time>=#{maps.incomeQueryParam.startTime}
            AND #{maps.incomeQueryParam.endTime}>esord.return_time
            OR
            (
            (#{maps.incomeQueryParam.startTime}>=esod.statement_start_time
            AND  esod.statement_end_time>= #{maps.incomeQueryParam.startTime})
            OR
            (#{maps.incomeQueryParam.endTime}>=esod.statement_start_time
            AND  esod.statement_end_time>= #{maps.incomeQueryParam.endTime})
            OR
            (esod.statement_start_time >= #{maps.incomeQueryParam.startTime}
            AND  #{maps.incomeQueryParam.endTime} > esod.statement_end_time)
            )
        )
        GROUP BY esod.id
        ORDER BY esod.id
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="UnReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.UnReceivableDetail">
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="un_receivable" jdbcType="INTEGER" property="unReceivable" />
        <result column="overdue_phase_count" jdbcType="INTEGER" property="overduePhaseCount" />
        <result column="order_item_refer_id" jdbcType="INTEGER" property="orderItemReferId" />
        <result column="order_item_type" jdbcType="INTEGER" property="orderItemType" />
    </resultMap>

    <resultMap id="UnReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.UnReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
    </resultMap>

    <select id="queryUnReceivableCount" resultMap="UnReceivable" parameterType="map">
        SELECT COUNT(DISTINCT (esod.order_item_refer_id)) total_count,
        SUM(esod.statement_detail_amount) total_un_receivable
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1 AND NOW()>esod.statement_expect_pay_time
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND  eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
    </select>

    <select id="queryUnReceivable" resultMap="UnReceivableDetail" parameterType="map">
        SELECT esod.order_item_refer_id , esod.order_item_type ,eo.rent_length_type,
        SUM(esod.statement_detail_amount) un_receivable,
        IFNULL(MIN(esod.statement_detail_overdue_phase_count),0)overdue_phase_count,
        MIN(eu.id) order_seller_id,MIN(eu.real_name) order_seller_name,
        MIN(esc.id) sub_company_id,MIN(esc.sub_company_name) sub_company_name,
        MIN(ec.customer_no) customer_no,MIN(ec.customer_name)customer_name,
        MIN(esod.statement_detail_paid_time) pay_time,MIN(esod.create_time) esod_create_time
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id=eo.order_sub_company_id and esc.data_status = 1
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1 AND NOW()>esod.statement_expect_pay_time
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
        GROUP BY eo.rent_length_type,esod.order_item_refer_id,esod.order_item_type
        ORDER BY esod_create_time ASC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>


    <select id="queryWaitReceivableCount" resultMap="UnReceivable" parameterType="map">
        SELECT COUNT(DISTINCT (esod.order_item_refer_id)) total_count,
        SUM(esod.statement_detail_amount) total_un_receivable
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND  eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
    </select>

    <select id="queryWaitReceivable" resultMap="UnReceivableDetail" parameterType="map">
        SELECT esod.order_item_refer_id , esod.order_item_type ,eo.rent_length_type,
        SUM(esod.statement_detail_amount) un_receivable,
        IFNULL(MIN(esod.statement_detail_overdue_phase_count),0)overdue_phase_count,
        MIN(eu.id) order_seller_id,MIN(eu.real_name) order_seller_name,
        MIN(esc.id) sub_company_id,MIN(esc.sub_company_name) sub_company_name,
        MIN(ec.customer_no) customer_no,MIN(ec.customer_name)customer_name,
        MIN(esod.statement_detail_paid_time) pay_time,MIN(esod.create_time) esod_create_time
        FROM erp_statement_order_detail esod
        LEFT JOIN erp_order_product eop ON eop.id = esod.order_item_refer_id AND eop.data_status=1 AND esod.order_item_type = 1
        LEFT JOIN erp_order_material eom ON eom.id = esod.order_item_refer_id AND eom.data_status=1 AND esod.order_item_type = 2
        LEFT JOIN erp_customer ec ON esod.customer_id = ec.id and ec.data_status =1
        LEFT JOIN erp_order eo ON esod.order_id = eo.id AND eo.data_status=1
        LEFT JOIN erp_user eu ON eu.id=eo.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id=eo.order_sub_company_id and esc.data_status = 1
        WHERE esod.statement_detail_status=0 AND esod.data_status = 1 AND esod.order_type = 1
        <if test="maps.unReceivableQueryParam.rentLengthType!=null">
            AND eo.rent_length_type = #{maps.unReceivableQueryParam.rentLengthType}
        </if>
        <if test="maps.unReceivableQueryParam.customerName!=null&amp;&amp; maps.unReceivableQueryParam.customerName != ''">
            AND ec.customer_name LIKE CONCAT('%','${maps.unReceivableQueryParam.customerName}','%' )
        </if>
        <if test="maps.unReceivableQueryParam.subCompanyId!=null">
            AND eo.order_sub_company_id = #{maps.unReceivableQueryParam.subCompanyId}
        </if>
        <if test="maps.unReceivableQueryParam.salesmanName!=null&amp;&amp; maps.unReceivableQueryParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.unReceivableQueryParam.salesmanName}','%' )
        </if>
        GROUP BY eo.rent_length_type,esod.order_item_refer_id,esod.order_item_type
        ORDER BY esod_create_time ASC
        LIMIT #{maps.start},#{maps.pageSize}
    </select>



    <resultMap id="StatisticsUnReceivable" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivable">
        <result column="total_count" jdbcType="INTEGER" property="totalCount" />
        <result column="total_last_month_rent" jdbcType="DECIMAL" property="totalLastMonthRent" />
        <result column="total_un_receivable_long" jdbcType="DECIMAL" property="totalUnReceivableLong" />
        <result column="total_un_receivable_short" jdbcType="DECIMAL" property="totalUnReceivableShort" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
        <result column="total_un_receivable_percentage" jdbcType="DOUBLE" property="totalUnReceivablePercentage" />
        <result column="total_customer_count" jdbcType="INTEGER" property="totalCustomerCount" />
        <result column="total_un_receivable_customer_count_short" jdbcType="INTEGER" property="totalUnReceivableCustomerCountShort" />
        <result column="total_un_receivable_customer_count_long" jdbcType="INTEGER" property="totalUnReceivableCustomerCountLong" />
        <result column="total_rented_customer_count_short" jdbcType="INTEGER" property="totalRentedCustomerCountShort" />
        <result column="total_renting_customer_count_long" jdbcType="INTEGER" property="totalRentingCustomerCountLong" />
    </resultMap>

    <resultMap id="StatisticsUnReceivableDetail" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableDetail">
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="order_seller_id" jdbcType="INTEGER" property="orderSellerId" />
        <result column="order_seller_name" jdbcType="VARCHAR" property="orderSellerName" />
        <result column="last_month_rent" jdbcType="DECIMAL" property="lastMonthRent" />
        <result column="un_receivable_long" jdbcType="DECIMAL" property="unReceivableLong" />
        <result column="un_receivable_short" jdbcType="DECIMAL" property="unReceivableShort" />
        <result column="un_receivable" jdbcType="DECIMAL" property="unReceivable" />
        <result column="un_receivable_percentage" jdbcType="DOUBLE" property="unReceivablePercentage" />
        <result column="customer_count" jdbcType="INTEGER" property="customerCount" />
        <result column="un_receivable_customer_count_short" jdbcType="INTEGER" property="unReceivableCustomerCountShort" />
        <result column="un_receivable_customer_count_long" jdbcType="INTEGER" property="unReceivableCustomerCountLong" />
        <result column="rented_customer_count_short" jdbcType="INTEGER" property="rentedCustomerCountShort" />
        <result column="renting_customer_count_long" jdbcType="INTEGER" property="rentingCustomerCountLong" />
    </resultMap>
    <select id="queryStatisticsUnReceivableCount" resultMap="StatisticsUnReceivable" parameterType="map">
        select count(DISTINCT esod.order_seller_id,esod.order_sub_company_id) total_count ,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) total_rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) total_renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) total_un_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  total_un_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) total_last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) total_un_receivable

        from (

        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsUnReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsUnReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsUnReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsUnReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsUnReceivablePageParam.salesmanName}','%' )
        </if>) esod
    </select>
    <select id="queryStatisticsUnReceivable" resultMap="StatisticsUnReceivableDetail" parameterType="map">
        select esod.order_seller_id,MIN(esod.order_seller_name) order_seller_name,
        esod.order_sub_company_id,MIN(esod.sub_company_name) sub_company_name,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) rented_customer_count_short,
        COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) renting_customer_count_long,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) un_receivable_customer_count_short ,
        COUNT(DISTINCT
        (CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  un_receivable_customer_count_long,
        SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
        AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
        THEN esod.statement_detail_amount ELSE 0 END ) last_month_rent,
        SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_short,
        SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_long,
        SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable
        from (

        SELECT esod.id,
        esod.statement_detail_amount,
        esod.statement_expect_pay_time,
        esod.statement_detail_status,
        eo3.order_sub_company_id ,
        eo3.order_seller_id,
        eo3.order_status,
        eo3.buyer_customer_id,
        eo3.rent_length_type,
        esc.sub_company_name,
        eu.real_name order_seller_name
        FROM erp_statement_order_detail esod
        LEFT JOIN  erp_order_product eop ON eop.id=esod.order_item_refer_id AND esod.order_item_type=1 AND eop.data_status=1
        LEFT JOIN  erp_order_material eom ON eom.id=esod.order_item_refer_id AND esod.order_item_type=2 AND eom.data_status=1
        LEFT JOIN erp_order eo1 ON eo1.id = eop.order_id AND eo1.data_status=1
        LEFT JOIN erp_order eo2 ON eo2.id = eom.order_id AND eo2.data_status=1
        LEFT JOIN erp_order eo3 ON eo3.id = esod.order_id
        LEFT JOIN erp_user eu ON eu.id = eo3.order_seller_id
        LEFT JOIN erp_sub_company esc ON esc.id = eo3.order_sub_company_id
        WHERE esod.order_type=1 AND esod.data_status=1
        <if test="maps.statisticsUnReceivablePageParam.subCompanyId!=null">
            AND eo3.order_sub_company_id = #{maps.statisticsUnReceivablePageParam.subCompanyId}
        </if>
        <if test="maps.statisticsUnReceivablePageParam.salesmanName!=null&amp;&amp; maps.statisticsUnReceivablePageParam.salesmanName != ''">
            AND eu.real_name LIKE CONCAT('%','${maps.statisticsUnReceivablePageParam.salesmanName}','%' )
        </if>) esod
        group by esod.order_seller_id,esod.order_sub_company_id
        LIMIT #{maps.start},#{maps.pageSize}
    </select>

    <resultMap id="StatisticsHomeByRentLengthType" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsHomeByRentLengthType">
        <result column="new_customer_count" jdbcType="INTEGER" property="newCustomerCount" />
        <result column="old_customer_count" jdbcType="INTEGER" property="oldCustomerCount" />
        <result column="order_count_by_new_customer" jdbcType="INTEGER" property="orderCountByNewCustomer" />
        <result column="order_count_by_old_customer" jdbcType="INTEGER" property="orderCountByOldCustomer" />
        <result column="total_order_count" jdbcType="INTEGER" property="totalOrderCount" />
        <result column="product_count_by_new_customer" jdbcType="INTEGER" property="productCountByNewCustomer" />
        <result column="product_count_by_old_customer" jdbcType="INTEGER" property="productCountByOldCustomer" />
        <result column="total_product_count" jdbcType="INTEGER" property="totalProductCount" />
        <result column="return_product_count" jdbcType="INTEGER" property="returnProductCount" />
        <result column="increase_product_count" jdbcType="INTEGER" property="increaseProductCount" />
        <result column="rent_deposit" jdbcType="DECIMAL" property="rentDeposit" />
        <result column="deposit" jdbcType="DECIMAL" property="deposit" />
        <result column="return_deposit" jdbcType="DECIMAL" property="returnDeposit" />
        <result column="return_rent_deposit" jdbcType="DECIMAL" property="returnRentDeposit" />
        <result column="rent" jdbcType="DECIMAL" property="rent" />
        <result column="other_amount" jdbcType="DECIMAL" property="otherAmount" />
        <result column="prepay_rent" jdbcType="DECIMAL" property="prepayRent" />
        <result column="rent_income" jdbcType="DECIMAL" property="rentIncome" />
    </resultMap>

    <select id="queryHomeByRentLengthType" resultMap="StatisticsHomeByRentLengthType" parameterType="map">
        SELECT COUNT(DISTINCT new_customer_table.buyer_customer_id) new_customer_count,
        COUNT(DISTINCT old_customer_table.buyer_customer_id) old_customer_count  ,
        COUNT(DISTINCT (CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_new_customer,
        COUNT(DISTINCT (CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL THEN eop.order_id ELSE NULL END)) order_count_by_old_customer,
        IFNULL(SUM(CASE WHEN new_customer_table.buyer_customer_id IS NOT NULL THEN eop.product_count ELSE 0 END),0) product_count_by_new_customer,
        IFNULL(SUM(CASE WHEN old_customer_table.buyer_customer_id IS NOT NULL THEN eop.product_count ELSE 0 END),0) product_count_by_old_customer,
        (
            SELECT COUNT(*) FROM (
            SELECT DISTINCT(erop.id) id FROM erp_return_order_product erop
            LEFT JOIN erp_return_order ero ON ero.id= erop.return_order_id AND  ero.data_status =1
            LEFT JOIN erp_statement_order_detail esod_r ON esod_r.data_status=1 AND esod_r.order_type=4 AND esod_r.order_item_refer_id=erop.id
            LEFT JOIN erp_statement_order_detail esod ON esod.data_status=1 AND esod.id=esod_r.return_refer_id AND esod.order_type=1 AND esod.order_item_type = 1
            LEFT JOIN erp_order_product eop ON eop.data_status=1 AND eop.id=esod.order_item_refer_id
            WHERE erop.data_status=1 AND eop.rent_length_type=#{maps.homeRentParam.rentLengthType}
            AND ero.return_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>ero.return_time
        ) long_erop_id LEFT JOIN erp_return_order_product_equipment erope ON erope.return_order_product_id = long_erop_id.id
        ) return_product_count
        FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1
        LEFT JOIN
        (
        SELECT new_customer.buyer_customer_id FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND
        eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) new_customer LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND #{maps.homeRentParam.startTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NULL
        ) new_customer_table ON new_customer_table.buyer_customer_id = eo.buyer_customer_id
        LEFT JOIN
        (
        SELECT old_customer.buyer_customer_id  FROM (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND
        eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) new_customer LEFT JOIN
        (
        SELECT DISTINCT eo.buyer_customer_id FROM erp_order_product eop LEFT JOIN erp_order eo ON eo.id=eop.order_id AND eo.data_status=1  WHERE eop.rent_length_type = #{maps.homeRentParam.rentLengthType}
        AND #{maps.homeRentParam.startTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28
        ) old_customer ON new_customer.buyer_customer_id = old_customer.buyer_customer_id WHERE old_customer.buyer_customer_id IS NOT NULL
        ) old_customer_table ON old_customer_table.buyer_customer_id = eo.buyer_customer_id
        WHERE  eo.create_time>=#{maps.homeRentParam.startTime} AND #{maps.homeRentParam.endTime}>eo.create_time AND eo.order_status!=0 AND eo.order_status!=4 AND eo.order_status!=28

    </select>

    <resultMap id="StatisticsUnReceivableForSubCompany" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableForSubCompany">
        <result column="total_last_month_rent" jdbcType="DECIMAL" property="totalLastMonthRent" />
        <result column="total_un_receivable_long" jdbcType="DECIMAL" property="totalUnReceivableLong" />
        <result column="total_un_receivable_short" jdbcType="DECIMAL" property="totalUnReceivableShort" />
        <result column="total_un_receivable" jdbcType="DECIMAL" property="totalUnReceivable" />
        <result column="total_un_receivable_percentage" jdbcType="DOUBLE" property="totalUnReceivablePercentage" />
        <result column="total_customer_count" jdbcType="INTEGER" property="totalCustomerCount" />
        <result column="total_un_receivable_customer_count_short" jdbcType="INTEGER" property="totalUnReceivableCustomerCountShort" />
        <result column="total_un_receivable_customer_count_long" jdbcType="INTEGER" property="totalUnReceivableCustomerCountLong" />
        <result column="total_rented_customer_count_short" jdbcType="INTEGER" property="totalRentedCustomerCountShort" />
        <result column="total_renting_customer_count_long" jdbcType="INTEGER" property="totalRentingCustomerCountLong" />
    </resultMap>
    <resultMap id="StatisticsUnReceivableDetailForSubCompany" type="com.lxzl.erp.common.domain.statistics.pojo.StatisticsUnReceivableDetailForSubCompany">
        <result column="sub_company_id" jdbcType="INTEGER" property="subCompanyId" />
        <result column="sub_company_name" jdbcType="VARCHAR" property="subCompanyName" />
        <result column="last_month_rent" jdbcType="DECIMAL" property="lastMonthRent" />
        <result column="un_receivable_long" jdbcType="DECIMAL" property="unReceivableLong" />
        <result column="un_receivable_short" jdbcType="DECIMAL" property="unReceivableShort" />
        <result column="un_receivable" jdbcType="DECIMAL" property="unReceivable" />
        <result column="un_receivable_percentage" jdbcType="DOUBLE" property="unReceivablePercentage" />
        <result column="customer_count" jdbcType="INTEGER" property="customerCount" />
        <result column="un_receivable_customer_count_short" jdbcType="INTEGER" property="unReceivableCustomerCountShort" />
        <result column="un_receivable_customer_count_long" jdbcType="INTEGER" property="unReceivableCustomerCountLong" />
        <result column="rented_customer_count_short" jdbcType="INTEGER" property="rentedCustomerCountShort" />
        <result column="renting_customer_count_long" jdbcType="INTEGER" property="rentingCustomerCountLong" />
    </resultMap>




    <select id="querySubCompanyInfo" resultMap="StatisticsUnReceivableDetailForSubCompany">
        SELECT esc.id,esc.sub_company_name,
COUNT(DISTINCT (CASE WHEN esod.rent_length_type=1 AND (esod.order_status=20 OR esod.order_status=24 OR esod.order_status=32) THEN esod.buyer_customer_id ELSE NULL END)) rented_customer_count_short,
COUNT(DISTINCT (CASE WHEN esod.rent_length_type=2 AND esod.order_status=20 THEN esod.buyer_customer_id ELSE NULL END)) renting_customer_count_long,
COUNT(DISTINCT
(CASE WHEN esod.rent_length_type=1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END )) un_receivable_customer_count_short ,
COUNT(DISTINCT
(CASE WHEN esod.rent_length_type=2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.buyer_customer_id ELSE NULL END ))  un_receivable_customer_count_long,
SUM(CASE WHEN esod.statement_expect_pay_time >=(SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 1 MONTH ),'%Y-%m-%d 00:00:00'))
AND (SELECT DATE_FORMAT(DATE_SUB( DATE_SUB( NOW() , INTERVAL DAYOFMONTH( NOW() ) -1 DAY ) , INTERVAL 0 MONTH ),'%Y-%m-%d 00:00:00'))>esod.statement_expect_pay_time
THEN esod.statement_detail_amount ELSE 0 END ) last_month_rent,
SUM(CASE WHEN esod.rent_length_type = 1 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_short,
SUM(CASE WHEN esod.rent_length_type = 2 AND esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable_long,
SUM(CASE WHEN esod.statement_detail_status=0 AND NOW()>esod.statement_expect_pay_time THEN esod.statement_detail_amount ELSE 0 END ) un_receivable
 FROM erp_sub_company esc LEFT JOIN
(
SELECT esod.id,esod.statement_detail_amount ,esod.statement_expect_pay_time,
eo.order_sub_company_id sub_company_id ,
eo.rent_length_type ,
eo.order_status ,eo.buyer_customer_id ,
esod.statement_detail_status
FROM erp_statement_order_detail esod
LEFT JOIN erp_order eo ON eo.id = esod.order_id AND eo.data_status=1
WHERE esod.order_type=1 AND esod.data_status=1
) esod ON esod.sub_company_id = esc.id
GROUP BY esc.id
ORDER BY esc.data_order DESC
    </select>
</mapper>
