<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.order.OrderProductMapper">

    <resultMap type="com.lxzl.erp.dataaccess.domain.order.OrderProductDO" id="OrderProductDO">
        <id column="id" property="id"/>
        <result column="order_id" property="orderId"/>
        <result column="rent_type" jdbcType="INTEGER" property="rentType" />
        <result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_sku_id" property="productSkuId"/>
        <result column="product_sku_name" property="productSkuName"/>
        <result column="product_count" property="productCount"/>
        <result column="product_unit_amount" property="productUnitAmount"/>
        <result column="product_amount" property="productAmount"/>
        <result column="rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount" />
        <result column="deposit_amount" property="depositAmount"/>
        <result column="credit_deposit_amount" property="creditDepositAmount"/>
        <result column="insurance_amount" property="insuranceAmount"/>
        <result column="product_sku_snapshot" property="productSkuSnapshot"/>
        <result column="deposit_cycle" jdbcType="INTEGER" property="depositCycle" />
        <result column="payment_cycle" jdbcType="INTEGER" property="paymentCycle" />
        <result column="pay_mode" jdbcType="INTEGER" property="payMode" />
        <result column="is_new_product" jdbcType="INTEGER" property="isNewProduct" />
        <result column="data_status" property="dataStatus"/>
        <result column="remark" property="remark"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="column_List">
        eop.id as id,eop.order_id as order_id,eop.rent_type as rent_type,eop.rent_time_length as rent_time_length,eop.product_id as product_id,eop.product_name as product_name,eop.product_sku_id as product_sku_id,eop.product_sku_name as product_sku_name,eop.product_count as product_count,eop.product_unit_amount as product_unit_amount,eop.product_amount as product_amount,eop.rent_deposit_amount as rent_deposit_amount,eop.deposit_amount as deposit_amount,eop.credit_deposit_amount as credit_deposit_amount,eop.insurance_amount as insurance_amount,eop.product_sku_snapshot as product_sku_snapshot,eop.deposit_cycle as deposit_cycle,eop.payment_cycle as payment_cycle,eop.pay_mode as pay_mode,eop.is_new_product as is_new_product,eop.data_status as data_status,eop.remark as remark,eop.create_time as create_time,eop.create_user as create_user,eop.update_time as update_time,eop.update_user as update_user
    </sql>

    <select id="findById" resultMap="OrderProductDO" parameterType="java.lang.Integer">
        select <include refid="column_List"/> from erp_order_product as eop where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="findByOrderId" resultMap="OrderProductDO" parameterType="java.lang.Integer">
        select <include refid="column_List"/> from erp_order_product as eop where order_id = #{orderId, jdbcType=INTEGER}
    </select>

    <select id="queryLastPrice" resultType="java.util.Map" parameterType="java.util.Map">
        select eop_main.rent_type,eop_main.product_unit_amount from erp_order_product eop_main inner join
        (select eop.rent_type,max(eop.id) as id from erp_order_product eop inner join erp_order eo on eo.id = eop.order_id where eo.buyer_customer_id = #{customerId, jdbcType=INTEGER} and eop.product_sku_id = #{productId, jdbcType=INTEGER} and eop.is_new_product = #{isNewProduct ,jdbcType=INTEGER} and eo.data_status = 1 and eop.data_status = 1 group by eop.rent_type) eop_max
        on eop_max.id = eop_main.id
    </select>

    <sql id="set_column_sql">
        <set>
            <if test="orderId != null">
                order_id = #{orderId, jdbcType=INTEGER},
            </if>
            <if test="rentType != null">
                rent_type = #{rentType, jdbcType=INTEGER},
            </if>
            <if test="rentTimeLength != null">
                rent_time_length = #{rentTimeLength, jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                product_id = #{productId, jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName, jdbcType=VARCHAR},
            </if>
            <if test="productSkuId != null">
                product_sku_id = #{productSkuId, jdbcType=INTEGER},
            </if>
            <if test="productSkuName != null">
                product_sku_name = #{productSkuName, jdbcType=VARCHAR},
            </if>
            <if test="productCount != null">
                product_count = #{productCount, jdbcType=INTEGER},
            </if>
            <if test="productUnitAmount != null">
                product_unit_amount = #{productUnitAmount, jdbcType=DECIMAL},
            </if>
            <if test="productAmount != null">
                product_amount = #{productAmount, jdbcType=DECIMAL},
            </if>
            <if test="rentDepositAmount != null">
                rent_deposit_amount = #{rentDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="depositAmount != null">
                deposit_amount = #{depositAmount,jdbcType=DECIMAL},
            </if>
            <if test="creditDepositAmount != null">
                credit_deposit_amount = #{creditDepositAmount,jdbcType=DECIMAL},
            </if>
            <if test="insuranceAmount != null">
                insurance_amount = #{insuranceAmount,jdbcType=DECIMAL},
            </if>
            <if test="productSkuSnapshot != null">
                product_sku_snapshot = #{productSkuSnapshot, jdbcType=VARCHAR},
            </if>
            <if test="depositCycle != null">
                deposit_cycle = #{depositCycle,jdbcType=INTEGER},
            </if>
            <if test="paymentCycle != null">
                payment_cycle = #{paymentCycle,jdbcType=INTEGER},
            </if>
            <if test="payMode != null">
                pay_mode = #{payMode, jdbcType=INTEGER},
            </if>
            <if test="isNewProduct != null">
                is_new_product = #{isNewProduct, jdbcType=INTEGER},
            </if>
            <if test="dataStatus != null">
                data_status = #{dataStatus, jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark, jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser, jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
    </sql>

    <update id="update" parameterType="com.lxzl.erp.dataaccess.domain.order.OrderProductDO">
        update erp_order_product
        <include refid="set_column_sql"/>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>
    <insert id="save" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.lxzl.erp.dataaccess.domain.order.OrderProductDO">
        INSERT INTO erp_order_product
        <include refid="set_column_sql"/>
    </insert>
    <select id="findOrderProductCountByParams" resultType="java.lang.Integer" parameterType="map">
        select count(eop.id)
        from erp_order_product eop
        <where>
            <if test="maps.queryProductParam.orderId != null">
                and eop.order_id = #{maps.queryProductParam.orderId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productId != null">
                and eop.product_id = #{maps.queryProductParam.productId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productName != null &amp;&amp; maps.queryProductParam.productName != ''">
                and eop.product_name like CONCAT('%','${maps.queryProductParam.productName}','%' )
            </if>
            <if test="maps.queryProductParam.productSkuId != null">
                and eop.product_sku_id = #{maps.queryProductParam.productSkuId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productSkuName != null &amp;&amp; maps.queryProductParam.productSkuName != ''">
                and eop.product_sku_name like CONCAT('%','${maps.queryProductParam.productSkuName}','%' )
            </if>
            <if test="true">
                and eop.data_status = 1
            </if>
        </where>
    </select>
    <select id="findOrderProductByParams" resultMap="OrderProductDO" parameterType="map">
        select
        <include refid="column_List"/>
        from erp_order_product eop left join erp_order mo on mo.id=eop.order_id
        <where>
            <if test="maps.queryProductParam.orderId != null">
                and eop.order_id = #{maps.queryProductParam.orderId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productId != null">
                and eop.product_id = #{maps.queryProductParam.productId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productName != null &amp;&amp; maps.queryProductParam.productName != ''">
                and eop.product_name like CONCAT('%','${maps.queryProductParam.productName}','%' )
            </if>
            <if test="maps.queryProductParam.productSkuId != null">
                and eop.product_sku_id = #{maps.queryProductParam.productSkuId, jdbcType=INTEGER}
            </if>
            <if test="maps.queryProductParam.productSkuName != null &amp;&amp; maps.queryProductParam.productSkuName != ''">
                and eop.product_sku_name like CONCAT('%','${maps.queryProductParam.productSkuName}','%' )
            </if>
            <if test="true">
                and eop.data_status = 1
            </if>
            <if test="maps.queryProductParam.orderStatus != null">
                and mo.order_status = #{maps.queryProductParam.orderStatus, jdbcType=INTEGER}
            </if>
        </where>
        LIMIT #{maps.start},#{maps.pageSize}
        ORDER BY mo.create_time DESC
    </select>
</mapper>