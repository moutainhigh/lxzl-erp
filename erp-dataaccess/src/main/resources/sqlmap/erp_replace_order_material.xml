<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.replace.ReplaceOrderMaterialMapper">

	<resultMap id="ReplaceOrderMaterialDO" type="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderMaterialDO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="replace_order_id" jdbcType="INTEGER" property="replaceOrderId" />
		<result column="replace_order_no" jdbcType="VARCHAR" property="replaceOrderNo" />
		<result column="old_order_material_id" jdbcType="INTEGER" property="oldOrderMaterialId" />
		<result column="old_material_entry" jdbcType="INTEGER" property="oldMaterialEntry" />
		<result column="new_order_material_id" jdbcType="INTEGER" property="newOrderMaterialId" />
		<result column="rent_type" jdbcType="INTEGER" property="rentType" />
		<result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
		<result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
		<result column="deposit_cycle" jdbcType="INTEGER" property="depositCycle" />
		<result column="payment_cycle" jdbcType="INTEGER" property="paymentCycle" />
		<result column="pay_mode" jdbcType="INTEGER" property="payMode" />
		<result column="old_material_unit_amount" jdbcType="DECIMAL" property="oldMaterialUnitAmount" />
		<result column="material_id" jdbcType="INTEGER" property="materialId" />
		<result column="material_name" jdbcType="VARCHAR" property="materialName" />
		<result column="replace_material_count" jdbcType="INTEGER" property="replaceMaterialCount" />
		<result column="material_unit_amount" jdbcType="DECIMAL" property="materialUnitAmount" />
		<result column="rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount" />
		<result column="deposit_amount" jdbcType="DECIMAL" property="depositAmount" />
		<result column="credit_deposit_amount" jdbcType="DECIMAL" property="creditDepositAmount" />
		<result column="is_new_material" jdbcType="INTEGER" property="isNewMaterial" />
		<result column="data_status" jdbcType="INTEGER" property="dataStatus" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="VARCHAR" property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR" property="updateUser" />
		<result column="real_replace_material_count" jdbcType="INTEGER" property="realReplaceMaterialCount" />
		<result column="is_relet_order_replace" jdbcType="INTEGER" property="isReletOrderReplace" />
		<result column="relet_order_item_id" jdbcType="INTEGER" property="reletOrderItemId" />
	</resultMap>

	<sql id="column_List">
		erom.id,erom.replace_order_id,erom.replace_order_no,erom.old_order_material_id,erom.old_material_entry,erom.new_order_material_id,erom.rent_type,erom.rent_time_length,erom.rent_length_type,erom.deposit_cycle,erom.payment_cycle,erom.pay_mode,erom.old_material_unit_amount,erom.material_id,erom.material_name,erom.replace_material_count,erom.material_unit_amount,erom.rent_deposit_amount,erom.deposit_amount,erom.credit_deposit_amount,erom.is_new_material,erom.data_status,erom.remark,erom.create_time,erom.create_user,erom.update_time,erom.update_user,erom.real_replace_material_count,erom.is_relet_order_replace,erom.relet_order_item_id
	</sql>

	<select id="findById" resultMap="ReplaceOrderMaterialDO" parameterType="java.lang.Integer">
		SELECT <include refid="column_List"/> FROM erp_replace_order_material erom 
		WHERE erom.id = #{id, jdbcType=INTEGER} AND erom.data_status = 1 
	</select>

	<select id="listCount" resultType="java.lang.Integer" parameterType="map">
		SELECT count(erom.id) FROM erp_replace_order_material erom 
		<where>
			<if test="true">
				AND erom.data_status = 1
			</if>
		</where>
	</select>

	<select id="listPage" resultMap="ReplaceOrderMaterialDO" parameterType="map">
		SELECT <include refid="column_List"/> FROM erp_replace_order_material erom 
		<where>
			<if test="true">
				AND erom.data_status = 1
			</if>
		</where>
		LIMIT #{maps.start},#{maps.pageSize}
	</select>

	<sql id="set_column_sql">
		<set>
			<if test="replaceOrderId != null">
				replace_order_id = #{replaceOrderId,jdbcType=INTEGER},
			</if>
			<if test="replaceOrderNo != null">
				replace_order_no = #{replaceOrderNo,jdbcType=VARCHAR},
			</if>
			<if test="oldOrderMaterialId != null">
				old_order_material_id = #{oldOrderMaterialId,jdbcType=INTEGER},
			</if>
			<if test="oldMaterialEntry != null">
				old_material_entry = #{oldMaterialEntry,jdbcType=INTEGER},
			</if>
			<if test="newOrderMaterialId != null">
				new_order_material_id = #{newOrderMaterialId,jdbcType=INTEGER},
			</if>
			<if test="rentType != null">
				rent_type = #{rentType,jdbcType=INTEGER},
			</if>
			<if test="rentTimeLength != null">
				rent_time_length = #{rentTimeLength,jdbcType=INTEGER},
			</if>
			<if test="rentLengthType != null">
				rent_length_type = #{rentLengthType,jdbcType=INTEGER},
			</if>
			<if test="depositCycle != null">
				deposit_cycle = #{depositCycle,jdbcType=INTEGER},
			</if>
			<if test="paymentCycle != null">
				payment_cycle = #{paymentCycle,jdbcType=INTEGER},
			</if>
			<if test="payMode != null">
				pay_mode = #{payMode,jdbcType=INTEGER},
			</if>
			<if test="oldMaterialUnitAmount != null">
				old_material_unit_amount = #{oldMaterialUnitAmount,jdbcType=DECIMAL},
			</if>
			<if test="materialId != null">
				material_id = #{materialId,jdbcType=INTEGER},
			</if>
			<if test="materialName != null">
				material_name = #{materialName,jdbcType=VARCHAR},
			</if>
			<if test="replaceMaterialCount != null">
				replace_material_count = #{replaceMaterialCount,jdbcType=INTEGER},
			</if>
			<if test="materialUnitAmount != null">
				material_unit_amount = #{materialUnitAmount,jdbcType=DECIMAL},
			</if>
			<if test="rentDepositAmount != null">
				rent_deposit_amount = #{rentDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="depositAmount != null">
				deposit_amount = #{depositAmount,jdbcType=DECIMAL},
			</if>
			<if test="creditDepositAmount != null">
				credit_deposit_amount = #{creditDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="isNewMaterial != null">
				is_new_material = #{isNewMaterial,jdbcType=INTEGER},
			</if>
			<if test="dataStatus != null">
				data_status = #{dataStatus,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="realReplaceMaterialCount != null">
				real_replace_material_count = #{realReplaceMaterialCount,jdbcType=INTEGER},
			</if>
			<if test="isReletOrderReplace != null">
				is_relet_order_replace = #{isReletOrderReplace,jdbcType=INTEGER},
			</if>
			<if test="reletOrderItemId != null">
				relet_order_item_id = #{reletOrderItemId,jdbcType=INTEGER},
			</if>
		</set>
	</sql>

	<insert id="save" keyProperty="id" useGeneratedKeys="true" parameterType="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderMaterialDO">
		INSERT INTO erp_replace_order_material <include refid="set_column_sql"/>
	</insert>

	<update id="update" parameterType="com.lxzl.erp.dataaccess.domain.replace.ReplaceOrderMaterialDO">
		UPDATE erp_replace_order_material <include refid="set_column_sql"/> WHERE id = #{id, jdbcType=INTEGER}
	</update>

	<insert id="saveList" parameterType="java.util.ArrayList" >
		INSERT INTO erp_replace_order_material (replace_order_id,replace_order_no,old_order_material_id,old_material_entry,new_order_material_id,rent_type,rent_time_length,rent_length_type,deposit_cycle,payment_cycle,pay_mode,
		old_material_unit_amount,material_id,material_name,replace_material_count,material_unit_amount,rent_deposit_amount,deposit_amount,credit_deposit_amount,is_new_material,data_status,remark,create_time,create_user,update_time,
		update_user,real_replace_material_count,is_relet_order_replace,relet_order_item_id)
		values
		<foreach collection="list" item="replaceOrderMaterialDO" separator="," >
			(#{replaceOrderMaterialDO.replaceOrderId}, #{replaceOrderMaterialDO.replaceOrderNo},#{replaceOrderMaterialDO.oldOrderMaterialId},
			#{replaceOrderMaterialDO.oldMaterialEntry},#{replaceOrderMaterialDO.newOrderMaterialId},#{replaceOrderMaterialDO.rentType},#{replaceOrderMaterialDO.rentTimeLength},
			#{replaceOrderMaterialDO.rentLengthType},#{replaceOrderMaterialDO.depositCycle},#{replaceOrderMaterialDO.paymentCycle},
			#{replaceOrderMaterialDO.payMode},#{replaceOrderMaterialDO.oldMaterialUnitAmount},#{replaceOrderMaterialDO.materialId},#{replaceOrderMaterialDO.materialName},
			#{replaceOrderMaterialDO.replaceMaterialCount},#{replaceOrderMaterialDO.materialUnitAmount},#{replaceOrderMaterialDO.rentDepositAmount},
			#{replaceOrderMaterialDO.rentDepositAmount},#{replaceOrderMaterialDO.depositAmount},#{replaceOrderMaterialDO.creditDepositAmount},
			#{replaceOrderMaterialDO.isNewProduct},#{replaceOrderMaterialDO.dataStatus},#{replaceOrderMaterialDO.remark},#{replaceOrderMaterialDO.realReplaceMaterialCount},
			#{replaceOrderMaterialDO.isReletOrderReplace},#{replaceOrderMaterialDO.reletOrderItemId})
		</foreach>
	</insert>

	<update id="updateListForCancel" parameterType="java.util.ArrayList">
		update erp_replace_order_material
		SET
		<trim >
			update_user =
			<foreach item="replaceOrderMaterialDO" collection="replaceOrderMaterialDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderMaterialDO.id} then #{replaceOrderMaterialDO.updateUser}
			</foreach>
		</trim>
		<trim prefix=",">
			data_status =
			<foreach item="replaceOrderMaterialDO" collection="replaceOrderMaterialDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderMaterialDO.id} then #{replaceOrderMaterialDO.dataStatus}
			</foreach>
		</trim>
		<trim prefix=",">
			update_time =
			<foreach item="replaceOrderMaterialDO" collection="replaceOrderMaterialDOList"  index="index" separator=" " open="case id" close="end">
				when #{replaceOrderMaterialDO.id} then #{replaceOrderMaterialDO.updateTime}
			</foreach>
		</trim>
		WHERE id in
		<foreach collection="replaceOrderMaterialDOList" index="index" item="replaceOrderMaterialDO" separator="," open="(" close=")">
			#{replaceOrderMaterialDO.id,jdbcType=INTEGER}
		</foreach>
	</update>
</mapper>