<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxzl.erp.dataaccess.dao.mysql.order.OrderMaterialMapper">

	<resultMap id="OrderMaterialDO" type="com.lxzl.erp.dataaccess.domain.order.OrderMaterialDO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="rent_type" jdbcType="INTEGER" property="rentType" />
		<result column="rent_time_length" jdbcType="INTEGER" property="rentTimeLength" />
		<result column="rent_length_type" jdbcType="INTEGER" property="rentLengthType" />
		<result column="material_id" jdbcType="INTEGER" property="materialId" />
		<result column="material_name" jdbcType="VARCHAR" property="materialName" />
		<result column="material_count" jdbcType="INTEGER" property="materialCount" />
		<result column="stable_material_count" jdbcType="INTEGER" property="stableMaterialCount"/>
		<result column="material_unit_amount" jdbcType="DECIMAL" property="materialUnitAmount" />
		<result column="material_amount" jdbcType="DECIMAL" property="materialAmount" />
		<result column="rent_deposit_amount" jdbcType="DECIMAL" property="rentDepositAmount" />
		<result column="deposit_amount" jdbcType="DECIMAL" property="depositAmount" />
		<result column="credit_deposit_amount" jdbcType="DECIMAL" property="creditDepositAmount" />
		<result column="insurance_amount" jdbcType="DECIMAL" property="insuranceAmount" />
		<result column="material_snapshot" jdbcType="VARCHAR" property="materialSnapshot" />
		<result column="deposit_cycle" jdbcType="INTEGER" property="depositCycle" />
		<result column="payment_cycle" jdbcType="INTEGER" property="paymentCycle" />
		<result column="pay_mode" jdbcType="INTEGER" property="payMode" />
		<result column="is_new_material" jdbcType="INTEGER" property="isNewMaterial" />
		<result column="renting_material_count" jdbcType="INTEGER" property="rentingMaterialCount" />
		<result column="FEntry_id" property="FEntryID"/>
		<result column="product_number" property="productNumber"/>
		<result column="order_joint_product_id" jdbcType="INTEGER" property="orderJointProductId" />
		<result column="joint_material_id" jdbcType="INTEGER" property="jointMaterialId" />
		<result column="is_item_delivered" jdbcType="INTEGER" property="isItemDelivered" />
		<result column="test_machine_order_material_id" jdbcType="INTEGER" property="testMachineOrderMaterialId" />
		<result column="data_status" jdbcType="INTEGER" property="dataStatus" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="VARCHAR" property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR" property="updateUser" />
	</resultMap>

	<sql id="column_List">
		eom.id,eom.order_id,eom.material_id,eom.rent_type as rent_type,eom.rent_time_length as rent_time_length, eom.rent_length_type as rent_length_type, eom.material_name,eom.material_count,eom.material_unit_amount,eom.material_amount,eom.rent_deposit_amount,eom.deposit_amount,eom.credit_deposit_amount,eom.insurance_amount,eom.material_snapshot,eom.deposit_cycle,eom.payment_cycle,eom.pay_mode,eom.is_new_material,eom.renting_material_count,eom.data_status,eom.remark,eom.create_time,eom.create_user,eom.update_time,eom.update_user,eom.FEntry_id as FEntry_id, eom.product_number as product_number,eom.order_joint_product_id as order_joint_product_id,eom.joint_material_id as joint_material_id,eom.stable_material_count as stable_material_count,eom.is_item_delivered as is_item_delivered,eom.test_machine_order_material_id as test_machine_order_material_id
	</sql>

	<select id="queryLastPrice" resultType="java.util.Map" parameterType="java.util.Map">
		select eom_main.rent_type,eom_main.product_unit_amount from erp_order_product eom_main inner join
		(select eom.rent_type,max(eom.id) as id from erp_order_material eom inner join erp_order eo on eo.id = eom.order_id where eo.buyer_customer_id = #{customerId, jdbcType=INTEGER} and eom.material_id = #{materialId, jdbcType=INTEGER} and eom.is_new_material = #{isNewMaterial, jdbcType=INTEGER} and eo.data_status = 1 and eom.data_status = 1 group by eom.rent_type) eom_max
		on eom_max.id = eom_main.id
	</select>

	<select id="findById" resultMap="OrderMaterialDO" parameterType="java.lang.Integer">
		SELECT <include refid="column_List"/> FROM erp_order_material eom
		WHERE eom.id = #{id, jdbcType=INTEGER} AND eom.data_status = 1
	</select>

	<select id="findByOrderId" resultMap="OrderMaterialDO" parameterType="java.lang.Integer">
		SELECT <include refid="column_List"/> FROM erp_order_material eom
		WHERE eom.order_id = #{orderId, jdbcType=INTEGER} AND eom.data_status = 1
	</select>

	<select id="listCount" resultType="java.lang.Integer" parameterType="map">
		SELECT count(eom.id) FROM erp_order_material eom
		<where>
			<if test="true">
				AND eom.data_status = 1
			</if>
		</where>
	</select>

	<select id="listPage" resultMap="OrderMaterialDO" parameterType="map">
		SELECT <include refid="column_List"/> FROM erp_order_material eom
		<where>
			<if test="true">
				AND eom.data_status = 1
			</if>
		</where>
		LIMIT #{maps.start},#{maps.pageSize}
	</select>

	<sql id="set_column_sql">
		<set>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="rentType != null">
				rent_type = #{rentType, jdbcType=INTEGER},
			</if>
			<if test="rentTimeLength != null">
				rent_time_length = #{rentTimeLength, jdbcType=INTEGER},
			</if>
			<if test="rentLengthType != null">
				rent_length_type = #{rentLengthType, jdbcType=INTEGER},
			</if>
			<if test="materialId != null">
				material_id = #{materialId,jdbcType=INTEGER},
			</if>
			<if test="materialName != null">
				material_name = #{materialName,jdbcType=VARCHAR},
			</if>
			<if test="materialCount != null">
				material_count = #{materialCount,jdbcType=INTEGER},
			</if>
			<if test="stableMaterialCount != null">
				stable_material_count = #{stableMaterialCount,jdbcType=INTEGER},
			</if>
			<if test="materialUnitAmount != null">
				material_unit_amount = #{materialUnitAmount,jdbcType=DECIMAL},
			</if>
			<if test="materialAmount != null">
				material_amount = #{materialAmount,jdbcType=DECIMAL},
			</if>
			<if test="rentDepositAmount != null">
				rent_deposit_amount = #{rentDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="depositAmount != null">
				deposit_amount = #{depositAmount,jdbcType=DECIMAL},
			</if>
			<if test="creditDepositAmount != null">
				credit_deposit_amount = #{creditDepositAmount,jdbcType=DECIMAL},
			</if>
			<if test="insuranceAmount != null">
				insurance_amount = #{insuranceAmount,jdbcType=DECIMAL},
			</if>
			<if test="materialSnapshot != null">
				material_snapshot = #{materialSnapshot,jdbcType=VARCHAR},
			</if>
			<if test="depositCycle != null">
				deposit_cycle = #{depositCycle,jdbcType=INTEGER},
			</if>
			<if test="paymentCycle != null">
				payment_cycle = #{paymentCycle,jdbcType=INTEGER},
			</if>
			<if test="payMode != null">
				pay_mode = #{payMode, jdbcType=INTEGER},
			</if>
			<if test="isNewMaterial != null">
				is_new_material = #{isNewMaterial, jdbcType=INTEGER},
			</if>
			<if test="rentingMaterialCount != null">
				renting_material_count = #{rentingMaterialCount, jdbcType=INTEGER},
			</if>
			<if test="FEntryID != null">
				FEntry_id = #{FEntryID, jdbcType=INTEGER},
			</if>
			<if test="productNumber != null">
				product_number = #{productNumber, jdbcType=VARCHAR},
			</if>
			<if test="dataStatus != null">
				data_status = #{dataStatus,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="orderJointProductId != null">
				order_joint_product_id = #{orderJointProductId, jdbcType=INTEGER},
			</if>
			<if test="jointMaterialId != null">
				joint_material_id = #{jointMaterialId, jdbcType=INTEGER},
			</if>
			<if test="isItemDelivered != null">
				is_item_delivered = #{isItemDelivered, jdbcType=INTEGER},
			</if>
			<if test="testMachineOrderMaterialId != null">
				test_machine_order_material_id = #{testMachineOrderMaterialId, jdbcType=INTEGER},
			</if>
		</set>
	</sql>

	<insert id="save" keyProperty="id" useGeneratedKeys="true" parameterType="com.lxzl.erp.dataaccess.domain.order.OrderMaterialDO">
		INSERT INTO erp_order_material <include refid="set_column_sql"/>
	</insert>

	<update id="update" parameterType="com.lxzl.erp.dataaccess.domain.order.OrderMaterialDO">
		UPDATE erp_order_material <include refid="set_column_sql"/> WHERE id = #{id, jdbcType=INTEGER}
	</update>

	<select id="findOrderMaterialByName" resultMap="OrderMaterialDO" parameterType="java.lang.String">
		SELECT <include refid="set_column_sql"/> FROM erp_order_material WHERE material_name = #{materialName} AND data_status = 1
	</select>
	<select id="findTotalRentingMaterialCountByOrderId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		SELECT sum(renting_material_count) FROM erp_order_material WHERE order_id = #{orderId} AND data_status = 1
	</select>
	<select id="findK3OrderMaterial" resultType="OrderMaterialDO" parameterType="java.util.Map">
		SELECT <include refid="column_List"/> FROM erp_order_material eom WHERE order_id = #{orderId} AND FEntry_id = #{FEntryId} AND data_status = 1
	</select>

	<select id="findByOrderIdList" resultMap="OrderMaterialDO">
		SELECT <include refid="column_List"/> FROM erp_order_material eom
		WHERE eom.order_id IN
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
		AND eom.data_status = 1
	</select>

	<update id="batchUpdateRentingCount" parameterType="java.util.List">
		update erp_order_material
		SET
		<trim>
			renting_material_count =
			<foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
				when #{item.id,jdbcType=INTEGER} then #{item.rentingMaterialCount}
			</foreach>
		</trim>
		<trim prefix=",">
			update_time =
			<foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
				when #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
			</foreach>
		</trim>
		<trim prefix=",">
			update_user =
			<foreach collection="list" item="item" index="index" separator=" " open="case id" close="end">
				when #{item.id,jdbcType=INTEGER} then #{item.updateUser,jdbcType=DECIMAL}
			</foreach>
		</trim>
		WHERE id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</update>

	<select id="listByOrderIds" resultMap="OrderMaterialDO" parameterType="java.util.Set">
		SELECT
		<include refid="column_List"/>
		FROM erp_order_material eom
		WHERE eom.data_status = 1
		AND eom.order_id in
		<foreach collection="orderIds" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<select id="findByOrderIdAndIsItemDelivered" resultMap="OrderMaterialDO" parameterType="java.lang.Integer">
		SELECT <include refid="column_List"/> FROM erp_order_material eom
		WHERE eom.order_id = #{orderId, jdbcType=INTEGER} AND eom.is_item_delivered = 1 AND eom.data_status = 1
	</select>

</mapper>